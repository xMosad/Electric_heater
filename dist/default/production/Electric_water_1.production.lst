

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jul 12 20:43:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	functab,global,class=ENTRY,delta=2
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.10
    70                           ; Generated 31/07/2019 GMT
    71                           ; 
    72                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F877A Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0086                     	;# 
   141  0087                     	;# 
   142  0088                     	;# 
   143  0089                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009C                     	;# 
   334  009D                     	;# 
   335  009E                     	;# 
   336  009F                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000D                     	;# 
   357  000E                     	;# 
   358  000E                     	;# 
   359  000F                     	;# 
   360  0010                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0014                     	;# 
   365  0015                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  001D                     	;# 
   376  001E                     	;# 
   377  001F                     	;# 
   378  0081                     	;# 
   379  0085                     	;# 
   380  0086                     	;# 
   381  0087                     	;# 
   382  0088                     	;# 
   383  0089                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  0091                     	;# 
   508  0092                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  009F                     	;# 
   517  010C                     	;# 
   518  010D                     	;# 
   519  010E                     	;# 
   520  010F                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000D                     	;# 
   537  000E                     	;# 
   538  000E                     	;# 
   539  000F                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0013                     	;# 
   544  0014                     	;# 
   545  0015                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001D                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  0081                     	;# 
   559  0085                     	;# 
   560  0086                     	;# 
   561  0087                     	;# 
   562  0088                     	;# 
   563  0089                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0093                     	;# 
   570  0094                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  009F                     	;# 
   577  010C                     	;# 
   578  010D                     	;# 
   579  010E                     	;# 
   580  010F                     	;# 
   581  018C                     	;# 
   582  018D                     	;# 
   583  0000                     	;# 
   584  0001                     	;# 
   585  0002                     	;# 
   586  0003                     	;# 
   587  0004                     	;# 
   588  0005                     	;# 
   589  0006                     	;# 
   590  0007                     	;# 
   591  0008                     	;# 
   592  0009                     	;# 
   593  000A                     	;# 
   594  000B                     	;# 
   595  000C                     	;# 
   596  000D                     	;# 
   597  000E                     	;# 
   598  000E                     	;# 
   599  000F                     	;# 
   600  0010                     	;# 
   601  0011                     	;# 
   602  0012                     	;# 
   603  0013                     	;# 
   604  0014                     	;# 
   605  0015                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  001B                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001D                     	;# 
   616  001E                     	;# 
   617  001F                     	;# 
   618  0081                     	;# 
   619  0085                     	;# 
   620  0086                     	;# 
   621  0087                     	;# 
   622  0088                     	;# 
   623  0089                     	;# 
   624  008C                     	;# 
   625  008D                     	;# 
   626  008E                     	;# 
   627  0091                     	;# 
   628  0092                     	;# 
   629  0093                     	;# 
   630  0094                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  009F                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  000E                     	;# 
   659  000F                     	;# 
   660  0010                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0014                     	;# 
   665  0015                     	;# 
   666  0015                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  0081                     	;# 
   679  0085                     	;# 
   680  0086                     	;# 
   681  0087                     	;# 
   682  0088                     	;# 
   683  0089                     	;# 
   684  008C                     	;# 
   685  008D                     	;# 
   686  008E                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0094                     	;# 
   691  0098                     	;# 
   692  0099                     	;# 
   693  009C                     	;# 
   694  009D                     	;# 
   695  009E                     	;# 
   696  009F                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703                           
   704                           	psect	idataCOMMON
   705  07FF                     __pidataCOMMON:	
   706                           
   707                           ;initializer for _power_mode
   708  07FF  3401               	retlw	1
   709  0010                     _T1CON	set	16
   710  000F                     _TMR1H	set	15
   711  000E                     _TMR1L	set	14
   712  000C                     _PIR1	set	12
   713  0007                     _PORTC	set	7
   714  0006                     _PORTB	set	6
   715  000B                     _INTCON	set	11
   716  0005                     _PORTA	set	5
   717  0008                     _PORTD	set	8
   718  0013                     _SSPBUF	set	19
   719  0014                     _SSPCON	set	20
   720  001E                     _ADRESH	set	30
   721  001F                     _ADCON0	set	31
   722  0063                     _SSPIF	set	99
   723  008C                     _PIE1	set	140
   724  0086                     _TRISB	set	134
   725  0085                     _TRISA	set	133
   726  0088                     _TRISD	set	136
   727  0087                     _TRISC	set	135
   728  0093                     _SSPADD	set	147
   729  0091                     _SSPCON2	set	145
   730  0094                     _SSPSTAT	set	148
   731  009E                     _ADRESL	set	158
   732  009F                     _ADCON1	set	159
   733                           
   734                           ; #config settings
   735  0000                     
   736                           	psect	cinit
   737  0015                     start_initialization:	
   738  0015                     __initialization:	
   739                           
   740                           ; Initialize objects allocated to COMMON
   741  0015  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   742  001A  00FD               	movwf	__pdataCOMMON& (0+127)
   743                           
   744                           ; Clear objects allocated to BANK1
   745  001B  1383               	bcf	3,7	;select IRP bank0
   746  001C  30A0               	movlw	low __pbssBANK1
   747  001D  0084               	movwf	4
   748  001E  30EC               	movlw	low (__pbssBANK1+76)
   749  001F  160A  118A  25B8  120A  118A  	fcall	clear_ram0
   750                           
   751                           ; Clear objects allocated to BANK0
   752  0024  3060               	movlw	low __pbssBANK0
   753  0025  0084               	movwf	4
   754  0026  3068               	movlw	low (__pbssBANK0+8)
   755  0027  160A  118A  25B8  120A  118A  	fcall	clear_ram0
   756                           
   757                           ; Clear objects allocated to COMMON
   758  002C  01FB               	clrf	__pbssCOMMON& (0+127)
   759  002D  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   760  002E                     end_of_initialization:	
   761                           ;End of C runtime variable initialization code
   762                           
   763  002E                     __end_of__initialization:	
   764  002E  0183               	clrf	3
   765  002F  120A  158A  2D44   	ljmp	_main	;jump to C main() function
   766                           
   767                           	psect	bssCOMMON
   768  007B                     __pbssCOMMON:	
   769  007B                     _timer_value:	
   770  007B                     	ds	2
   771                           
   772                           	psect	dataCOMMON
   773  007D                     __pdataCOMMON:	
   774  007D                     _power_mode:	
   775  007D                     	ds	1
   776                           
   777                           	psect	bssBANK0
   778  0060                     __pbssBANK0:	
   779  0060                     _i:	
   780  0060                     	ds	1
   781  0061                     _blink:	
   782  0061                     	ds	1
   783  0062                     _temp:	
   784  0062                     	ds	1
   785  0063                     _ones:	
   786  0063                     	ds	1
   787  0064                     _tens:	
   788  0064                     	ds	1
   789  0065                     _mode:	
   790  0065                     	ds	1
   791  0066                     _measured_temp:	
   792  0066                     	ds	1
   793  0067                     _set_temp:	
   794  0067                     	ds	1
   795                           
   796                           	psect	bssBANK1
   797  00A0                     __pbssBANK1:	
   798  00A0                     _SCH_tasks_G:	
   799  00A0                     	ds	42
   800  00CA                     _temp_hold_array:	
   801  00CA                     	ds	20
   802  00DE                     _sw_info:	
   803  00DE                     	ds	6
   804  00E4                     _Error_tick_count_G:	
   805  00E4                     	ds	2
   806  00E6                     _switch_wait:	
   807  00E6                     	ds	2
   808  00E8                     _Error_code_G:	
   809  00E8                     	ds	1
   810  00E9                     _Last_error_code_G:	
   811  00E9                     	ds	1
   812  00EA                     _state:	
   813  00EA                     	ds	1
   814  00EB                     _ssd_select:	
   815  00EB                     	ds	1
   816                           
   817                           	psect	clrtext
   818  15B8                     clear_ram0:	
   819                           ;	Called with FSR containing the base address, and
   820                           ;	W with the last address+1
   821                           
   822  15B8  0064               	clrwdt	;clear the watchdog before getting into this loop
   823  15B9                     clrloop0:	
   824  15B9  0180               	clrf	0	;clear RAM location pointed to by FSR
   825  15BA  0A84               	incf	4,f	;increment pointer
   826  15BB  0604               	xorwf	4,w	;XOR with final address
   827  15BC  1903               	btfsc	3,2	;have we reached the end yet?
   828  15BD  3400               	retlw	0	;all done for this memory range, return
   829  15BE  0604               	xorwf	4,w	;XOR again to restore value
   830  15BF  2DB9               	goto	clrloop0	;do the next byte
   831                           
   832                           	psect	cstackBANK3
   833  0190                     __pcstackBANK3:	
   834  0190                     ??_temp_sensor_read:	
   835                           
   836                           ; 1 bytes @ 0x0
   837  0190                     	ds	5
   838  0195                     _SCH_Dispatch_Tasks$978:	
   839                           
   840                           ; 1 bytes @ 0x5
   841  0195                     	ds	1
   842  0196                     SCH_Dispatch_Tasks@Index:	
   843                           
   844                           ; 1 bytes @ 0x6
   845  0196                     	ds	1
   846                           
   847                           	psect	cstackBANK1
   848  00EC                     __pcstackBANK1:	
   849  00EC                     ??_SCH_Dispatch_Tasks:	
   850                           
   851                           ; 1 bytes @ 0x0
   852  00EC                     	ds	3
   853                           
   854                           	psect	cstackCOMMON
   855  0070                     __pcstackCOMMON:	
   856  0070                     ?_temp_sensor_init:	
   857  0070                     ?_temp_control_init:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_switch_init:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_ssd_init:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_EEPROM_init:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_SCH_Init:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_get_set_temp:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_temp_sensor_read:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_ssd_update:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_led:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_temp_set:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_switch_scan:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_ssd_blink:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_SCH_Dispatch_Tasks:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_sw_action:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_temp_control_off:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_SCH_Stop:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_SCH_Start:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ??_SCH_Start:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_SCH_Delete_Task:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_SCH_Report_Status:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_main:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_ADC_Init:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_I2C_Wait:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_I2C1_Start:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_I2C1_Stop:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_I2C1_Wr:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_I2C1_Rd:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_display7s:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_ssd_turn_off:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_average:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ?_SCH_Update:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_SCH_Go_To_Sleep:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?i1_ssd_turn_off:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ??i1_ssd_turn_off:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ?i1_temp_control_off:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ??i1_temp_control_off:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ?i1___bmul:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     i1___bmul@multiplicand:	
   969                           ; 1 bytes @ 0x0
   970                           
   971                           
   972                           ; 1 bytes @ 0x0
   973  0070                     	ds	1
   974  0071                     ??i1___bmul:	
   975                           
   976                           ; 1 bytes @ 0x1
   977  0071                     	ds	1
   978  0072                     i1___bmul@multiplier:	
   979                           
   980                           ; 1 bytes @ 0x2
   981  0072                     	ds	1
   982  0073                     i1___bmul@product:	
   983                           
   984                           ; 1 bytes @ 0x3
   985  0073                     	ds	1
   986  0074                     ??_SCH_Stop:	
   987                           
   988                           ; 1 bytes @ 0x4
   989  0074                     	ds	4
   990  0078                     SCH_Stop@i:	
   991                           
   992                           ; 2 bytes @ 0x8
   993  0078                     	ds	2
   994  007A                     SCH_Update@Index:	
   995                           
   996                           ; 1 bytes @ 0xA
   997  007A                     	ds	1
   998                           
   999                           	psect	cstackBANK0
  1000  0020                     __pcstackBANK0:	
  1001  0020                     ??_SCH_Update:	
  1002                           
  1003                           ; 1 bytes @ 0x0
  1004  0020                     	ds	8
  1005  0028                     ??_temp_control_init:	
  1006  0028                     ??_switch_init:	
  1007                           ; 1 bytes @ 0x8
  1008                           
  1009  0028                     ??_ssd_init:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012  0028                     ??_led:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015  0028                     ??_temp_control_off:	
  1016                           ; 1 bytes @ 0x8
  1017                           
  1018  0028                     ??_SCH_Report_Status:	
  1019                           ; 1 bytes @ 0x8
  1020                           
  1021  0028                     ??_ADC_Init:	
  1022                           ; 1 bytes @ 0x8
  1023                           
  1024  0028                     ??_I2C_Wait:	
  1025                           ; 1 bytes @ 0x8
  1026                           
  1027  0028                     ??_I2C1_Start:	
  1028                           ; 1 bytes @ 0x8
  1029                           
  1030  0028                     ??_I2C1_Stop:	
  1031                           ; 1 bytes @ 0x8
  1032                           
  1033  0028                     ??_I2C1_Wr:	
  1034                           ; 1 bytes @ 0x8
  1035                           
  1036  0028                     ??_I2C1_Rd:	
  1037                           ; 1 bytes @ 0x8
  1038                           
  1039  0028                     ??_display7s:	
  1040                           ; 1 bytes @ 0x8
  1041                           
  1042  0028                     ??_ssd_turn_off:	
  1043                           ; 1 bytes @ 0x8
  1044                           
  1045  0028                     ??_SCH_Go_To_Sleep:	
  1046                           ; 1 bytes @ 0x8
  1047                           
  1048  0028                     ?___bmul:	
  1049                           ; 1 bytes @ 0x8
  1050                           
  1051  0028                     ?__Umul8_16:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054  0028                     ?_ADC_Read:	
  1055                           ; 2 bytes @ 0x8
  1056                           
  1057  0028                     ?___awdiv:	
  1058                           ; 2 bytes @ 0x8
  1059                           
  1060  0028                     ?___awmod:	
  1061                           ; 2 bytes @ 0x8
  1062                           
  1063  0028                     ?___lwdiv:	
  1064                           ; 2 bytes @ 0x8
  1065                           
  1066  0028                     ?___lldiv:	
  1067                           ; 2 bytes @ 0x8
  1068                           
  1069  0028                     I2C1_Wr@_data:	
  1070                           ; 4 bytes @ 0x8
  1071                           
  1072  0028                     ___bmul@multiplicand:	
  1073                           ; 1 bytes @ 0x8
  1074                           
  1075  0028                     __Umul8_16@multiplicand:	
  1076                           ; 1 bytes @ 0x8
  1077                           
  1078  0028                     ___awdiv@divisor:	
  1079                           ; 1 bytes @ 0x8
  1080                           
  1081  0028                     ___awmod@divisor:	
  1082                           ; 2 bytes @ 0x8
  1083                           
  1084  0028                     ___lwdiv@divisor:	
  1085                           ; 2 bytes @ 0x8
  1086                           
  1087  0028                     ___lldiv@divisor:	
  1088                           ; 2 bytes @ 0x8
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x8
  1092  0028                     	ds	1
  1093  0029                     ??_temp_sensor_init:	
  1094  0029                     ??_temp_set:	
  1095                           ; 1 bytes @ 0x9
  1096                           
  1097  0029                     ??_ssd_blink:	
  1098                           ; 1 bytes @ 0x9
  1099                           
  1100  0029                     ?_EEPROM_write:	
  1101                           ; 1 bytes @ 0x9
  1102                           
  1103  0029                     ?_EEPROM_read:	
  1104                           ; 1 bytes @ 0x9
  1105                           
  1106  0029                     ??___bmul:	
  1107                           ; 1 bytes @ 0x9
  1108                           
  1109  0029                     EEPROM_write@address:	
  1110                           ; 1 bytes @ 0x9
  1111                           
  1112  0029                     EEPROM_read@address:	
  1113                           ; 2 bytes @ 0x9
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0x9
  1117  0029                     	ds	1
  1118  002A                     ??__Umul8_16:	
  1119  002A                     ??_ADC_Read:	
  1120                           ; 1 bytes @ 0xA
  1121                           
  1122  002A                     display7s@v:	
  1123                           ; 1 bytes @ 0xA
  1124                           
  1125  002A                     ___bmul@product:	
  1126                           ; 1 bytes @ 0xA
  1127                           
  1128  002A                     ___awdiv@dividend:	
  1129                           ; 1 bytes @ 0xA
  1130                           
  1131  002A                     ___awmod@dividend:	
  1132                           ; 2 bytes @ 0xA
  1133                           
  1134  002A                     ___lwdiv@dividend:	
  1135                           ; 2 bytes @ 0xA
  1136                           
  1137                           
  1138                           ; 2 bytes @ 0xA
  1139  002A                     	ds	1
  1140  002B                     ??_EEPROM_read:	
  1141  002B                     EEPROM_write@_x:	
  1142                           ; 1 bytes @ 0xB
  1143                           
  1144  002B                     ___bmul@multiplier:	
  1145                           ; 1 bytes @ 0xB
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0xB
  1149  002B                     	ds	1
  1150  002C                     ?_SCH_Add_Task:	
  1151  002C                     ??_sw_action:	
  1152                           ; 1 bytes @ 0xC
  1153                           
  1154  002C                     ??_SCH_Delete_Task:	
  1155                           ; 1 bytes @ 0xC
  1156                           
  1157  002C                     ??_EEPROM_write:	
  1158                           ; 1 bytes @ 0xC
  1159                           
  1160  002C                     ??___awdiv:	
  1161                           ; 1 bytes @ 0xC
  1162                           
  1163  002C                     ??___awmod:	
  1164                           ; 1 bytes @ 0xC
  1165                           
  1166  002C                     ??___lwdiv:	
  1167                           ; 1 bytes @ 0xC
  1168                           
  1169  002C                     ADC_Read@channel:	
  1170                           ; 1 bytes @ 0xC
  1171                           
  1172  002C                     EEPROM_read@_x:	
  1173                           ; 1 bytes @ 0xC
  1174                           
  1175  002C                     SCH_Add_Task@DELAY:	
  1176                           ; 1 bytes @ 0xC
  1177                           
  1178  002C                     __Umul8_16@product:	
  1179                           ; 2 bytes @ 0xC
  1180                           
  1181  002C                     ___lldiv@dividend:	
  1182                           ; 2 bytes @ 0xC
  1183                           
  1184                           
  1185                           ; 4 bytes @ 0xC
  1186  002C                     	ds	1
  1187  002D                     ??_get_set_temp:	
  1188  002D                     ?___xxtofl:	
  1189                           ; 1 bytes @ 0xD
  1190                           
  1191  002D                     ___awdiv@counter:	
  1192                           ; 4 bytes @ 0xD
  1193                           
  1194  002D                     ___awmod@counter:	
  1195                           ; 1 bytes @ 0xD
  1196                           
  1197  002D                     ___lwdiv@counter:	
  1198                           ; 1 bytes @ 0xD
  1199                           
  1200  002D                     ___xxtofl@val:	
  1201                           ; 1 bytes @ 0xD
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0xD
  1205  002D                     	ds	1
  1206  002E                     ??_switch_scan:	
  1207  002E                     SCH_Delete_Task@TASK_INDEX:	
  1208                           ; 1 bytes @ 0xE
  1209                           
  1210  002E                     ___awdiv@sign:	
  1211                           ; 1 bytes @ 0xE
  1212                           
  1213  002E                     ___awmod@sign:	
  1214                           ; 1 bytes @ 0xE
  1215                           
  1216  002E                     SCH_Add_Task@PERIOD:	
  1217                           ; 1 bytes @ 0xE
  1218                           
  1219  002E                     ___lwdiv@quotient:	
  1220                           ; 2 bytes @ 0xE
  1221                           
  1222  002E                     __Umul8_16@word_mpld:	
  1223                           ; 2 bytes @ 0xE
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0xE
  1227  002E                     	ds	1
  1228  002F                     ??_SCH_Init:	
  1229  002F                     ___awdiv@quotient:	
  1230                           ; 1 bytes @ 0xF
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0xF
  1234  002F                     	ds	1
  1235  0030                     ??_SCH_Add_Task:	
  1236  0030                     ??_average:	
  1237                           ; 1 bytes @ 0x10
  1238                           
  1239  0030                     ??___lldiv:	
  1240                           ; 1 bytes @ 0x10
  1241                           
  1242  0030                     SCH_Init@i:	
  1243                           ; 1 bytes @ 0x10
  1244                           
  1245  0030                     __Umul8_16@multiplier:	
  1246                           ; 1 bytes @ 0x10
  1247                           
  1248                           
  1249                           ; 1 bytes @ 0x10
  1250  0030                     	ds	1
  1251  0031                     ??_ssd_update:	
  1252  0031                     ??___xxtofl:	
  1253                           ; 1 bytes @ 0x11
  1254                           
  1255  0031                     switch_scan@current_button:	
  1256                           ; 1 bytes @ 0x11
  1257                           
  1258  0031                     ___lldiv@quotient:	
  1259                           ; 1 bytes @ 0x11
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x11
  1263  0031                     	ds	1
  1264  0032                     SCH_Add_Task@pFunction:	
  1265                           
  1266                           ; 1 bytes @ 0x12
  1267  0032                     	ds	1
  1268  0033                     SCH_Add_Task@Index:	
  1269  0033                     average@sum:	
  1270                           ; 1 bytes @ 0x13
  1271                           
  1272                           
  1273                           ; 2 bytes @ 0x13
  1274  0033                     	ds	2
  1275  0035                     average@i:	
  1276  0035                     ___lldiv@counter:	
  1277                           ; 1 bytes @ 0x15
  1278                           
  1279  0035                     ___xxtofl@sign:	
  1280                           ; 1 bytes @ 0x15
  1281                           
  1282                           
  1283                           ; 1 bytes @ 0x15
  1284  0035                     	ds	1
  1285  0036                     ?_I2C1_Init:	
  1286  0036                     ___xxtofl@exp:	
  1287                           ; 1 bytes @ 0x16
  1288                           
  1289  0036                     I2C1_Init@freq:	
  1290                           ; 1 bytes @ 0x16
  1291                           
  1292                           
  1293                           ; 4 bytes @ 0x16
  1294  0036                     	ds	1
  1295  0037                     ___xxtofl@arg:	
  1296                           
  1297                           ; 4 bytes @ 0x17
  1298  0037                     	ds	3
  1299  003A                     ??_I2C1_Init:	
  1300                           
  1301                           ; 1 bytes @ 0x1A
  1302  003A                     	ds	1
  1303  003B                     ?___fldiv:	
  1304  003B                     ?___flmul:	
  1305                           ; 4 bytes @ 0x1B
  1306                           
  1307  003B                     ___fldiv@a:	
  1308                           ; 4 bytes @ 0x1B
  1309                           
  1310  003B                     ___flmul@b:	
  1311                           ; 4 bytes @ 0x1B
  1312                           
  1313                           
  1314                           ; 4 bytes @ 0x1B
  1315  003B                     	ds	3
  1316  003E                     ??_EEPROM_init:	
  1317                           
  1318                           ; 1 bytes @ 0x1E
  1319  003E                     	ds	1
  1320  003F                     ___fldiv@b:	
  1321  003F                     ___flmul@a:	
  1322                           ; 4 bytes @ 0x1F
  1323                           
  1324                           
  1325                           ; 4 bytes @ 0x1F
  1326  003F                     	ds	4
  1327  0043                     ??___fldiv:	
  1328  0043                     ??___flmul:	
  1329                           ; 1 bytes @ 0x23
  1330                           
  1331                           
  1332                           ; 1 bytes @ 0x23
  1333  0043                     	ds	5
  1334  0048                     ___flmul@sign:	
  1335  0048                     ___fldiv@rem:	
  1336                           ; 1 bytes @ 0x28
  1337                           
  1338                           
  1339                           ; 4 bytes @ 0x28
  1340  0048                     	ds	1
  1341  0049                     ___flmul@aexp:	
  1342                           
  1343                           ; 1 bytes @ 0x29
  1344  0049                     	ds	1
  1345  004A                     ___flmul@grs:	
  1346                           
  1347                           ; 4 bytes @ 0x2A
  1348  004A                     	ds	2
  1349  004C                     ___fldiv@sign:	
  1350                           
  1351                           ; 1 bytes @ 0x2C
  1352  004C                     	ds	1
  1353  004D                     ___fldiv@new_exp:	
  1354                           
  1355                           ; 2 bytes @ 0x2D
  1356  004D                     	ds	1
  1357  004E                     ___flmul@bexp:	
  1358                           
  1359                           ; 1 bytes @ 0x2E
  1360  004E                     	ds	1
  1361  004F                     ___fldiv@grs:	
  1362  004F                     ___flmul@prod:	
  1363                           ; 4 bytes @ 0x2F
  1364                           
  1365                           
  1366                           ; 4 bytes @ 0x2F
  1367  004F                     	ds	4
  1368  0053                     ___fldiv@bexp:	
  1369  0053                     ___flmul@temp:	
  1370                           ; 1 bytes @ 0x33
  1371                           
  1372                           
  1373                           ; 2 bytes @ 0x33
  1374  0053                     	ds	1
  1375  0054                     ___fldiv@aexp:	
  1376                           
  1377                           ; 1 bytes @ 0x34
  1378  0054                     	ds	1
  1379  0055                     ?___fltol:	
  1380  0055                     ___fltol@f1:	
  1381                           ; 4 bytes @ 0x35
  1382                           
  1383                           
  1384                           ; 4 bytes @ 0x35
  1385  0055                     	ds	4
  1386  0059                     ??___fltol:	
  1387                           
  1388                           ; 1 bytes @ 0x39
  1389  0059                     	ds	5
  1390  005E                     ___fltol@sign1:	
  1391                           
  1392                           ; 1 bytes @ 0x3E
  1393  005E                     	ds	1
  1394  005F                     ___fltol@exp1:	
  1395                           
  1396                           ; 1 bytes @ 0x3F
  1397  005F                     	ds	1
  1398  0060                     ??_main:	
  1399                           
  1400                           	psect	maintext
  1401  0D44                     __pmaintext:	
  1402                           ; 1 bytes @ 0x40
  1403 ;;
  1404 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1405 ;;
  1406 ;; *************** function _main *****************
  1407 ;; Defined at:
  1408 ;;		line 31 in file "main_app.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : B00/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0
  1425 ;;      Totals:         0       0       0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels required when called:    9
  1428 ;; This function calls:
  1429 ;;		_EEPROM_init
  1430 ;;		_SCH_Add_Task
  1431 ;;		_SCH_Dispatch_Tasks
  1432 ;;		_SCH_Init
  1433 ;;		_ssd_init
  1434 ;;		_switch_init
  1435 ;;		_temp_control_init
  1436 ;;		_temp_sensor_init
  1437 ;; This function is called by:
  1438 ;;		Startup code after reset
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function _main
  1444  0D44                     _main:	
  1445  0D44                     l4674:	
  1446                           ;incstack = 0
  1447 ;; hardware stack exceeded
  1448                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1449                           
  1450                           
  1451                           ;main_app.c: 33:     temp_sensor_init();
  1452  0D44  120A  158A  2001  120A  158A  	fcall	_temp_sensor_init
  1453                           
  1454                           ;main_app.c: 34:     temp_control_init();
  1455  0D49  160A  118A  26D1  120A  158A  	fcall	_temp_control_init
  1456  0D4E                     l4676:	
  1457                           
  1458                           ;main_app.c: 35:     switch_init();
  1459  0D4E  160A  118A  25D2  120A  158A  	fcall	_switch_init
  1460  0D53                     l4678:	
  1461                           
  1462                           ;main_app.c: 36:     ssd_init();
  1463  0D53  160A  118A  268F  120A  158A  	fcall	_ssd_init
  1464  0D58                     l4680:	
  1465                           
  1466                           ;main_app.c: 37:     EEPROM_init();
  1467  0D58  160A  118A  262C  120A  158A  	fcall	_EEPROM_init
  1468  0D5D                     l4682:	
  1469                           
  1470                           ;main_app.c: 38:     SCH_Init();
  1471  0D5D  160A  118A  279F  120A  158A  	fcall	_SCH_Init
  1472  0D62                     l4684:	
  1473                           
  1474                           ;main_app.c: 67:     SCH_Add_Task(get_set_temp , 0 , 0);
  1475  0D62  3000               	movlw	0
  1476  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0D64  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0D65  00AC               	movwf	SCH_Add_Task@DELAY
  1479  0D66  00AD               	movwf	SCH_Add_Task@DELAY+1
  1480  0D67  3000               	movlw	0
  1481  0D68  00AE               	movwf	SCH_Add_Task@PERIOD
  1482  0D69  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1483  0D6A  3004               	movlw	(low (fp__get_set_temp-fpbase))& (0+255)
  1484  0D6B  120A  158A  234B  120A  158A  	fcall	_SCH_Add_Task
  1485  0D70                     l4686:	
  1486                           
  1487                           ;main_app.c: 68:     SCH_Add_Task(temp_sensor_read , 0 , (100));
  1488  0D70  3000               	movlw	0
  1489  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0D73  00AC               	movwf	SCH_Add_Task@DELAY
  1492  0D74  00AD               	movwf	SCH_Add_Task@DELAY+1
  1493  0D75  3064               	movlw	100
  1494  0D76  00AE               	movwf	SCH_Add_Task@PERIOD
  1495  0D77  3000               	movlw	0
  1496  0D78  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1497  0D79  3007               	movlw	(low (fp__temp_sensor_read-fpbase))& (0+255)
  1498  0D7A  120A  158A  234B  120A  158A  	fcall	_SCH_Add_Task
  1499  0D7F                     l4688:	
  1500                           
  1501                           ;main_app.c: 69:     SCH_Add_Task(ssd_update , 0 , (50));
  1502  0D7F  3000               	movlw	0
  1503  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0D82  00AC               	movwf	SCH_Add_Task@DELAY
  1506  0D83  00AD               	movwf	SCH_Add_Task@DELAY+1
  1507  0D84  3032               	movlw	50
  1508  0D85  00AE               	movwf	SCH_Add_Task@PERIOD
  1509  0D86  3000               	movlw	0
  1510  0D87  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1511  0D88  300A               	movlw	(low (fp__ssd_update-fpbase))& (0+255)
  1512  0D89  120A  158A  234B  120A  158A  	fcall	_SCH_Add_Task
  1513  0D8E                     l4690:	
  1514                           
  1515                           ;main_app.c: 70:     SCH_Add_Task(led , 0 , (1000));
  1516  0D8E  3000               	movlw	0
  1517  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0D91  00AC               	movwf	SCH_Add_Task@DELAY
  1520  0D92  00AD               	movwf	SCH_Add_Task@DELAY+1
  1521  0D93  30E8               	movlw	232
  1522  0D94  00AE               	movwf	SCH_Add_Task@PERIOD
  1523  0D95  3003               	movlw	3
  1524  0D96  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1525  0D97  300D               	movlw	(low (fp__led-fpbase))& (0+255)
  1526  0D98  120A  158A  234B  120A  158A  	fcall	_SCH_Add_Task
  1527  0D9D                     l4692:	
  1528                           
  1529                           ;main_app.c: 71:     SCH_Add_Task(temp_set , 0 , (100));
  1530  0D9D  3000               	movlw	0
  1531  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0DA0  00AC               	movwf	SCH_Add_Task@DELAY
  1534  0DA1  00AD               	movwf	SCH_Add_Task@DELAY+1
  1535  0DA2  3064               	movlw	100
  1536  0DA3  00AE               	movwf	SCH_Add_Task@PERIOD
  1537  0DA4  3000               	movlw	0
  1538  0DA5  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1539  0DA6  3001               	movlw	(low (fp__temp_set-fpbase))& (0+255)
  1540  0DA7  120A  158A  234B  120A  158A  	fcall	_SCH_Add_Task
  1541  0DAC                     l4694:	
  1542                           
  1543                           ;main_app.c: 72:     SCH_Add_Task(switch_scan , 0 , (20));
  1544  0DAC  3000               	movlw	0
  1545  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0DAF  00AC               	movwf	SCH_Add_Task@DELAY
  1548  0DB0  00AD               	movwf	SCH_Add_Task@DELAY+1
  1549  0DB1  3014               	movlw	20
  1550  0DB2  00AE               	movwf	SCH_Add_Task@PERIOD
  1551  0DB3  3000               	movlw	0
  1552  0DB4  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1553  0DB5  3010               	movlw	(low (fp__switch_scan-fpbase))& (0+255)
  1554  0DB6  120A  158A  234B  120A  158A  	fcall	_SCH_Add_Task
  1555  0DBB                     l4696:	
  1556                           
  1557                           ;main_app.c: 73:     SCH_Add_Task(ssd_blink , 0 , (1000));
  1558  0DBB  3000               	movlw	0
  1559  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0DBE  00AC               	movwf	SCH_Add_Task@DELAY
  1562  0DBF  00AD               	movwf	SCH_Add_Task@DELAY+1
  1563  0DC0  30E8               	movlw	232
  1564  0DC1  00AE               	movwf	SCH_Add_Task@PERIOD
  1565  0DC2  3003               	movlw	3
  1566  0DC3  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1567  0DC4  3013               	movlw	(low (fp__ssd_blink-fpbase))& (0+255)
  1568  0DC5  120A  158A  234B  120A  158A  	fcall	_SCH_Add_Task
  1569  0DCA                     l4698:	
  1570                           
  1571                           ;main_app.c: 78:         SCH_Dispatch_Tasks();
  1572  0DCA  120A  158A  25D3  120A  158A  	fcall	_SCH_Dispatch_Tasks
  1573  0DCF  2DCA               	goto	l4698
  1574  0DD0  120A  118A  2812   	ljmp	start
  1575  0DD3                     __end_of_main:	
  1576                           
  1577                           	psect	text1
  1578  0801                     __ptext1:	
  1579 ;; *************** function _temp_sensor_init *****************
  1580 ;; Defined at:
  1581 ;;		line 17 in file "temp_sensor.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    4
  1602 ;; This function calls:
  1603 ;;		_ADC_Init
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _temp_sensor_init
  1611  0801                     _temp_sensor_init:	
  1612  0801                     l3312:	
  1613                           ;incstack = 0
  1614                           ; Regs used in _temp_sensor_init: [wreg+status,2+status,0+pclath+cstack]
  1615                           
  1616                           
  1617                           ;temp_sensor.c: 18:     ADC_Init();
  1618  0801  160A  118A  2773  120A  158A  	fcall	_ADC_Init
  1619  0806                     l3314:	
  1620                           
  1621                           ;temp_sensor.c: 19:     (TRISA |= (1 << 2));
  1622  0806  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0807  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0808  1505               	bsf	5,2	;volatile
  1625  0809                     l321:	
  1626  0809  0008               	return
  1627  080A                     __end_of_temp_sensor_init:	
  1628                           
  1629                           	psect	text2
  1630  1773                     __ptext2:	
  1631 ;; *************** function _ADC_Init *****************
  1632 ;; Defined at:
  1633 ;;		line 8 in file "adc_drive.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0
  1649 ;;      Temps:          0       1       0       0       0
  1650 ;;      Totals:         0       1       0       0       0
  1651 ;;Total ram usage:        1 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    3
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_temp_sensor_init
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _ADC_Init
  1663  1773                     _ADC_Init:	
  1664  1773                     l3098:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  1667                           
  1668                           
  1669                           ;adc_drive.c: 10:     (ADCON0 |= (1 << 7));
  1670  1773  1283               	bcf	3,5	;RP0=0, select bank0
  1671  1774  1303               	bcf	3,6	;RP1=0, select bank0
  1672  1775  179F               	bsf	31,7	;volatile
  1673                           
  1674                           ;adc_drive.c: 11:     (ADCON0 |= (1 << 6));
  1675  1776  171F               	bsf	31,6	;volatile
  1676                           
  1677                           ;adc_drive.c: 12:     (ADCON1 |= (1 << 6));
  1678  1777  1683               	bsf	3,5	;RP0=1, select bank1
  1679  1778  1303               	bcf	3,6	;RP1=0, select bank1
  1680  1779  171F               	bsf	31,6	;volatile
  1681                           
  1682                           ;adc_drive.c: 14:     (ADCON1 |= (1 << 7));
  1683  177A  179F               	bsf	31,7	;volatile
  1684  177B                     l3100:	
  1685                           
  1686                           ;adc_drive.c: 16:     (ADCON1 &= ~(1 << 0));
  1687  177B  30FE               	movlw	254
  1688  177C  1283               	bcf	3,5	;RP0=0, select bank0
  1689  177D  1303               	bcf	3,6	;RP1=0, select bank0
  1690  177E  00A8               	movwf	??_ADC_Init
  1691  177F  0828               	movf	??_ADC_Init,w
  1692  1780  1683               	bsf	3,5	;RP0=1, select bank1
  1693  1781  1303               	bcf	3,6	;RP1=0, select bank1
  1694  1782  059F               	andwf	31,f	;volatile
  1695                           
  1696                           ;adc_drive.c: 17:     (ADCON1 &= ~(1 << 1));
  1697  1783  30FD               	movlw	253
  1698  1784  1283               	bcf	3,5	;RP0=0, select bank0
  1699  1785  1303               	bcf	3,6	;RP1=0, select bank0
  1700  1786  00A8               	movwf	??_ADC_Init
  1701  1787  0828               	movf	??_ADC_Init,w
  1702  1788  1683               	bsf	3,5	;RP0=1, select bank1
  1703  1789  1303               	bcf	3,6	;RP1=0, select bank1
  1704  178A  059F               	andwf	31,f	;volatile
  1705                           
  1706                           ;adc_drive.c: 18:     (ADCON1 &= ~(1 << 2));
  1707  178B  30FB               	movlw	251
  1708  178C  1283               	bcf	3,5	;RP0=0, select bank0
  1709  178D  1303               	bcf	3,6	;RP1=0, select bank0
  1710  178E  00A8               	movwf	??_ADC_Init
  1711  178F  0828               	movf	??_ADC_Init,w
  1712  1790  1683               	bsf	3,5	;RP0=1, select bank1
  1713  1791  1303               	bcf	3,6	;RP1=0, select bank1
  1714  1792  059F               	andwf	31,f	;volatile
  1715                           
  1716                           ;adc_drive.c: 19:     (ADCON1 &= ~(1 << 3));
  1717  1793  30F7               	movlw	247
  1718  1794  1283               	bcf	3,5	;RP0=0, select bank0
  1719  1795  1303               	bcf	3,6	;RP1=0, select bank0
  1720  1796  00A8               	movwf	??_ADC_Init
  1721  1797  0828               	movf	??_ADC_Init,w
  1722  1798  1683               	bsf	3,5	;RP0=1, select bank1
  1723  1799  1303               	bcf	3,6	;RP1=0, select bank1
  1724  179A  059F               	andwf	31,f	;volatile
  1725  179B                     l3102:	
  1726                           
  1727                           ;adc_drive.c: 21:     (ADCON0 |= (1 << 0));
  1728  179B  1283               	bcf	3,5	;RP0=0, select bank0
  1729  179C  1303               	bcf	3,6	;RP1=0, select bank0
  1730  179D  141F               	bsf	31,0	;volatile
  1731  179E                     l57:	
  1732  179E  0008               	return
  1733  179F                     __end_of_ADC_Init:	
  1734                           
  1735                           	psect	text3
  1736  16D1                     __ptext3:	
  1737 ;; *************** function _temp_control_init *****************
  1738 ;; Defined at:
  1739 ;;		line 17 in file "temp_control.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0
  1755 ;;      Temps:          0       1       0       0       0
  1756 ;;      Totals:         0       1       0       0       0
  1757 ;;Total ram usage:        1 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    3
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _temp_control_init
  1769  16D1                     _temp_control_init:	
  1770  16D1                     l3316:	
  1771                           ;incstack = 0
  1772                           ; Regs used in _temp_control_init: [wreg+status,2+status,0]
  1773                           
  1774                           
  1775                           ;temp_control.c: 19:      (TRISC &= ~(1 << 5));
  1776  16D1  30DF               	movlw	223
  1777  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  1778  16D3  1303               	bcf	3,6	;RP1=0, select bank0
  1779  16D4  00A8               	movwf	??_temp_control_init
  1780  16D5  0828               	movf	??_temp_control_init,w
  1781  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  1782  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  1783  16D8  0587               	andwf	7,f	;volatile
  1784                           
  1785                           ;temp_control.c: 20:      (PORTC &= ~(1 << 5));
  1786  16D9  30DF               	movlw	223
  1787  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  1788  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  1789  16DC  00A8               	movwf	??_temp_control_init
  1790  16DD  0828               	movf	??_temp_control_init,w
  1791  16DE  0587               	andwf	7,f	;volatile
  1792                           
  1793                           ;temp_control.c: 23:      (TRISC &= ~(1 << 2));
  1794  16DF  30FB               	movlw	251
  1795  16E0  00A8               	movwf	??_temp_control_init
  1796  16E1  0828               	movf	??_temp_control_init,w
  1797  16E2  1683               	bsf	3,5	;RP0=1, select bank1
  1798  16E3  1303               	bcf	3,6	;RP1=0, select bank1
  1799  16E4  0587               	andwf	7,f	;volatile
  1800                           
  1801                           ;temp_control.c: 24:      (PORTC &= ~(1 << 2));
  1802  16E5  30FB               	movlw	251
  1803  16E6  1283               	bcf	3,5	;RP0=0, select bank0
  1804  16E7  1303               	bcf	3,6	;RP1=0, select bank0
  1805  16E8  00A8               	movwf	??_temp_control_init
  1806  16E9  0828               	movf	??_temp_control_init,w
  1807  16EA  0587               	andwf	7,f	;volatile
  1808                           
  1809                           ;temp_control.c: 27:      (TRISB &= ~(1 << 4));
  1810  16EB  30EF               	movlw	239
  1811  16EC  00A8               	movwf	??_temp_control_init
  1812  16ED  0828               	movf	??_temp_control_init,w
  1813  16EE  1683               	bsf	3,5	;RP0=1, select bank1
  1814  16EF  1303               	bcf	3,6	;RP1=0, select bank1
  1815  16F0  0586               	andwf	6,f	;volatile
  1816                           
  1817                           ;temp_control.c: 28:      (PORTB &= ~(1 << 4));
  1818  16F1  30EF               	movlw	239
  1819  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1820  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1821  16F4  00A8               	movwf	??_temp_control_init
  1822  16F5  0828               	movf	??_temp_control_init,w
  1823  16F6  0586               	andwf	6,f	;volatile
  1824  16F7                     l284:	
  1825  16F7  0008               	return
  1826  16F8                     __end_of_temp_control_init:	
  1827                           
  1828                           	psect	text4
  1829  15D2                     __ptext4:	
  1830 ;; *************** function _switch_init *****************
  1831 ;; Defined at:
  1832 ;;		line 26 in file "switchs.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		status,2
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         0       0       0       0       0
  1847 ;;      Locals:         0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0
  1849 ;;      Totals:         0       0       0       0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    3
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _switch_init
  1862  15D2                     _switch_init:	
  1863  15D2                     l3318:	
  1864                           ;incstack = 0
  1865                           ; Regs used in _switch_init: [status,2]
  1866                           
  1867                           
  1868                           ;switchs.c: 28:     (TRISB |= (1 << 2));
  1869  15D2  1683               	bsf	3,5	;RP0=1, select bank1
  1870  15D3  1303               	bcf	3,6	;RP1=0, select bank1
  1871  15D4  1506               	bsf	6,2	;volatile
  1872                           
  1873                           ;switchs.c: 29:     (TRISB |= (1 << 1));
  1874  15D5  1486               	bsf	6,1	;volatile
  1875                           
  1876                           ;switchs.c: 30:     (TRISB |= (1 << 0));
  1877  15D6  1406               	bsf	6,0	;volatile
  1878                           
  1879                           ;switchs.c: 31:     (INTCON |= (1 << 4));
  1880  15D7  160B               	bsf	11,4	;volatile
  1881  15D8                     l3320:	
  1882                           
  1883                           ;switchs.c: 32:     sw_info[0].state = RELEASED;
  1884  15D8  01E0               	clrf	(_sw_info^(0+128)+2)
  1885                           
  1886                           ;switchs.c: 33:     sw_info[1].state = RELEASED;
  1887  15D9  01E3               	clrf	(_sw_info^(0+128)+5)
  1888  15DA                     l224:	
  1889  15DA  0008               	return
  1890  15DB                     __end_of_switch_init:	
  1891                           
  1892                           	psect	text5
  1893  168F                     __ptext5:	
  1894 ;; *************** function _ssd_init *****************
  1895 ;; Defined at:
  1896 ;;		line 20 in file "SSD.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0
  1912 ;;      Temps:          0       1       0       0       0
  1913 ;;      Totals:         0       1       0       0       0
  1914 ;;Total ram usage:        1 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _ssd_init
  1926  168F                     _ssd_init:	
  1927  168F                     l3322:	
  1928                           ;incstack = 0
  1929                           ; Regs used in _ssd_init: [wreg+status,2+status,0]
  1930                           
  1931                           
  1932                           ;SSD.c: 22:      (TRISD &= ~(255 << 0));
  1933  168F  1683               	bsf	3,5	;RP0=1, select bank1
  1934  1690  1303               	bcf	3,6	;RP1=0, select bank1
  1935  1691  0188               	clrf	8	;volatile
  1936                           
  1937                           ;SSD.c: 23:      (PORTD &= ~(255 << 0));
  1938  1692  1283               	bcf	3,5	;RP0=0, select bank0
  1939  1693  1303               	bcf	3,6	;RP1=0, select bank0
  1940  1694  0188               	clrf	8	;volatile
  1941  1695                     l3324:	
  1942                           
  1943                           ;SSD.c: 25:      (TRISA &= ~(1 << 4));
  1944  1695  30EF               	movlw	239
  1945  1696  00A8               	movwf	??_ssd_init
  1946  1697  0828               	movf	??_ssd_init,w
  1947  1698  1683               	bsf	3,5	;RP0=1, select bank1
  1948  1699  1303               	bcf	3,6	;RP1=0, select bank1
  1949  169A  0585               	andwf	5,f	;volatile
  1950  169B                     l3326:	
  1951                           
  1952                           ;SSD.c: 26:      (PORTA &= ~(1 << 4));
  1953  169B  30EF               	movlw	239
  1954  169C  1283               	bcf	3,5	;RP0=0, select bank0
  1955  169D  1303               	bcf	3,6	;RP1=0, select bank0
  1956  169E  00A8               	movwf	??_ssd_init
  1957  169F  0828               	movf	??_ssd_init,w
  1958  16A0  0585               	andwf	5,f	;volatile
  1959  16A1                     l3328:	
  1960                           
  1961                           ;SSD.c: 27:      (TRISA &= ~(1 << 5));
  1962  16A1  30DF               	movlw	223
  1963  16A2  00A8               	movwf	??_ssd_init
  1964  16A3  0828               	movf	??_ssd_init,w
  1965  16A4  1683               	bsf	3,5	;RP0=1, select bank1
  1966  16A5  1303               	bcf	3,6	;RP1=0, select bank1
  1967  16A6  0585               	andwf	5,f	;volatile
  1968  16A7                     l3330:	
  1969                           
  1970                           ;SSD.c: 28:      (PORTA &= ~(1 << 5));
  1971  16A7  30DF               	movlw	223
  1972  16A8  1283               	bcf	3,5	;RP0=0, select bank0
  1973  16A9  1303               	bcf	3,6	;RP1=0, select bank0
  1974  16AA  00A8               	movwf	??_ssd_init
  1975  16AB  0828               	movf	??_ssd_init,w
  1976  16AC  0585               	andwf	5,f	;volatile
  1977  16AD                     l154:	
  1978  16AD  0008               	return
  1979  16AE                     __end_of_ssd_init:	
  1980                           
  1981                           	psect	text6
  1982  179F                     __ptext6:	
  1983 ;; *************** function _SCH_Init *****************
  1984 ;; Defined at:
  1985 ;;		line 93 in file "Sch_16f.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  i               1   16[BANK0 ] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       0       0       0       0
  2000 ;;      Locals:         0       1       0       0       0
  2001 ;;      Temps:          0       1       0       0       0
  2002 ;;      Totals:         0       2       0       0       0
  2003 ;;Total ram usage:        2 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    5
  2006 ;; This function calls:
  2007 ;;		_SCH_Delete_Task
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           
  2014                           ;psect for function _SCH_Init
  2015  179F                     _SCH_Init:	
  2016  179F                     l4588:	
  2017                           ;incstack = 0
  2018                           ; Regs used in _SCH_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2019                           
  2020                           
  2021                           ;Sch_16f.c: 95:     tByte i;;Sch_16f.c: 96:     for (i = 0; i < (7); i++)
  2022  179F  1283               	bcf	3,5	;RP0=0, select bank0
  2023  17A0  1303               	bcf	3,6	;RP1=0, select bank0
  2024  17A1  01B0               	clrf	SCH_Init@i
  2025  17A2                     l4594:	
  2026                           
  2027                           ;Sch_16f.c: 97:     {;Sch_16f.c: 98:         SCH_Delete_Task(i);
  2028  17A2  0830               	movf	SCH_Init@i,w
  2029  17A3  120A  158A  21B4  160A  118A  	fcall	_SCH_Delete_Task
  2030  17A8                     l4596:	
  2031                           
  2032                           ;Sch_16f.c: 99:     }
  2033  17A8  3001               	movlw	1
  2034  17A9  1283               	bcf	3,5	;RP0=0, select bank0
  2035  17AA  1303               	bcf	3,6	;RP1=0, select bank0
  2036  17AB  00AF               	movwf	??_SCH_Init
  2037  17AC  082F               	movf	??_SCH_Init,w
  2038  17AD  07B0               	addwf	SCH_Init@i,f
  2039  17AE                     l4598:	
  2040  17AE  3007               	movlw	7
  2041  17AF  0230               	subwf	SCH_Init@i,w
  2042  17B0  1C03               	skipc
  2043  17B1  2FB3               	goto	u5111
  2044  17B2  2FB4               	goto	u5110
  2045  17B3                     u5111:	
  2046  17B3  2FA2               	goto	l4594
  2047  17B4                     u5110:	
  2048  17B4                     l4600:	
  2049                           
  2050                           ;Sch_16f.c: 103:     Error_code_G = 0;
  2051  17B4  1683               	bsf	3,5	;RP0=1, select bank1
  2052  17B5  1303               	bcf	3,6	;RP1=0, select bank1
  2053  17B6  01E8               	clrf	_Error_code_G^(0+128)
  2054  17B7                     l4602:	
  2055                           
  2056                           ;Sch_16f.c: 106:     T1CON = 0X30;
  2057  17B7  3030               	movlw	48
  2058  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2059  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2060  17BA  0090               	movwf	16	;volatile
  2061  17BB                     l4604:	
  2062                           
  2063                           ;Sch_16f.c: 107:     PIR1 &= ~ (1 << 0) ;
  2064  17BB  30FE               	movlw	254
  2065  17BC  00AF               	movwf	??_SCH_Init
  2066  17BD  082F               	movf	??_SCH_Init,w
  2067  17BE  058C               	andwf	12,f	;volatile
  2068  17BF                     l4606:	
  2069                           
  2070                           ;Sch_16f.c: 108:     PIE1 |= (1 << 0);
  2071  17BF  1683               	bsf	3,5	;RP0=1, select bank1
  2072  17C0  1303               	bcf	3,6	;RP1=0, select bank1
  2073  17C1  140C               	bsf	12,0	;volatile
  2074  17C2                     l4608:	
  2075                           
  2076                           ;Sch_16f.c: 109:     INTCON |= (1 << 7);
  2077  17C2  178B               	bsf	11,7	;volatile
  2078  17C3                     l4610:	
  2079                           
  2080                           ;Sch_16f.c: 110:     INTCON |= (1 << 6);
  2081  17C3  170B               	bsf	11,6	;volatile
  2082  17C4                     l4612:	
  2083                           
  2084                           ;Sch_16f.c: 112:     timer_value = 65536 - ( ((1) * (8000000) ) / (1000 * 4 * 8 ) );
  2085  17C4  3006               	movlw	6
  2086  17C5  00FB               	movwf	_timer_value
  2087  17C6  30FF               	movlw	255
  2088  17C7  00FC               	movwf	_timer_value+1
  2089  17C8                     l4614:	
  2090                           
  2091                           ;Sch_16f.c: 113:     TMR1L = timer_value ;
  2092  17C8  087B               	movf	_timer_value,w
  2093  17C9  1283               	bcf	3,5	;RP0=0, select bank0
  2094  17CA  1303               	bcf	3,6	;RP1=0, select bank0
  2095  17CB  008E               	movwf	14	;volatile
  2096  17CC                     l4616:	
  2097                           
  2098                           ;Sch_16f.c: 114:     TMR1H = ( timer_value >> 8 ) ;
  2099  17CC  087C               	movf	_timer_value+1,w
  2100  17CD  008F               	movwf	15	;volatile
  2101  17CE                     l389:	
  2102  17CE  0008               	return
  2103  17CF                     __end_of_SCH_Init:	
  2104                           
  2105                           	psect	text7
  2106  0DD3                     __ptext7:	
  2107 ;; *************** function _SCH_Dispatch_Tasks *****************
  2108 ;; Defined at:
  2109 ;;		line 191 in file "Sch_16f.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  Index           1    6[BANK3 ] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         0       0       0       2       0
  2125 ;;      Temps:          0       0       3       0       0
  2126 ;;      Totals:         0       0       3       2       0
  2127 ;;Total ram usage:        5 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    8
  2130 ;; This function calls:
  2131 ;;		Absolute function
  2132 ;;		_SCH_Delete_Task
  2133 ;;		_SCH_Go_To_Sleep
  2134 ;;		_SCH_Report_Status
  2135 ;;		___bmul
  2136 ;;		_get_set_temp
  2137 ;;		_led
  2138 ;;		_ssd_blink
  2139 ;;		_ssd_update
  2140 ;;		_switch_scan
  2141 ;;		_temp_sensor_read
  2142 ;;		_temp_set
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _SCH_Dispatch_Tasks
  2150  0DD3                     _SCH_Dispatch_Tasks:	
  2151  0DD3                     l4634:	
  2152                           ;incstack = 0
  2153 ;; hardware stack exceeded
  2154                           ; Regs used in _SCH_Dispatch_Tasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2155                           
  2156                           
  2157                           ;Sch_16f.c: 193:     tByte Index;;Sch_16f.c: 195:     for (Index = 0; Index < (7); Index
      +                          ++)
  2158  0DD3  1683               	bsf	3,5	;RP0=1, select bank3
  2159  0DD4  1703               	bsf	3,6	;RP1=1, select bank3
  2160  0DD5  0196               	clrf	SCH_Dispatch_Tasks@Index^(0+384)
  2161  0DD6                     l4640:	
  2162                           
  2163                           ;Sch_16f.c: 196:     {;Sch_16f.c: 197:         if (SCH_tasks_G[Index].RunMe > 0)
  2164  0DD6  3006               	movlw	6
  2165  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0DD8  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0DD9  00EC               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2168  0DDA  086C               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2169  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0DDD  00A8               	movwf	___bmul@multiplicand
  2172  0DDE  1683               	bsf	3,5	;RP0=1, select bank3
  2173  0DDF  1703               	bsf	3,6	;RP1=1, select bank3
  2174  0DE0  0816               	movf	SCH_Dispatch_Tasks@Index^(0+384),w
  2175  0DE1  160A  118A  2678  120A  158A  	fcall	___bmul
  2176  0DE6  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  2177  0DE7  0084               	movwf	4
  2178  0DE8  1383               	bcf	3,7	;select IRP bank1
  2179  0DE9  0800               	movf	0,w
  2180  0DEA  1903               	btfsc	3,2
  2181  0DEB  2DED               	goto	u5151
  2182  0DEC  2DEE               	goto	u5150
  2183  0DED                     u5151:	
  2184  0DED  2E4C               	goto	l4652
  2185  0DEE                     u5150:	
  2186  0DEE                     l4642:	
  2187                           
  2188                           ;Sch_16f.c: 198:         {;Sch_16f.c: 199:             (*SCH_tasks_G[Index].pTask)();
  2189  0DEE  3006               	movlw	6
  2190  0DEF  1683               	bsf	3,5	;RP0=1, select bank1
  2191  0DF0  1303               	bcf	3,6	;RP1=0, select bank1
  2192  0DF1  00EC               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2193  0DF2  086C               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2194  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0DF5  00A8               	movwf	___bmul@multiplicand
  2197  0DF6  1683               	bsf	3,5	;RP0=1, select bank3
  2198  0DF7  1703               	bsf	3,6	;RP1=1, select bank3
  2199  0DF8  0816               	movf	SCH_Dispatch_Tasks@Index^(0+384),w
  2200  0DF9  160A  118A  2678  120A  158A  	fcall	___bmul
  2201  0DFE  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  2202  0DFF  0084               	movwf	4
  2203  0E00  1383               	bcf	3,7	;select IRP bank1
  2204  0E01  0800               	movf	0,w
  2205  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  2206  0E03  1303               	bcf	3,6	;RP1=0, select bank1
  2207  0E04  00ED               	movwf	(??_SCH_Dispatch_Tasks+1)^(0+128)
  2208  0E05  086D               	movf	(??_SCH_Dispatch_Tasks+1)^(0+128),w
  2209  0E06  1683               	bsf	3,5	;RP0=1, select bank3
  2210  0E07  1703               	bsf	3,6	;RP1=1, select bank3
  2211  0E08  0095               	movwf	_SCH_Dispatch_Tasks$978^(0+384)
  2212  0E09                     l4644:	
  2213                           
  2214                           ;Sch_16f.c: 198:         {;Sch_16f.c: 199:             (*SCH_tasks_G[Index].pTask)();
  2215  0E09  0815               	movf	_SCH_Dispatch_Tasks$978^(0+384),w
  2216  0E0A  120A  118A  2032  120A  158A  	fcall	fptable
  2217  0E0F                     l4646:	
  2218                           
  2219                           ;Sch_16f.c: 200:             SCH_tasks_G[Index].RunMe -= 1;
  2220  0E0F  3006               	movlw	6
  2221  0E10  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0E11  1303               	bcf	3,6	;RP1=0, select bank1
  2223  0E12  00EC               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2224  0E13  086C               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2225  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0E16  00A8               	movwf	___bmul@multiplicand
  2228  0E17  1683               	bsf	3,5	;RP0=1, select bank3
  2229  0E18  1703               	bsf	3,6	;RP1=1, select bank3
  2230  0E19  0816               	movf	SCH_Dispatch_Tasks@Index^(0+384),w
  2231  0E1A  160A  118A  2678  120A  158A  	fcall	___bmul
  2232  0E1F  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  2233  0E20  0084               	movwf	4
  2234  0E21  3001               	movlw	1
  2235  0E22  1383               	bcf	3,7	;select IRP bank1
  2236  0E23  0280               	subwf	0,f
  2237  0E24                     l4648:	
  2238                           
  2239                           ;Sch_16f.c: 203:             if (SCH_tasks_G[Index].Period == 0)
  2240  0E24  3006               	movlw	6
  2241  0E25  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0E26  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0E27  00EC               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2244  0E28  086C               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2245  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0E2B  00A8               	movwf	___bmul@multiplicand
  2248  0E2C  1683               	bsf	3,5	;RP0=1, select bank3
  2249  0E2D  1703               	bsf	3,6	;RP1=1, select bank3
  2250  0E2E  0816               	movf	SCH_Dispatch_Tasks@Index^(0+384),w
  2251  0E2F  160A  118A  2678  120A  158A  	fcall	___bmul
  2252  0E34  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  2253  0E35  0084               	movwf	4
  2254  0E36  1383               	bcf	3,7	;select IRP bank1
  2255  0E37  0800               	movf	0,w
  2256  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0E39  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0E3A  00ED               	movwf	(??_SCH_Dispatch_Tasks+1)^(0+128)
  2259  0E3B  0A84               	incf	4,f
  2260  0E3C  0800               	movf	0,w
  2261  0E3D  00EE               	movwf	((??_SCH_Dispatch_Tasks+1)^(0+128)+1)
  2262  0E3E  086D               	movf	(??_SCH_Dispatch_Tasks+1)^(0+128),w
  2263  0E3F  046E               	iorwf	((??_SCH_Dispatch_Tasks+1)^(0+128)+1),w
  2264  0E40  1D03               	btfss	3,2
  2265  0E41  2E43               	goto	u5161
  2266  0E42  2E44               	goto	u5160
  2267  0E43                     u5161:	
  2268  0E43  2E4C               	goto	l4652
  2269  0E44                     u5160:	
  2270  0E44                     l4650:	
  2271                           
  2272                           ;Sch_16f.c: 204:             {;Sch_16f.c: 205:                 SCH_Delete_Task(Index);
  2273  0E44  1683               	bsf	3,5	;RP0=1, select bank3
  2274  0E45  1703               	bsf	3,6	;RP1=1, select bank3
  2275  0E46  0816               	movf	SCH_Dispatch_Tasks@Index^(0+384),w
  2276  0E47  120A  158A  21B4  120A  158A  	fcall	_SCH_Delete_Task
  2277  0E4C                     l4652:	
  2278                           
  2279                           ;Sch_16f.c: 208:     }
  2280  0E4C  3001               	movlw	1
  2281  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  2282  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  2283  0E4F  00EC               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2284  0E50  086C               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2285  0E51  1683               	bsf	3,5	;RP0=1, select bank3
  2286  0E52  1703               	bsf	3,6	;RP1=1, select bank3
  2287  0E53  0796               	addwf	SCH_Dispatch_Tasks@Index^(0+384),f
  2288  0E54                     l4654:	
  2289  0E54  3007               	movlw	7
  2290  0E55  0216               	subwf	SCH_Dispatch_Tasks@Index^(0+384),w
  2291  0E56  1C03               	skipc
  2292  0E57  2E59               	goto	u5171
  2293  0E58  2E5A               	goto	u5170
  2294  0E59                     u5171:	
  2295  0E59  2DD6               	goto	l4640
  2296  0E5A                     u5170:	
  2297  0E5A                     l4656:	
  2298                           
  2299                           ;Sch_16f.c: 210:     SCH_Report_Status();
  2300  0E5A  120A  118A  2003  120A  158A  	fcall	_SCH_Report_Status
  2301                           
  2302                           ;Sch_16f.c: 212:     SCH_Go_To_Sleep();
  2303  0E5F  160A  118A  25B2  120A  158A  	fcall	_SCH_Go_To_Sleep
  2304  0E64                     l416:	
  2305  0E64  0008               	return
  2306  0E65                     __end_of_SCH_Dispatch_Tasks:	
  2307                           
  2308                           	psect	text8
  2309  16AE                     __ptext8:	
  2310 ;; *************** function _ssd_blink *****************
  2311 ;; Defined at:
  2312 ;;		line 150 in file "SSD.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0
  2328 ;;      Temps:          0       2       0       0       0
  2329 ;;      Totals:         0       2       0       0       0
  2330 ;;Total ram usage:        2 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    4
  2333 ;; This function calls:
  2334 ;;		_ssd_turn_off
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;;		_SCH_Dispatch_Tasks
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _ssd_blink
  2343  16AE                     _ssd_blink:	
  2344  16AE                     l4452:	
  2345                           ;incstack = 0
  2346                           ; Regs used in _ssd_blink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2347                           
  2348                           
  2349                           ;SSD.c: 151:     if (mode == SETTING_MODE){
  2350  16AE  1283               	bcf	3,5	;RP0=0, select bank0
  2351  16AF  1303               	bcf	3,6	;RP1=0, select bank0
  2352  16B0  0365               	decf	_mode,w
  2353  16B1  1D03               	btfss	3,2
  2354  16B2  2EB4               	goto	u4931
  2355  16B3  2EB5               	goto	u4930
  2356  16B4                     u4931:	
  2357  16B4  2ED0               	goto	l201
  2358  16B5                     u4930:	
  2359  16B5  2EC0               	goto	l4462
  2360  16B6                     l197:	
  2361                           ;SSD.c: 155:            case SSD_ON :
  2362                           
  2363                           
  2364                           ;SSD.c: 156:                blink = SSD_OFF ;
  2365  16B6  01E1               	clrf	_blink
  2366  16B7  0AE1               	incf	_blink,f
  2367  16B8                     l4456:	
  2368                           
  2369                           ;SSD.c: 157:                ssd_turn_off();
  2370  16B8  160A  118A  25E7  160A  118A  	fcall	_ssd_turn_off
  2371                           
  2372                           ;SSD.c: 158:                break ;
  2373  16BD  2ED0               	goto	l201
  2374  16BE                     l4458:	
  2375                           
  2376                           ;SSD.c: 161:                blink = SSD_ON ;
  2377  16BE  01E1               	clrf	_blink
  2378                           
  2379                           ;SSD.c: 162:                break;
  2380  16BF  2ED0               	goto	l201
  2381  16C0                     l4462:	
  2382  16C0  0861               	movf	_blink,w
  2383  16C1  00A9               	movwf	??_ssd_blink
  2384  16C2  01AA               	clrf	??_ssd_blink+1
  2385                           
  2386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 1, Range of values is 0 to 0
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte            4     3 (average)
  2392                           ; direct_byte           11     8 (fixed)
  2393                           ; jumptable            260     6 (fixed)
  2394                           ;	Chosen strategy is simple_byte
  2395  16C3  082A               	movf	??_ssd_blink+1,w
  2396  16C4  3A00               	xorlw	0	; case 0
  2397  16C5  1903               	skipnz
  2398  16C6  2EC8               	goto	l4916
  2399  16C7  2ED0               	goto	l201
  2400  16C8                     l4916:	
  2401                           
  2402                           ; Switch size 1, requested type "simple"
  2403                           ; Number of cases is 2, Range of values is 0 to 1
  2404                           ; switch strategies available:
  2405                           ; Name         Instructions Cycles
  2406                           ; simple_byte            7     4 (average)
  2407                           ; direct_byte           14     8 (fixed)
  2408                           ; jumptable            260     6 (fixed)
  2409                           ;	Chosen strategy is simple_byte
  2410  16C8  0829               	movf	??_ssd_blink,w
  2411  16C9  3A00               	xorlw	0	; case 0
  2412  16CA  1903               	skipnz
  2413  16CB  2EB6               	goto	l197
  2414  16CC  3A01               	xorlw	1	; case 1
  2415  16CD  1903               	skipnz
  2416  16CE  2EBE               	goto	l4458
  2417  16CF  2ED0               	goto	l201
  2418  16D0                     l201:	
  2419  16D0  0008               	return
  2420  16D1                     __end_of_ssd_blink:	
  2421                           
  2422                           	psect	text9
  2423  058B                     __ptext9:	
  2424 ;; *************** function _switch_scan *****************
  2425 ;; Defined at:
  2426 ;;		line 41 in file "switchs.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  current_butt    1   17[BANK0 ] enum E930
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         0       0       0       0       0
  2441 ;;      Locals:         0       1       0       0       0
  2442 ;;      Temps:          0       3       0       0       0
  2443 ;;      Totals:         0       4       0       0       0
  2444 ;;Total ram usage:        4 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    7
  2447 ;; This function calls:
  2448 ;;		___bmul
  2449 ;;		_sw_action
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;;		_SCH_Dispatch_Tasks
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _switch_scan
  2458  058B                     _switch_scan:	
  2459  058B                     l4468:	
  2460                           ;incstack = 0
  2461 ;; hardware stack exceeded
  2462                           ; Regs used in _switch_scan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2463                           
  2464                           
  2465                           ;switchs.c: 43:     SW_t current_button = SW_UP;
  2466  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2467  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2468  058D  01B1               	clrf	switch_scan@current_button
  2469                           
  2470                           ;switchs.c: 44:     for (current_button = SW_UP; current_button <= SW_DOWN; current_butt
      +                          on++)
  2471  058E  01B1               	clrf	switch_scan@current_button
  2472  058F                     l4474:	
  2473                           
  2474                           ;switchs.c: 45:     {;switchs.c: 47:         sw_info[current_button].samples[0] = sw_inf
      +                          o[current_button].samples[1];
  2475  058F  3003               	movlw	3
  2476  0590  00AE               	movwf	??_switch_scan
  2477  0591  082E               	movf	??_switch_scan,w
  2478  0592  00A8               	movwf	___bmul@multiplicand
  2479  0593  0831               	movf	switch_scan@current_button,w
  2480  0594  160A  118A  2678  120A  118A  	fcall	___bmul
  2481  0599  3EDF               	addlw	(low ((_sw_info| 0+1)))& (0+255)
  2482  059A  0084               	movwf	4
  2483  059B  1383               	bcf	3,7	;select IRP bank1
  2484  059C  0800               	movf	0,w
  2485  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2486  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2487  059F  00AF               	movwf	??_switch_scan+1
  2488  05A0  3003               	movlw	3
  2489  05A1  00B0               	movwf	??_switch_scan+2
  2490  05A2  0830               	movf	??_switch_scan+2,w
  2491  05A3  00A8               	movwf	___bmul@multiplicand
  2492  05A4  0831               	movf	switch_scan@current_button,w
  2493  05A5  160A  118A  2678  120A  118A  	fcall	___bmul
  2494  05AA  3EDE               	addlw	(low (_sw_info| 0))& (0+255)
  2495  05AB  0084               	movwf	4
  2496  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2497  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2498  05AE  082F               	movf	??_switch_scan+1,w
  2499  05AF  1383               	bcf	3,7	;select IRP bank1
  2500  05B0  0080               	movwf	0
  2501                           
  2502                           ;switchs.c: 49:         switch(current_button)
  2503  05B1  2DE7               	goto	l4482
  2504  05B2                     l4476:	
  2505                           
  2506                           ;switchs.c: 52:             sw_info[current_button].samples[1] = ((PORTB >> 2) & 1);
  2507  05B2  0806               	movf	6,w	;volatile
  2508  05B3  00AE               	movwf	??_switch_scan
  2509  05B4  3002               	movlw	2
  2510  05B5                     u4945:	
  2511  05B5  1003               	clrc
  2512  05B6  0CAE               	rrf	??_switch_scan,f
  2513  05B7  3EFF               	addlw	-1
  2514  05B8  1D03               	skipz
  2515  05B9  2DB5               	goto	u4945
  2516  05BA  082E               	movf	??_switch_scan,w
  2517  05BB  3901               	andlw	1
  2518  05BC  00AF               	movwf	??_switch_scan+1
  2519  05BD  3003               	movlw	3
  2520  05BE  00B0               	movwf	??_switch_scan+2
  2521  05BF  0830               	movf	??_switch_scan+2,w
  2522  05C0  00A8               	movwf	___bmul@multiplicand
  2523  05C1  0831               	movf	switch_scan@current_button,w
  2524  05C2  160A  118A  2678  120A  118A  	fcall	___bmul
  2525  05C7  3EDF               	addlw	(low ((_sw_info| 0+1)))& (0+255)
  2526  05C8  0084               	movwf	4
  2527  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2528  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2529  05CB  082F               	movf	??_switch_scan+1,w
  2530  05CC  1383               	bcf	3,7	;select IRP bank1
  2531  05CD  0080               	movwf	0
  2532                           
  2533                           ;switchs.c: 53:         break;
  2534  05CE  2EB6               	goto	l4506
  2535  05CF                     l4478:	
  2536                           
  2537                           ;switchs.c: 55:             sw_info[current_button].samples[1] = ((PORTB >> 1) & 1);
  2538  05CF  0806               	movf	6,w	;volatile
  2539  05D0  00AE               	movwf	??_switch_scan
  2540  05D1  1003               	clrc
  2541  05D2  0C2E               	rrf	??_switch_scan,w
  2542  05D3  3901               	andlw	1
  2543  05D4  00AF               	movwf	??_switch_scan+1
  2544  05D5  3003               	movlw	3
  2545  05D6  00B0               	movwf	??_switch_scan+2
  2546  05D7  0830               	movf	??_switch_scan+2,w
  2547  05D8  00A8               	movwf	___bmul@multiplicand
  2548  05D9  0831               	movf	switch_scan@current_button,w
  2549  05DA  160A  118A  2678  120A  118A  	fcall	___bmul
  2550  05DF  3EDF               	addlw	(low ((_sw_info| 0+1)))& (0+255)
  2551  05E0  0084               	movwf	4
  2552  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2553  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2554  05E3  082F               	movf	??_switch_scan+1,w
  2555  05E4  1383               	bcf	3,7	;select IRP bank1
  2556  05E5  0080               	movwf	0
  2557                           
  2558                           ;switchs.c: 56:             break;
  2559  05E6  2EB6               	goto	l4506
  2560  05E7                     l4482:	
  2561  05E7  0831               	movf	switch_scan@current_button,w
  2562  05E8  00AE               	movwf	??_switch_scan
  2563  05E9  01AF               	clrf	??_switch_scan+1
  2564                           
  2565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ; direct_byte           11     8 (fixed)
  2572                           ; jumptable            260     6 (fixed)
  2573                           ;	Chosen strategy is simple_byte
  2574  05EA  082F               	movf	??_switch_scan+1,w
  2575  05EB  3A00               	xorlw	0	; case 0
  2576  05EC  1903               	skipnz
  2577  05ED  2DEF               	goto	l4918
  2578  05EE  2EB6               	goto	l4506
  2579  05EF                     l4918:	
  2580                           
  2581                           ; Switch size 1, requested type "simple"
  2582                           ; Number of cases is 2, Range of values is 0 to 1
  2583                           ; switch strategies available:
  2584                           ; Name         Instructions Cycles
  2585                           ; simple_byte            7     4 (average)
  2586                           ; direct_byte           14     8 (fixed)
  2587                           ; jumptable            260     6 (fixed)
  2588                           ;	Chosen strategy is simple_byte
  2589  05EF  082E               	movf	??_switch_scan,w
  2590  05F0  3A00               	xorlw	0	; case 0
  2591  05F1  1903               	skipnz
  2592  05F2  2DB2               	goto	l4476
  2593  05F3  3A01               	xorlw	1	; case 1
  2594  05F4  1903               	skipnz
  2595  05F5  2DCF               	goto	l4478
  2596  05F6  2EB6               	goto	l4506
  2597  05F7                     l4484:	
  2598                           
  2599                           ;switchs.c: 66:             if((sw_info[current_button].samples[0] == 0) &&
  2600  05F7  3003               	movlw	3
  2601  05F8  00AE               	movwf	??_switch_scan
  2602  05F9  082E               	movf	??_switch_scan,w
  2603  05FA  00A8               	movwf	___bmul@multiplicand
  2604  05FB  0831               	movf	switch_scan@current_button,w
  2605  05FC  160A  118A  2678  120A  118A  	fcall	___bmul
  2606  0601  3EDE               	addlw	(low (_sw_info| 0))& (0+255)
  2607  0602  0084               	movwf	4
  2608  0603  1383               	bcf	3,7	;select IRP bank1
  2609  0604  0800               	movf	0,w
  2610  0605  1D03               	btfss	3,2
  2611  0606  2E08               	goto	u4951
  2612  0607  2E09               	goto	u4950
  2613  0608                     u4951:	
  2614  0608  2EDB               	goto	l4508
  2615  0609                     u4950:	
  2616  0609                     l4486:	
  2617  0609  3003               	movlw	3
  2618  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2619  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2620  060C  00AE               	movwf	??_switch_scan
  2621  060D  082E               	movf	??_switch_scan,w
  2622  060E  00A8               	movwf	___bmul@multiplicand
  2623  060F  0831               	movf	switch_scan@current_button,w
  2624  0610  160A  118A  2678  120A  118A  	fcall	___bmul
  2625  0615  3EDF               	addlw	(low ((_sw_info| 0+1)))& (0+255)
  2626  0616  0084               	movwf	4
  2627  0617  1383               	bcf	3,7	;select IRP bank1
  2628  0618  0800               	movf	0,w
  2629  0619  1D03               	btfss	3,2
  2630  061A  2E1C               	goto	u4961
  2631  061B  2E1D               	goto	u4960
  2632  061C                     u4961:	
  2633  061C  2EDB               	goto	l4508
  2634  061D                     u4960:	
  2635  061D                     l4488:	
  2636                           
  2637                           ;switchs.c: 68:             {;switchs.c: 69:                 sw_info[current_button].sta
      +                          te = PRE_PRESSED;
  2638  061D  3003               	movlw	3
  2639  061E  1283               	bcf	3,5	;RP0=0, select bank0
  2640  061F  1303               	bcf	3,6	;RP1=0, select bank0
  2641  0620  00AE               	movwf	??_switch_scan
  2642  0621  082E               	movf	??_switch_scan,w
  2643  0622  00A8               	movwf	___bmul@multiplicand
  2644  0623  0831               	movf	switch_scan@current_button,w
  2645  0624  160A  118A  2678  120A  118A  	fcall	___bmul
  2646  0629  3EE0               	addlw	(low ((_sw_info| 0+2)))& (0+255)
  2647  062A  0084               	movwf	4
  2648  062B  1383               	bcf	3,7	;select IRP bank1
  2649  062C  0180               	clrf	0
  2650  062D  0A80               	incf	0,f
  2651  062E  2EDB               	goto	l4508
  2652  062F                     l4490:	
  2653                           
  2654                           ;switchs.c: 73:             if(sw_info[current_button].samples[1] == 0)
  2655  062F  3003               	movlw	3
  2656  0630  00AE               	movwf	??_switch_scan
  2657  0631  082E               	movf	??_switch_scan,w
  2658  0632  00A8               	movwf	___bmul@multiplicand
  2659  0633  0831               	movf	switch_scan@current_button,w
  2660  0634  160A  118A  2678  120A  118A  	fcall	___bmul
  2661  0639  3EDF               	addlw	(low ((_sw_info| 0+1)))& (0+255)
  2662  063A  0084               	movwf	4
  2663  063B  1383               	bcf	3,7	;select IRP bank1
  2664  063C  0800               	movf	0,w
  2665  063D  1D03               	btfss	3,2
  2666  063E  2E40               	goto	u4971
  2667  063F  2E41               	goto	u4970
  2668  0640                     u4971:	
  2669  0640  2EDB               	goto	l4508
  2670  0641                     u4970:	
  2671  0641                     l4492:	
  2672                           
  2673                           ;switchs.c: 74:             {;switchs.c: 75:                 sw_info[current_button].sta
      +                          te = PRESSED;
  2674  0641  3002               	movlw	2
  2675  0642  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0643  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0644  00AE               	movwf	??_switch_scan
  2678  0645  3003               	movlw	3
  2679  0646  00AF               	movwf	??_switch_scan+1
  2680  0647  082F               	movf	??_switch_scan+1,w
  2681  0648  00A8               	movwf	___bmul@multiplicand
  2682  0649  0831               	movf	switch_scan@current_button,w
  2683  064A  160A  118A  2678  120A  118A  	fcall	___bmul
  2684  064F  3EE0               	addlw	(low ((_sw_info| 0+2)))& (0+255)
  2685  0650  0084               	movwf	4
  2686  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0653  082E               	movf	??_switch_scan,w
  2689  0654  1383               	bcf	3,7	;select IRP bank1
  2690  0655  0080               	movwf	0
  2691  0656  2EDB               	goto	l4508
  2692  0657                     l4494:	
  2693                           
  2694                           ;switchs.c: 79:             if((sw_info[current_button].samples[0] == 1) &&
  2695  0657  3003               	movlw	3
  2696  0658  00AE               	movwf	??_switch_scan
  2697  0659  082E               	movf	??_switch_scan,w
  2698  065A  00A8               	movwf	___bmul@multiplicand
  2699  065B  0831               	movf	switch_scan@current_button,w
  2700  065C  160A  118A  2678  120A  118A  	fcall	___bmul
  2701  0661  3EDE               	addlw	(low (_sw_info| 0))& (0+255)
  2702  0662  0084               	movwf	4
  2703  0663  1383               	bcf	3,7	;select IRP bank1
  2704  0664  0300               	decf	0,w
  2705  0665  1D03               	btfss	3,2
  2706  0666  2E68               	goto	u4981
  2707  0667  2E69               	goto	u4980
  2708  0668                     u4981:	
  2709  0668  2EDB               	goto	l4508
  2710  0669                     u4980:	
  2711  0669                     l4496:	
  2712  0669  3003               	movlw	3
  2713  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2714  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2715  066C  00AE               	movwf	??_switch_scan
  2716  066D  082E               	movf	??_switch_scan,w
  2717  066E  00A8               	movwf	___bmul@multiplicand
  2718  066F  0831               	movf	switch_scan@current_button,w
  2719  0670  160A  118A  2678  120A  118A  	fcall	___bmul
  2720  0675  3EDF               	addlw	(low ((_sw_info| 0+1)))& (0+255)
  2721  0676  0084               	movwf	4
  2722  0677  1383               	bcf	3,7	;select IRP bank1
  2723  0678  0300               	decf	0,w
  2724  0679  1D03               	btfss	3,2
  2725  067A  2E7C               	goto	u4991
  2726  067B  2E7D               	goto	u4990
  2727  067C                     u4991:	
  2728  067C  2EDB               	goto	l4508
  2729  067D                     u4990:	
  2730  067D                     l4498:	
  2731                           
  2732                           ;switchs.c: 81:             {;switchs.c: 82:                 sw_info[current_button].sta
      +                          te = PRE_RELEASED;
  2733  067D  3003               	movlw	3
  2734  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2735  067F  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0680  00AE               	movwf	??_switch_scan
  2737  0681  3003               	movlw	3
  2738  0682  00AF               	movwf	??_switch_scan+1
  2739  0683  082F               	movf	??_switch_scan+1,w
  2740  0684  00A8               	movwf	___bmul@multiplicand
  2741  0685  0831               	movf	switch_scan@current_button,w
  2742  0686  160A  118A  2678  120A  118A  	fcall	___bmul
  2743  068B  3EE0               	addlw	(low ((_sw_info| 0+2)))& (0+255)
  2744  068C  0084               	movwf	4
  2745  068D  1283               	bcf	3,5	;RP0=0, select bank0
  2746  068E  1303               	bcf	3,6	;RP1=0, select bank0
  2747  068F  082E               	movf	??_switch_scan,w
  2748  0690  1383               	bcf	3,7	;select IRP bank1
  2749  0691  0080               	movwf	0
  2750  0692  2EDB               	goto	l4508
  2751  0693                     l4500:	
  2752                           
  2753                           ;switchs.c: 86:             if(sw_info[current_button].samples[1] == 1)
  2754  0693  3003               	movlw	3
  2755  0694  00AE               	movwf	??_switch_scan
  2756  0695  082E               	movf	??_switch_scan,w
  2757  0696  00A8               	movwf	___bmul@multiplicand
  2758  0697  0831               	movf	switch_scan@current_button,w
  2759  0698  160A  118A  2678  120A  118A  	fcall	___bmul
  2760  069D  3EDF               	addlw	(low ((_sw_info| 0+1)))& (0+255)
  2761  069E  0084               	movwf	4
  2762  069F  1383               	bcf	3,7	;select IRP bank1
  2763  06A0  0300               	decf	0,w
  2764  06A1  1D03               	btfss	3,2
  2765  06A2  2EA4               	goto	u5001
  2766  06A3  2EA5               	goto	u5000
  2767  06A4                     u5001:	
  2768  06A4  2EDB               	goto	l4508
  2769  06A5                     u5000:	
  2770  06A5                     l4502:	
  2771                           
  2772                           ;switchs.c: 87:             {;switchs.c: 88:                 sw_info[current_button].sta
      +                          te = RELEASED;
  2773  06A5  3003               	movlw	3
  2774  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2775  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2776  06A8  00AE               	movwf	??_switch_scan
  2777  06A9  082E               	movf	??_switch_scan,w
  2778  06AA  00A8               	movwf	___bmul@multiplicand
  2779  06AB  0831               	movf	switch_scan@current_button,w
  2780  06AC  160A  118A  2678  120A  118A  	fcall	___bmul
  2781  06B1  3EE0               	addlw	(low ((_sw_info| 0+2)))& (0+255)
  2782  06B2  0084               	movwf	4
  2783  06B3  1383               	bcf	3,7	;select IRP bank1
  2784  06B4  0180               	clrf	0
  2785  06B5  2EDB               	goto	l4508
  2786  06B6                     l4506:	
  2787  06B6  3003               	movlw	3
  2788  06B7  00AE               	movwf	??_switch_scan
  2789  06B8  082E               	movf	??_switch_scan,w
  2790  06B9  00A8               	movwf	___bmul@multiplicand
  2791  06BA  0831               	movf	switch_scan@current_button,w
  2792  06BB  160A  118A  2678  120A  118A  	fcall	___bmul
  2793  06C0  3EE0               	addlw	(low ((_sw_info| 0+2)))& (0+255)
  2794  06C1  0084               	movwf	4
  2795  06C2  1383               	bcf	3,7	;select IRP bank1
  2796  06C3  0800               	movf	0,w
  2797  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  2798  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  2799  06C6  00AF               	movwf	??_switch_scan+1
  2800  06C7  01B0               	clrf	??_switch_scan+2
  2801                           
  2802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 1, Range of values is 0 to 0
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            4     3 (average)
  2808                           ; direct_byte           11     8 (fixed)
  2809                           ; jumptable            260     6 (fixed)
  2810                           ;	Chosen strategy is simple_byte
  2811  06C8  0830               	movf	??_switch_scan+2,w
  2812  06C9  3A00               	xorlw	0	; case 0
  2813  06CA  1903               	skipnz
  2814  06CB  2ECD               	goto	l4920
  2815  06CC  2EDB               	goto	l4508
  2816  06CD                     l4920:	
  2817                           
  2818                           ; Switch size 1, requested type "simple"
  2819                           ; Number of cases is 4, Range of values is 0 to 3
  2820                           ; switch strategies available:
  2821                           ; Name         Instructions Cycles
  2822                           ; simple_byte           13     7 (average)
  2823                           ; direct_byte           20     8 (fixed)
  2824                           ; jumptable            260     6 (fixed)
  2825                           ;	Chosen strategy is simple_byte
  2826  06CD  082F               	movf	??_switch_scan+1,w
  2827  06CE  3A00               	xorlw	0	; case 0
  2828  06CF  1903               	skipnz
  2829  06D0  2DF7               	goto	l4484
  2830  06D1  3A01               	xorlw	1	; case 1
  2831  06D2  1903               	skipnz
  2832  06D3  2E2F               	goto	l4490
  2833  06D4  3A03               	xorlw	3	; case 2
  2834  06D5  1903               	skipnz
  2835  06D6  2E57               	goto	l4494
  2836  06D7  3A01               	xorlw	1	; case 3
  2837  06D8  1903               	skipnz
  2838  06D9  2E93               	goto	l4500
  2839  06DA  2EDB               	goto	l4508
  2840  06DB                     l4508:	
  2841                           
  2842                           ;switchs.c: 97:     }
  2843  06DB  3001               	movlw	1
  2844  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2845  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2846  06DE  00AE               	movwf	??_switch_scan
  2847  06DF  082E               	movf	??_switch_scan,w
  2848  06E0  07B1               	addwf	switch_scan@current_button,f
  2849  06E1                     l4510:	
  2850  06E1  3002               	movlw	2
  2851  06E2  0231               	subwf	switch_scan@current_button,w
  2852  06E3  1C03               	skipc
  2853  06E4  2EE6               	goto	u5011
  2854  06E5  2EE7               	goto	u5010
  2855  06E6                     u5011:	
  2856  06E6  2D8F               	goto	l4474
  2857  06E7                     u5010:	
  2858  06E7                     l4512:	
  2859                           
  2860                           ;switchs.c: 99:    sw_action();
  2861  06E7  120A  158A  243D  120A  118A  	fcall	_sw_action
  2862  06EC                     l245:	
  2863  06EC  0008               	return
  2864  06ED                     __end_of_switch_scan:	
  2865                           
  2866                           	psect	text10
  2867  1663                     __ptext10:	
  2868 ;; *************** function _led *****************
  2869 ;; Defined at:
  2870 ;;		line 70 in file "temp_control.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          0       1       0       0       0
  2887 ;;      Totals:         0       1       0       0       0
  2888 ;;Total ram usage:        1 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    3
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;;		_SCH_Dispatch_Tasks
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _led
  2901  1663                     _led:	
  2902  1663                     l4550:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _led: [wreg+status,2+status,0]
  2905                           
  2906                           
  2907                           ;temp_control.c: 71:     if (mode == NORMAL_MODE){
  2908  1663  1283               	bcf	3,5	;RP0=0, select bank0
  2909  1664  1303               	bcf	3,6	;RP1=0, select bank0
  2910  1665  0865               	movf	_mode,w
  2911  1666  1D03               	btfss	3,2
  2912  1667  2E69               	goto	u5061
  2913  1668  2E6A               	goto	u5060
  2914  1669                     u5061:	
  2915  1669  2E77               	goto	l301
  2916  166A                     u5060:	
  2917  166A                     l4552:	
  2918                           
  2919                           ;temp_control.c: 72:         if (state == HEATER_ON){
  2920  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2921  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2922  166C  086A               	movf	_state^(0+128),w
  2923  166D  1D03               	btfss	3,2
  2924  166E  2E70               	goto	u5071
  2925  166F  2E71               	goto	u5070
  2926  1670                     u5071:	
  2927  1670  2E77               	goto	l301
  2928  1671                     u5070:	
  2929  1671                     l4554:	
  2930                           
  2931                           ;temp_control.c: 73:             (PORTB ^= ( 1 << 4));
  2932  1671  3010               	movlw	16
  2933  1672  1283               	bcf	3,5	;RP0=0, select bank0
  2934  1673  1303               	bcf	3,6	;RP1=0, select bank0
  2935  1674  00A8               	movwf	??_led
  2936  1675  0828               	movf	??_led,w
  2937  1676  0686               	xorwf	6,f	;volatile
  2938  1677                     l301:	
  2939                           ;temp_control.c: 74:         }
  2940                           
  2941  1677  0008               	return
  2942  1678                     __end_of_led:	
  2943                           
  2944                           	psect	text11
  2945  0CBC                     __ptext11:	
  2946 ;; *************** function _ssd_update *****************
  2947 ;; Defined at:
  2948 ;;		line 100 in file "SSD.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2962 ;;      Params:         0       0       0       0       0
  2963 ;;      Locals:         0       0       0       0       0
  2964 ;;      Temps:          0       3       0       0       0
  2965 ;;      Totals:         0       3       0       0       0
  2966 ;;Total ram usage:        3 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    4
  2969 ;; This function calls:
  2970 ;;		___awdiv
  2971 ;;		___awmod
  2972 ;;		_display7s
  2973 ;; This function is called by:
  2974 ;;		_main
  2975 ;;		_SCH_Dispatch_Tasks
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _ssd_update
  2981  0CBC                     _ssd_update:	
  2982  0CBC                     l4408:	
  2983                           ;incstack = 0
  2984                           ; Regs used in _ssd_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2985                           
  2986                           
  2987                           ;SSD.c: 101:     if (blink == SSD_ON){
  2988  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0CBE  0861               	movf	_blink,w
  2991  0CBF  1D03               	btfss	3,2
  2992  0CC0  2CC2               	goto	u4921
  2993  0CC1  2CC3               	goto	u4920
  2994  0CC2                     u4921:	
  2995  0CC2  2D43               	goto	l189
  2996  0CC3                     u4920:	
  2997  0CC3  2CCE               	goto	l4418
  2998  0CC4                     l4412:	
  2999                           
  3000                           ;SSD.c: 104:                 temp = measured_temp ;
  3001  0CC4  0866               	movf	_measured_temp,w
  3002  0CC5  00B1               	movwf	??_ssd_update
  3003  0CC6  0831               	movf	??_ssd_update,w
  3004  0CC7  00E2               	movwf	_temp
  3005                           
  3006                           ;SSD.c: 105:                 break ;
  3007  0CC8  2D2F               	goto	l4442
  3008  0CC9                     l4414:	
  3009                           
  3010                           ;SSD.c: 107:                 temp = set_temp;
  3011  0CC9  0867               	movf	_set_temp,w
  3012  0CCA  00B1               	movwf	??_ssd_update
  3013  0CCB  0831               	movf	??_ssd_update,w
  3014  0CCC  00E2               	movwf	_temp
  3015                           
  3016                           ;SSD.c: 108:                 break ;
  3017  0CCD  2D2F               	goto	l4442
  3018  0CCE                     l4418:	
  3019  0CCE  0865               	movf	_mode,w
  3020  0CCF  00B1               	movwf	??_ssd_update
  3021  0CD0  01B2               	clrf	??_ssd_update+1
  3022                           
  3023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3024                           ; Switch size 1, requested type "simple"
  3025                           ; Number of cases is 1, Range of values is 0 to 0
  3026                           ; switch strategies available:
  3027                           ; Name         Instructions Cycles
  3028                           ; simple_byte            4     3 (average)
  3029                           ; direct_byte           11     8 (fixed)
  3030                           ; jumptable            260     6 (fixed)
  3031                           ;	Chosen strategy is simple_byte
  3032  0CD1  0832               	movf	??_ssd_update+1,w
  3033  0CD2  3A00               	xorlw	0	; case 0
  3034  0CD3  1903               	skipnz
  3035  0CD4  2CD6               	goto	l4922
  3036  0CD5  2D2F               	goto	l4442
  3037  0CD6                     l4922:	
  3038                           
  3039                           ; Switch size 1, requested type "simple"
  3040                           ; Number of cases is 2, Range of values is 0 to 1
  3041                           ; switch strategies available:
  3042                           ; Name         Instructions Cycles
  3043                           ; simple_byte            7     4 (average)
  3044                           ; direct_byte           14     8 (fixed)
  3045                           ; jumptable            260     6 (fixed)
  3046                           ;	Chosen strategy is simple_byte
  3047  0CD6  0831               	movf	??_ssd_update,w
  3048  0CD7  3A00               	xorlw	0	; case 0
  3049  0CD8  1903               	skipnz
  3050  0CD9  2CC4               	goto	l4412
  3051  0CDA  3A01               	xorlw	1	; case 1
  3052  0CDB  1903               	skipnz
  3053  0CDC  2CC9               	goto	l4414
  3054  0CDD  2D2F               	goto	l4442
  3055  0CDE                     l4420:	
  3056                           
  3057                           ;SSD.c: 113:                 tens = temp / 10 ;
  3058  0CDE  300A               	movlw	10
  3059  0CDF  00A8               	movwf	___awdiv@divisor
  3060  0CE0  3000               	movlw	0
  3061  0CE1  00A9               	movwf	___awdiv@divisor+1
  3062  0CE2  0862               	movf	_temp,w
  3063  0CE3  00B1               	movwf	??_ssd_update
  3064  0CE4  01B2               	clrf	??_ssd_update+1
  3065  0CE5  0831               	movf	??_ssd_update,w
  3066  0CE6  00AA               	movwf	___awdiv@dividend
  3067  0CE7  0832               	movf	??_ssd_update+1,w
  3068  0CE8  00AB               	movwf	___awdiv@dividend+1
  3069  0CE9  120A  158A  22E2  120A  158A  	fcall	___awdiv
  3070  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0CF0  0828               	movf	?___awdiv,w
  3073  0CF1  00B3               	movwf	??_ssd_update+2
  3074  0CF2  0833               	movf	??_ssd_update+2,w
  3075  0CF3  00E4               	movwf	_tens
  3076  0CF4                     l4422:	
  3077                           
  3078                           ;SSD.c: 114:                 (PORTA |= (1 << 4));
  3079  0CF4  1605               	bsf	5,4	;volatile
  3080  0CF5                     l4424:	
  3081                           
  3082                           ;SSD.c: 115:                 (PORTA &= ~(1 << 5));
  3083  0CF5  30DF               	movlw	223
  3084  0CF6  00B1               	movwf	??_ssd_update
  3085  0CF7  0831               	movf	??_ssd_update,w
  3086  0CF8  0585               	andwf	5,f	;volatile
  3087  0CF9                     l4426:	
  3088                           
  3089                           ;SSD.c: 116:                 PORTD = display7s(tens);
  3090  0CF9  0864               	movf	_tens,w
  3091  0CFA  120A  158A  2153  120A  158A  	fcall	_display7s
  3092  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  3094  0D01  0088               	movwf	8	;volatile
  3095  0D02                     l4428:	
  3096                           
  3097                           ;SSD.c: 117:                 ssd_select = SSD_RIGHT ;
  3098  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  3099  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  3100  0D04  01EB               	clrf	_ssd_select^(0+128)
  3101  0D05  0AEB               	incf	_ssd_select^(0+128),f
  3102                           
  3103                           ;SSD.c: 118:                 break ;
  3104  0D06  2D43               	goto	l189
  3105  0D07                     l4430:	
  3106                           
  3107                           ;SSD.c: 120:                  ones = temp % 10 ;
  3108  0D07  300A               	movlw	10
  3109  0D08  00A8               	movwf	___awmod@divisor
  3110  0D09  3000               	movlw	0
  3111  0D0A  00A9               	movwf	___awmod@divisor+1
  3112  0D0B  0862               	movf	_temp,w
  3113  0D0C  00B1               	movwf	??_ssd_update
  3114  0D0D  01B2               	clrf	??_ssd_update+1
  3115  0D0E  0831               	movf	??_ssd_update,w
  3116  0D0F  00AA               	movwf	___awmod@dividend
  3117  0D10  0832               	movf	??_ssd_update+1,w
  3118  0D11  00AB               	movwf	___awmod@dividend+1
  3119  0D12  120A  158A  20F8  120A  158A  	fcall	___awmod
  3120  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0D19  0828               	movf	?___awmod,w
  3123  0D1A  00B3               	movwf	??_ssd_update+2
  3124  0D1B  0833               	movf	??_ssd_update+2,w
  3125  0D1C  00E3               	movwf	_ones
  3126  0D1D                     l4432:	
  3127                           
  3128                           ;SSD.c: 121:                  (PORTA |= (1 << 5));
  3129  0D1D  1685               	bsf	5,5	;volatile
  3130  0D1E                     l4434:	
  3131                           
  3132                           ;SSD.c: 122:                  (PORTA &= ~(1 << 4));
  3133  0D1E  30EF               	movlw	239
  3134  0D1F  00B1               	movwf	??_ssd_update
  3135  0D20  0831               	movf	??_ssd_update,w
  3136  0D21  0585               	andwf	5,f	;volatile
  3137  0D22                     l4436:	
  3138                           
  3139                           ;SSD.c: 123:                  PORTD = display7s(ones);
  3140  0D22  0863               	movf	_ones,w
  3141  0D23  120A  158A  2153  120A  158A  	fcall	_display7s
  3142  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0D2A  0088               	movwf	8	;volatile
  3145  0D2B                     l4438:	
  3146                           
  3147                           ;SSD.c: 124:                  ssd_select = SSD_LEFT ;
  3148  0D2B  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0D2C  1303               	bcf	3,6	;RP1=0, select bank1
  3150  0D2D  01EB               	clrf	_ssd_select^(0+128)
  3151                           
  3152                           ;SSD.c: 125:                  break;
  3153  0D2E  2D43               	goto	l189
  3154  0D2F                     l4442:	
  3155  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0D31  086B               	movf	_ssd_select^(0+128),w
  3158  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0D34  00B1               	movwf	??_ssd_update
  3161  0D35  01B2               	clrf	??_ssd_update+1
  3162                           
  3163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3164                           ; Switch size 1, requested type "simple"
  3165                           ; Number of cases is 1, Range of values is 0 to 0
  3166                           ; switch strategies available:
  3167                           ; Name         Instructions Cycles
  3168                           ; simple_byte            4     3 (average)
  3169                           ; direct_byte           11     8 (fixed)
  3170                           ; jumptable            260     6 (fixed)
  3171                           ;	Chosen strategy is simple_byte
  3172  0D36  0832               	movf	??_ssd_update+1,w
  3173  0D37  3A00               	xorlw	0	; case 0
  3174  0D38  1903               	skipnz
  3175  0D39  2D3B               	goto	l4924
  3176  0D3A  2D43               	goto	l189
  3177  0D3B                     l4924:	
  3178                           
  3179                           ; Switch size 1, requested type "simple"
  3180                           ; Number of cases is 2, Range of values is 0 to 1
  3181                           ; switch strategies available:
  3182                           ; Name         Instructions Cycles
  3183                           ; simple_byte            7     4 (average)
  3184                           ; direct_byte           14     8 (fixed)
  3185                           ; jumptable            260     6 (fixed)
  3186                           ;	Chosen strategy is simple_byte
  3187  0D3B  0831               	movf	??_ssd_update,w
  3188  0D3C  3A00               	xorlw	0	; case 0
  3189  0D3D  1903               	skipnz
  3190  0D3E  2CDE               	goto	l4420
  3191  0D3F  3A01               	xorlw	1	; case 1
  3192  0D40  1903               	skipnz
  3193  0D41  2D07               	goto	l4430
  3194  0D42  2D43               	goto	l189
  3195  0D43                     l189:	
  3196  0D43  0008               	return
  3197  0D44                     __end_of_ssd_update:	
  3198                           
  3199                           	psect	text12
  3200  0F21                     __ptext12:	
  3201 ;; *************** function _temp_sensor_read *****************
  3202 ;; Defined at:
  3203 ;;		line 41 in file "temp_sensor.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217 ;;      Params:         0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0
  3219 ;;      Temps:          0       0       0       5       0
  3220 ;;      Totals:         0       0       0       5       0
  3221 ;;Total ram usage:        5 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    5
  3224 ;; This function calls:
  3225 ;;		_ADC_Read
  3226 ;;		___fldiv
  3227 ;;		___flmul
  3228 ;;		___fltol
  3229 ;;		___xxtofl
  3230 ;;		_average
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;;		_SCH_Dispatch_Tasks
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           
  3238                           ;psect for function _temp_sensor_read
  3239  0F21                     _temp_sensor_read:	
  3240  0F21                     l4556:	
  3241                           ;incstack = 0
  3242                           ; Regs used in _temp_sensor_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3243                           
  3244                           
  3245                           ;temp_sensor.c: 42:     if (mode == NORMAL_MODE){
  3246  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0F23  0865               	movf	_mode,w
  3249  0F24  1D03               	btfss	3,2
  3250  0F25  2F27               	goto	u5081
  3251  0F26  2F28               	goto	u5080
  3252  0F27                     u5081:	
  3253  0F27  2FFF               	goto	l331
  3254  0F28                     u5080:	
  3255  0F28                     l4558:	
  3256                           
  3257                           ;temp_sensor.c: 44:         temp_hold_array[i] = (ADC_Read(2) * 4.89 ) ;
  3258  0F28  3002               	movlw	2
  3259  0F29  160A  118A  2749  120A  158A  	fcall	_ADC_Read
  3260  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0F30  0828               	movf	?_ADC_Read,w
  3263  0F31  1683               	bsf	3,5	;RP0=1, select bank3
  3264  0F32  1703               	bsf	3,6	;RP1=1, select bank3
  3265  0F33  0090               	movwf	??_temp_sensor_read^(0+384)
  3266  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  3268  0F36  0829               	movf	?_ADC_Read+1,w
  3269  0F37  1683               	bsf	3,5	;RP0=1, select bank3
  3270  0F38  1703               	bsf	3,6	;RP1=1, select bank3
  3271  0F39  0091               	movwf	(??_temp_sensor_read^(0+384)+1)
  3272  0F3A  0192               	clrf	(??_temp_sensor_read^(0+384)+2)
  3273  0F3B  0193               	clrf	(??_temp_sensor_read^(0+384)+3)
  3274  0F3C  0813               	movf	(??_temp_sensor_read+3)^(0+384),w
  3275  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0F3F  00B0               	movwf	___xxtofl@val+3
  3278  0F40  1683               	bsf	3,5	;RP0=1, select bank3
  3279  0F41  1703               	bsf	3,6	;RP1=1, select bank3
  3280  0F42  0812               	movf	(??_temp_sensor_read+2)^(0+384),w
  3281  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  3282  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  3283  0F45  00AF               	movwf	___xxtofl@val+2
  3284  0F46  1683               	bsf	3,5	;RP0=1, select bank3
  3285  0F47  1703               	bsf	3,6	;RP1=1, select bank3
  3286  0F48  0811               	movf	(??_temp_sensor_read+1)^(0+384),w
  3287  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0F4B  00AE               	movwf	___xxtofl@val+1
  3290  0F4C  1683               	bsf	3,5	;RP0=1, select bank3
  3291  0F4D  1703               	bsf	3,6	;RP1=1, select bank3
  3292  0F4E  0810               	movf	??_temp_sensor_read^(0+384),w
  3293  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  3295  0F51  00AD               	movwf	___xxtofl@val
  3296  0F52  3000               	movlw	0
  3297  0F53  120A  158A  2665  120A  158A  	fcall	___xxtofl
  3298  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0F5A  0830               	movf	?___xxtofl+3,w
  3301  0F5B  00C2               	movwf	___flmul@a+3
  3302  0F5C  082F               	movf	?___xxtofl+2,w
  3303  0F5D  00C1               	movwf	___flmul@a+2
  3304  0F5E  082E               	movf	?___xxtofl+1,w
  3305  0F5F  00C0               	movwf	___flmul@a+1
  3306  0F60  082D               	movf	?___xxtofl,w
  3307  0F61  00BF               	movwf	___flmul@a
  3308  0F62  3040               	movlw	64
  3309  0F63  00BE               	movwf	___flmul@b+3
  3310  0F64  309C               	movlw	156
  3311  0F65  00BD               	movwf	___flmul@b+2
  3312  0F66  307A               	movlw	122
  3313  0F67  00BC               	movwf	___flmul@b+1
  3314  0F68  30E1               	movlw	225
  3315  0F69  00BB               	movwf	___flmul@b
  3316  0F6A  120A  118A  204D  120A  158A  	fcall	___flmul
  3317  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  3319  0F71  083E               	movf	?___flmul+3,w
  3320  0F72  00D8               	movwf	___fltol@f1+3
  3321  0F73  083D               	movf	?___flmul+2,w
  3322  0F74  00D7               	movwf	___fltol@f1+2
  3323  0F75  083C               	movf	?___flmul+1,w
  3324  0F76  00D6               	movwf	___fltol@f1+1
  3325  0F77  083B               	movf	?___flmul,w
  3326  0F78  00D5               	movwf	___fltol@f1
  3327  0F79  120A  158A  23C1  120A  158A  	fcall	___fltol
  3328  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0F80  0860               	movf	_i,w
  3331  0F81  1683               	bsf	3,5	;RP0=1, select bank3
  3332  0F82  1703               	bsf	3,6	;RP1=1, select bank3
  3333  0F83  0094               	movwf	(??_temp_sensor_read+4)^(0+384)
  3334  0F84  0714               	addwf	(??_temp_sensor_read+4)^(0+384),w
  3335  0F85  3ECA               	addlw	(low (_temp_hold_array| 0))& (0+255)
  3336  0F86  0084               	movwf	4
  3337  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0F89  0855               	movf	?___fltol,w
  3340  0F8A  1383               	bcf	3,7	;select IRP bank1
  3341  0F8B  0080               	movwf	0
  3342  0F8C  0A84               	incf	4,f
  3343  0F8D  0856               	movf	?___fltol+1,w
  3344  0F8E  0080               	movwf	0
  3345                           
  3346                           ;temp_sensor.c: 45:         temp_hold_array[i] = temp_hold_array[i] / 10.0 ;
  3347  0F8F  0860               	movf	_i,w
  3348  0F90  1683               	bsf	3,5	;RP0=1, select bank3
  3349  0F91  1703               	bsf	3,6	;RP1=1, select bank3
  3350  0F92  0090               	movwf	??_temp_sensor_read^(0+384)
  3351  0F93  0710               	addwf	??_temp_sensor_read^(0+384),w
  3352  0F94  3ECA               	addlw	(low (_temp_hold_array| 0))& (0+255)
  3353  0F95  0084               	movwf	4
  3354  0F96  0800               	movf	0,w
  3355  0F97  0091               	movwf	(??_temp_sensor_read+1)^(0+384)
  3356  0F98  0A84               	incf	4,f
  3357  0F99  0800               	movf	0,w
  3358  0F9A  0092               	movwf	((??_temp_sensor_read+1)^(0+384)+1)
  3359  0F9B  0811               	movf	(??_temp_sensor_read+1)^(0+384),w
  3360  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0F9E  00AD               	movwf	___xxtofl@val
  3363  0F9F  1683               	bsf	3,5	;RP0=1, select bank3
  3364  0FA0  1703               	bsf	3,6	;RP1=1, select bank3
  3365  0FA1  0812               	movf	(??_temp_sensor_read+2)^(0+384),w
  3366  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0FA4  00AE               	movwf	___xxtofl@val+1
  3369  0FA5  01AF               	clrf	___xxtofl@val+2
  3370  0FA6  01B0               	clrf	___xxtofl@val+3
  3371  0FA7  3000               	movlw	0
  3372  0FA8  120A  158A  2665  120A  158A  	fcall	___xxtofl
  3373  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0FAF  0830               	movf	?___xxtofl+3,w
  3376  0FB0  00C2               	movwf	___fldiv@b+3
  3377  0FB1  082F               	movf	?___xxtofl+2,w
  3378  0FB2  00C1               	movwf	___fldiv@b+2
  3379  0FB3  082E               	movf	?___xxtofl+1,w
  3380  0FB4  00C0               	movwf	___fldiv@b+1
  3381  0FB5  082D               	movf	?___xxtofl,w
  3382  0FB6  00BF               	movwf	___fldiv@b
  3383  0FB7  3041               	movlw	65
  3384  0FB8  00BE               	movwf	___fldiv@a+3
  3385  0FB9  3020               	movlw	32
  3386  0FBA  00BD               	movwf	___fldiv@a+2
  3387  0FBB  3000               	movlw	0
  3388  0FBC  00BC               	movwf	___fldiv@a+1
  3389  0FBD  3000               	movlw	0
  3390  0FBE  00BB               	movwf	___fldiv@a
  3391  0FBF  120A  118A  23AE  120A  158A  	fcall	___fldiv
  3392  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0FC6  083E               	movf	?___fldiv+3,w
  3395  0FC7  00D8               	movwf	___fltol@f1+3
  3396  0FC8  083D               	movf	?___fldiv+2,w
  3397  0FC9  00D7               	movwf	___fltol@f1+2
  3398  0FCA  083C               	movf	?___fldiv+1,w
  3399  0FCB  00D6               	movwf	___fltol@f1+1
  3400  0FCC  083B               	movf	?___fldiv,w
  3401  0FCD  00D5               	movwf	___fltol@f1
  3402  0FCE  120A  158A  23C1  120A  158A  	fcall	___fltol
  3403  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0FD5  0860               	movf	_i,w
  3406  0FD6  1683               	bsf	3,5	;RP0=1, select bank3
  3407  0FD7  1703               	bsf	3,6	;RP1=1, select bank3
  3408  0FD8  0093               	movwf	(??_temp_sensor_read+3)^(0+384)
  3409  0FD9  0713               	addwf	(??_temp_sensor_read+3)^(0+384),w
  3410  0FDA  3ECA               	addlw	(low (_temp_hold_array| 0))& (0+255)
  3411  0FDB  0084               	movwf	4
  3412  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0FDE  0855               	movf	?___fltol,w
  3415  0FDF  1383               	bcf	3,7	;select IRP bank1
  3416  0FE0  0080               	movwf	0
  3417  0FE1  0A84               	incf	4,f
  3418  0FE2  0856               	movf	?___fltol+1,w
  3419  0FE3  0080               	movwf	0
  3420  0FE4                     l4560:	
  3421                           
  3422                           ;temp_sensor.c: 46:         i++ ;
  3423  0FE4  3001               	movlw	1
  3424  0FE5  1683               	bsf	3,5	;RP0=1, select bank3
  3425  0FE6  1703               	bsf	3,6	;RP1=1, select bank3
  3426  0FE7  0090               	movwf	??_temp_sensor_read^(0+384)
  3427  0FE8  0810               	movf	??_temp_sensor_read^(0+384),w
  3428  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0FEB  07E0               	addwf	_i,f
  3431  0FEC                     l4562:	
  3432                           
  3433                           ;temp_sensor.c: 47:         if (i == 10){i = 0 ;}
  3434  0FEC  300A               	movlw	10
  3435  0FED  0660               	xorwf	_i,w
  3436  0FEE  1D03               	btfss	3,2
  3437  0FEF  2FF1               	goto	u5091
  3438  0FF0  2FF2               	goto	u5090
  3439  0FF1                     u5091:	
  3440  0FF1  2FF3               	goto	l4566
  3441  0FF2                     u5090:	
  3442  0FF2                     l4564:	
  3443  0FF2  01E0               	clrf	_i
  3444  0FF3                     l4566:	
  3445                           
  3446                           ;temp_sensor.c: 48:         measured_temp = average();
  3447  0FF3  120A  158A  203E  120A  158A  	fcall	_average
  3448  0FF8  1683               	bsf	3,5	;RP0=1, select bank3
  3449  0FF9  1703               	bsf	3,6	;RP1=1, select bank3
  3450  0FFA  0090               	movwf	??_temp_sensor_read^(0+384)
  3451  0FFB  0810               	movf	??_temp_sensor_read^(0+384),w
  3452  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0FFE  00E6               	movwf	_measured_temp
  3455  0FFF                     l331:	
  3456  0FFF  0008               	return
  3457  1000                     __end_of_temp_sensor_read:	
  3458                           
  3459                           	psect	text13
  3460  16F8                     __ptext13:	
  3461 ;; *************** function _get_set_temp *****************
  3462 ;; Defined at:
  3463 ;;		line 48 in file "eeprom.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0, pclath, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0
  3479 ;;      Temps:          0       1       0       0       0
  3480 ;;      Totals:         0       1       0       0       0
  3481 ;;Total ram usage:        1 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    6
  3484 ;; This function calls:
  3485 ;;		_EEPROM_read
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;;		_SCH_Dispatch_Tasks
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _get_set_temp
  3494  16F8                     _get_set_temp:	
  3495  16F8                     l4402:	
  3496                           ;incstack = 0
  3497                           ; Regs used in _get_set_temp: [wreg+status,2+status,0+pclath+cstack]
  3498                           
  3499                           
  3500                           ;eeprom.c: 51:     if (EEPROM_read(0xff) > 100){
  3501  16F8  30FF               	movlw	255
  3502  16F9  1283               	bcf	3,5	;RP0=0, select bank0
  3503  16FA  1303               	bcf	3,6	;RP1=0, select bank0
  3504  16FB  00A9               	movwf	EEPROM_read@address
  3505  16FC  3000               	movlw	0
  3506  16FD  00AA               	movwf	EEPROM_read@address+1
  3507  16FE  160A  118A  27CF  160A  118A  	fcall	_EEPROM_read
  3508  1703  1283               	bcf	3,5	;RP0=0, select bank0
  3509  1704  1303               	bcf	3,6	;RP1=0, select bank0
  3510  1705  00AD               	movwf	??_get_set_temp
  3511  1706  3065               	movlw	101
  3512  1707  022D               	subwf	??_get_set_temp,w
  3513  1708  1C03               	skipc
  3514  1709  2F0B               	goto	u4911
  3515  170A  2F0C               	goto	u4910
  3516  170B                     u4911:	
  3517  170B  2F11               	goto	l4406
  3518  170C                     u4910:	
  3519  170C                     l4404:	
  3520                           
  3521                           ;eeprom.c: 52:        set_temp = 60 ;
  3522  170C  303C               	movlw	60
  3523  170D  00AD               	movwf	??_get_set_temp
  3524  170E  082D               	movf	??_get_set_temp,w
  3525  170F  00E7               	movwf	_set_temp
  3526                           
  3527                           ;eeprom.c: 53:     }
  3528  1710  2F1F               	goto	l127
  3529  1711                     l4406:	
  3530                           
  3531                           ;eeprom.c: 55:        set_temp = EEPROM_read(0xff) ;
  3532  1711  30FF               	movlw	255
  3533  1712  00A9               	movwf	EEPROM_read@address
  3534  1713  3000               	movlw	0
  3535  1714  00AA               	movwf	EEPROM_read@address+1
  3536  1715  160A  118A  27CF  160A  118A  	fcall	_EEPROM_read
  3537  171A  1283               	bcf	3,5	;RP0=0, select bank0
  3538  171B  1303               	bcf	3,6	;RP1=0, select bank0
  3539  171C  00AD               	movwf	??_get_set_temp
  3540  171D  082D               	movf	??_get_set_temp,w
  3541  171E  00E7               	movwf	_set_temp
  3542  171F                     l127:	
  3543  171F  0008               	return
  3544  1720                     __end_of_get_set_temp:	
  3545                           
  3546                           	psect	text14
  3547  0A17                     __ptext14:	
  3548 ;; *************** function _temp_set *****************
  3549 ;; Defined at:
  3550 ;;		line 37 in file "temp_control.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;		None
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0, pclath, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0
  3566 ;;      Temps:          0       3       0       0       0
  3567 ;;      Totals:         0       3       0       0       0
  3568 ;;Total ram usage:        3 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    4
  3571 ;; This function calls:
  3572 ;;		_temp_control_off
  3573 ;; This function is called by:
  3574 ;;		_main
  3575 ;;		_SCH_Dispatch_Tasks
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           
  3580                           ;psect for function _temp_set
  3581  0A17                     _temp_set:	
  3582  0A17                     l4522:	
  3583                           ;incstack = 0
  3584                           ; Regs used in _temp_set: [wreg+status,2+status,0+pclath+cstack]
  3585                           
  3586                           
  3587                           ;temp_control.c: 38:     if (mode == NORMAL_MODE){
  3588  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  3590  0A19  0865               	movf	_mode,w
  3591  0A1A  1D03               	btfss	3,2
  3592  0A1B  2A1D               	goto	u5021
  3593  0A1C  2A1E               	goto	u5020
  3594  0A1D                     u5021:	
  3595  0A1D  2A74               	goto	l4548
  3596  0A1E                     u5020:	
  3597  0A1E                     l4524:	
  3598                           
  3599                           ;temp_control.c: 39:         if ( measured_temp < (set_temp - 5 ) ){
  3600  0A1E  0867               	movf	_set_temp,w
  3601  0A1F  3EFB               	addlw	251
  3602  0A20  00A9               	movwf	??_temp_set
  3603  0A21  30FF               	movlw	255
  3604  0A22  1803               	skipnc
  3605  0A23  3000               	movlw	0
  3606  0A24  00AA               	movwf	??_temp_set+1
  3607  0A25  082A               	movf	??_temp_set+1,w
  3608  0A26  3A80               	xorlw	128
  3609  0A27  3C80               	sublw	128
  3610  0A28  1D03               	skipz
  3611  0A29  2A2C               	goto	u5035
  3612  0A2A  0829               	movf	??_temp_set,w
  3613  0A2B  0266               	subwf	_measured_temp,w
  3614  0A2C                     u5035:	
  3615  0A2C  1803               	skipnc
  3616  0A2D  2A2F               	goto	u5031
  3617  0A2E  2A30               	goto	u5030
  3618  0A2F                     u5031:	
  3619  0A2F  2A3B               	goto	l4532
  3620  0A30                     u5030:	
  3621  0A30                     l4526:	
  3622                           
  3623                           ;temp_control.c: 40:             (PORTC |= (1 << 5));
  3624  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  3625  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  3626  0A32  1687               	bsf	7,5	;volatile
  3627  0A33                     l4528:	
  3628                           
  3629                           ;temp_control.c: 41:             (PORTC &= ~(1 << 2));
  3630  0A33  30FB               	movlw	251
  3631  0A34  00A9               	movwf	??_temp_set
  3632  0A35  0829               	movf	??_temp_set,w
  3633  0A36  0587               	andwf	7,f	;volatile
  3634  0A37                     l4530:	
  3635                           
  3636                           ;temp_control.c: 42:             state = HEATER_ON ;
  3637  0A37  1683               	bsf	3,5	;RP0=1, select bank1
  3638  0A38  1303               	bcf	3,6	;RP1=0, select bank1
  3639  0A39  01EA               	clrf	_state^(0+128)
  3640                           
  3641                           ;temp_control.c: 43:         }
  3642  0A3A  2A79               	goto	l295
  3643  0A3B                     l4532:	
  3644  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  3645  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  3646  0A3D  0867               	movf	_set_temp,w
  3647  0A3E  3E05               	addlw	5
  3648  0A3F  00A9               	movwf	??_temp_set
  3649  0A40  3000               	movlw	0
  3650  0A41  1803               	skipnc
  3651  0A42  3001               	movlw	1
  3652  0A43  00AA               	movwf	??_temp_set+1
  3653  0A44  082A               	movf	??_temp_set+1,w
  3654  0A45  3A80               	xorlw	128
  3655  0A46  00AB               	movwf	??_temp_set+2
  3656  0A47  3080               	movlw	128
  3657  0A48  022B               	subwf	??_temp_set+2,w
  3658  0A49  1D03               	skipz
  3659  0A4A  2A4D               	goto	u5045
  3660  0A4B  0866               	movf	_measured_temp,w
  3661  0A4C  0229               	subwf	??_temp_set,w
  3662  0A4D                     u5045:	
  3663  0A4D  1803               	skipnc
  3664  0A4E  2A50               	goto	u5041
  3665  0A4F  2A51               	goto	u5040
  3666  0A50                     u5041:	
  3667  0A50  2A5E               	goto	l4542
  3668  0A51                     u5040:	
  3669  0A51                     l4534:	
  3670                           
  3671                           ;temp_control.c: 45:             (PORTC |= (1 << 2));
  3672  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0A52  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0A53  1507               	bsf	7,2	;volatile
  3675  0A54                     l4536:	
  3676                           
  3677                           ;temp_control.c: 46:             (PORTC &= ~(1 << 5));
  3678  0A54  30DF               	movlw	223
  3679  0A55  00A9               	movwf	??_temp_set
  3680  0A56  0829               	movf	??_temp_set,w
  3681  0A57  0587               	andwf	7,f	;volatile
  3682  0A58                     l4538:	
  3683                           
  3684                           ;temp_control.c: 47:             (PORTB |= (1 << 4));
  3685  0A58  1606               	bsf	6,4	;volatile
  3686  0A59                     l4540:	
  3687                           
  3688                           ;temp_control.c: 48:             state = HEATER_OFF ;
  3689  0A59  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0A5A  1303               	bcf	3,6	;RP1=0, select bank1
  3691  0A5B  01EA               	clrf	_state^(0+128)
  3692  0A5C  0AEA               	incf	_state^(0+128),f
  3693                           
  3694                           ;temp_control.c: 49:         }
  3695  0A5D  2A79               	goto	l295
  3696  0A5E                     l4542:	
  3697  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  3699  0A60  0866               	movf	_measured_temp,w
  3700  0A61  0667               	xorwf	_set_temp,w
  3701  0A62  1D03               	skipz
  3702  0A63  2A65               	goto	u5051
  3703  0A64  2A66               	goto	u5050
  3704  0A65                     u5051:	
  3705  0A65  2A73               	goto	l289
  3706  0A66                     u5050:	
  3707  0A66                     l4544:	
  3708                           
  3709                           ;temp_control.c: 51:             (PORTC &= ~(1 << 2));
  3710  0A66  30FB               	movlw	251
  3711  0A67  00A9               	movwf	??_temp_set
  3712  0A68  0829               	movf	??_temp_set,w
  3713  0A69  0587               	andwf	7,f	;volatile
  3714                           
  3715                           ;temp_control.c: 52:             (PORTC &= ~(1 << 5));
  3716  0A6A  30DF               	movlw	223
  3717  0A6B  00A9               	movwf	??_temp_set
  3718  0A6C  0829               	movf	??_temp_set,w
  3719  0A6D  0587               	andwf	7,f	;volatile
  3720                           
  3721                           ;temp_control.c: 53:             (PORTB &= ~(1 << 4));
  3722  0A6E  30EF               	movlw	239
  3723  0A6F  00A9               	movwf	??_temp_set
  3724  0A70  0829               	movf	??_temp_set,w
  3725  0A71  0586               	andwf	6,f	;volatile
  3726  0A72  2A59               	goto	l4540
  3727  0A73                     l289:	
  3728                           
  3729                           ;temp_control.c: 59:     }
  3730  0A73  2A79               	goto	l295
  3731  0A74                     l4548:	
  3732                           
  3733                           ;temp_control.c: 61:         temp_control_off();
  3734  0A74  160A  118A  261D  120A  158A  	fcall	_temp_control_off
  3735  0A79                     l295:	
  3736  0A79  0008               	return
  3737  0A7A                     __end_of_temp_set:	
  3738                           
  3739                           	psect	text15
  3740  161D                     __ptext15:	
  3741 ;; *************** function _temp_control_off *****************
  3742 ;; Defined at:
  3743 ;;		line 86 in file "temp_control.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0
  3759 ;;      Temps:          0       1       0       0       0
  3760 ;;      Totals:         0       1       0       0       0
  3761 ;;Total ram usage:        1 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    3
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_temp_set
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           
  3772                           ;psect for function _temp_control_off
  3773  161D                     _temp_control_off:	
  3774  161D                     l3926:	
  3775                           ;incstack = 0
  3776                           ; Regs used in _temp_control_off: [wreg+status,2+status,0]
  3777                           
  3778                           
  3779                           ;temp_control.c: 87:     (PORTC &= ~(1 << 5));
  3780  161D  30DF               	movlw	223
  3781  161E  1283               	bcf	3,5	;RP0=0, select bank0
  3782  161F  1303               	bcf	3,6	;RP1=0, select bank0
  3783  1620  00A8               	movwf	??_temp_control_off
  3784  1621  0828               	movf	??_temp_control_off,w
  3785  1622  0587               	andwf	7,f	;volatile
  3786                           
  3787                           ;temp_control.c: 88:     (PORTC &= ~(1 << 2));
  3788  1623  30FB               	movlw	251
  3789  1624  00A8               	movwf	??_temp_control_off
  3790  1625  0828               	movf	??_temp_control_off,w
  3791  1626  0587               	andwf	7,f	;volatile
  3792                           
  3793                           ;temp_control.c: 89:     (PORTB &= ~(1 << 4));
  3794  1627  30EF               	movlw	239
  3795  1628  00A8               	movwf	??_temp_control_off
  3796  1629  0828               	movf	??_temp_control_off,w
  3797  162A  0586               	andwf	6,f	;volatile
  3798  162B                     l304:	
  3799  162B  0008               	return
  3800  162C                     __end_of_temp_control_off:	
  3801                           
  3802                           	psect	text16
  3803  083E                     __ptext16:	
  3804 ;; *************** function _average *****************
  3805 ;; Defined at:
  3806 ;;		line 27 in file "temp_sensor.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  sum             2   19[BANK0 ] unsigned int 
  3811 ;;  i               1   21[BANK0 ] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      unsigned char 
  3814 ;; Registers used:
  3815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         0       0       0       0       0
  3822 ;;      Locals:         0       3       0       0       0
  3823 ;;      Temps:          0       3       0       0       0
  3824 ;;      Totals:         0       6       0       0       0
  3825 ;;Total ram usage:        6 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    4
  3828 ;; This function calls:
  3829 ;;		___lwdiv
  3830 ;; This function is called by:
  3831 ;;		_temp_sensor_read
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function _average
  3837  083E                     _average:	
  3838  083E                     l3928:	
  3839                           ;incstack = 0
  3840                           ; Regs used in _average: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3841                           
  3842                           
  3843                           ;temp_sensor.c: 28:     uint8_t i = 0 ;
  3844  083E  1283               	bcf	3,5	;RP0=0, select bank0
  3845  083F  1303               	bcf	3,6	;RP1=0, select bank0
  3846  0840  01B5               	clrf	average@i
  3847                           
  3848                           ;temp_sensor.c: 29:     uint16_t sum = 0 ;
  3849  0841  01B3               	clrf	average@sum
  3850  0842  01B4               	clrf	average@sum+1
  3851                           
  3852                           ;temp_sensor.c: 30:     for (i = 0 ; i < 10 ; i++){
  3853  0843  01B5               	clrf	average@i
  3854  0844                     l3934:	
  3855                           
  3856                           ;temp_sensor.c: 31:         sum = sum + temp_hold_array[i] ;
  3857  0844  0835               	movf	average@i,w
  3858  0845  00B0               	movwf	??_average
  3859  0846  0730               	addwf	??_average,w
  3860  0847  3ECA               	addlw	(low (_temp_hold_array| 0))& (0+255)
  3861  0848  0084               	movwf	4
  3862  0849  1383               	bcf	3,7	;select IRP bank1
  3863  084A  0800               	movf	0,w
  3864  084B  00B1               	movwf	??_average+1
  3865  084C  0A84               	incf	4,f
  3866  084D  0800               	movf	0,w
  3867  084E  00B2               	movwf	??_average+2
  3868  084F  0833               	movf	average@sum,w
  3869  0850  0731               	addwf	??_average+1,w
  3870  0851  00B3               	movwf	average@sum
  3871  0852  0834               	movf	average@sum+1,w
  3872  0853  1803               	skipnc
  3873  0854  0A34               	incf	average@sum+1,w
  3874  0855  0732               	addwf	??_average+2,w
  3875  0856  00B4               	movwf	average@sum+1
  3876  0857                     l3936:	
  3877                           
  3878                           ;temp_sensor.c: 32:     }
  3879  0857  3001               	movlw	1
  3880  0858  00B0               	movwf	??_average
  3881  0859  0830               	movf	??_average,w
  3882  085A  07B5               	addwf	average@i,f
  3883  085B                     l3938:	
  3884  085B  300A               	movlw	10
  3885  085C  0235               	subwf	average@i,w
  3886  085D  1C03               	skipc
  3887  085E  2860               	goto	u3791
  3888  085F  2861               	goto	u3790
  3889  0860                     u3791:	
  3890  0860  2844               	goto	l3934
  3891  0861                     u3790:	
  3892  0861                     l3940:	
  3893                           
  3894                           ;temp_sensor.c: 33:     return (sum / 10) ;
  3895  0861  300A               	movlw	10
  3896  0862  00A8               	movwf	___lwdiv@divisor
  3897  0863  3000               	movlw	0
  3898  0864  00A9               	movwf	___lwdiv@divisor+1
  3899  0865  0834               	movf	average@sum+1,w
  3900  0866  00AB               	movwf	___lwdiv@dividend+1
  3901  0867  0833               	movf	average@sum,w
  3902  0868  00AA               	movwf	___lwdiv@dividend
  3903  0869  120A  158A  20B2  120A  158A  	fcall	___lwdiv
  3904  086E  1283               	bcf	3,5	;RP0=0, select bank0
  3905  086F  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0870  0828               	movf	?___lwdiv,w
  3907  0871                     l326:	
  3908  0871  0008               	return
  3909  0872                     __end_of_average:	
  3910                           
  3911                           	psect	text17
  3912  08B2                     __ptext17:	
  3913 ;; *************** function ___lwdiv *****************
  3914 ;; Defined at:
  3915 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  divisor         2    8[BANK0 ] unsigned int 
  3918 ;;  dividend        2   10[BANK0 ] unsigned int 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  quotient        2   14[BANK0 ] unsigned int 
  3921 ;;  counter         1   13[BANK0 ] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  2    8[BANK0 ] unsigned int 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       4       0       0       0
  3932 ;;      Locals:         0       3       0       0       0
  3933 ;;      Temps:          0       1       0       0       0
  3934 ;;      Totals:         0       8       0       0       0
  3935 ;;Total ram usage:        8 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    3
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_average
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function ___lwdiv
  3947  08B2                     ___lwdiv:	
  3948  08B2                     l3698:	
  3949                           ;incstack = 0
  3950                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3951                           
  3952  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  3953  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  3954  08B4  01AE               	clrf	___lwdiv@quotient
  3955  08B5  01AF               	clrf	___lwdiv@quotient+1
  3956  08B6                     l3700:	
  3957  08B6  0828               	movf	___lwdiv@divisor,w
  3958  08B7  0429               	iorwf	___lwdiv@divisor+1,w
  3959  08B8  1903               	btfsc	3,2
  3960  08B9  28BB               	goto	u3601
  3961  08BA  28BC               	goto	u3600
  3962  08BB                     u3601:	
  3963  08BB  28F3               	goto	l3720
  3964  08BC                     u3600:	
  3965  08BC                     l3702:	
  3966  08BC  01AD               	clrf	___lwdiv@counter
  3967  08BD  0AAD               	incf	___lwdiv@counter,f
  3968  08BE  28CA               	goto	l3708
  3969  08BF                     l3704:	
  3970  08BF  3001               	movlw	1
  3971  08C0                     u3615:	
  3972  08C0  1003               	clrc
  3973  08C1  0DA8               	rlf	___lwdiv@divisor,f
  3974  08C2  0DA9               	rlf	___lwdiv@divisor+1,f
  3975  08C3  3EFF               	addlw	-1
  3976  08C4  1D03               	skipz
  3977  08C5  28C0               	goto	u3615
  3978  08C6                     l3706:	
  3979  08C6  3001               	movlw	1
  3980  08C7  00AC               	movwf	??___lwdiv
  3981  08C8  082C               	movf	??___lwdiv,w
  3982  08C9  07AD               	addwf	___lwdiv@counter,f
  3983  08CA                     l3708:	
  3984  08CA  1FA9               	btfss	___lwdiv@divisor+1,7
  3985  08CB  28CD               	goto	u3621
  3986  08CC  28CE               	goto	u3620
  3987  08CD                     u3621:	
  3988  08CD  28BF               	goto	l3704
  3989  08CE                     u3620:	
  3990  08CE                     l3710:	
  3991  08CE  3001               	movlw	1
  3992  08CF                     u3635:	
  3993  08CF  1003               	clrc
  3994  08D0  0DAE               	rlf	___lwdiv@quotient,f
  3995  08D1  0DAF               	rlf	___lwdiv@quotient+1,f
  3996  08D2  3EFF               	addlw	-1
  3997  08D3  1D03               	skipz
  3998  08D4  28CF               	goto	u3635
  3999  08D5  0829               	movf	___lwdiv@divisor+1,w
  4000  08D6  022B               	subwf	___lwdiv@dividend+1,w
  4001  08D7  1D03               	skipz
  4002  08D8  28DB               	goto	u3645
  4003  08D9  0828               	movf	___lwdiv@divisor,w
  4004  08DA  022A               	subwf	___lwdiv@dividend,w
  4005  08DB                     u3645:	
  4006  08DB  1C03               	skipc
  4007  08DC  28DE               	goto	u3641
  4008  08DD  28DF               	goto	u3640
  4009  08DE                     u3641:	
  4010  08DE  28E6               	goto	l3716
  4011  08DF                     u3640:	
  4012  08DF                     l3712:	
  4013  08DF  0828               	movf	___lwdiv@divisor,w
  4014  08E0  02AA               	subwf	___lwdiv@dividend,f
  4015  08E1  0829               	movf	___lwdiv@divisor+1,w
  4016  08E2  1C03               	skipc
  4017  08E3  03AB               	decf	___lwdiv@dividend+1,f
  4018  08E4  02AB               	subwf	___lwdiv@dividend+1,f
  4019  08E5                     l3714:	
  4020  08E5  142E               	bsf	___lwdiv@quotient,0
  4021  08E6                     l3716:	
  4022  08E6  3001               	movlw	1
  4023  08E7                     u3655:	
  4024  08E7  1003               	clrc
  4025  08E8  0CA9               	rrf	___lwdiv@divisor+1,f
  4026  08E9  0CA8               	rrf	___lwdiv@divisor,f
  4027  08EA  3EFF               	addlw	-1
  4028  08EB  1D03               	skipz
  4029  08EC  28E7               	goto	u3655
  4030  08ED                     l3718:	
  4031  08ED  3001               	movlw	1
  4032  08EE  02AD               	subwf	___lwdiv@counter,f
  4033  08EF  1D03               	btfss	3,2
  4034  08F0  28F2               	goto	u3661
  4035  08F1  28F3               	goto	u3660
  4036  08F2                     u3661:	
  4037  08F2  28CE               	goto	l3710
  4038  08F3                     u3660:	
  4039  08F3                     l3720:	
  4040  08F3  082F               	movf	___lwdiv@quotient+1,w
  4041  08F4  00A9               	movwf	?___lwdiv+1
  4042  08F5  082E               	movf	___lwdiv@quotient,w
  4043  08F6  00A8               	movwf	?___lwdiv
  4044  08F7                     l782:	
  4045  08F7  0008               	return
  4046  08F8                     __end_of___lwdiv:	
  4047                           
  4048                           	psect	text18
  4049  0E65                     __ptext18:	
  4050 ;; *************** function ___xxtofl *****************
  4051 ;; Defined at:
  4052 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  sign            1    wreg     unsigned char 
  4055 ;;  val             4   13[BANK0 ] long 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  sign            1   21[BANK0 ] unsigned char 
  4058 ;;  arg             4   23[BANK0 ] unsigned long 
  4059 ;;  exp             1   22[BANK0 ] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  4   13[BANK0 ] unsigned char 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         0       4       0       0       0
  4070 ;;      Locals:         0       6       0       0       0
  4071 ;;      Temps:          0       4       0       0       0
  4072 ;;      Totals:         0      14       0       0       0
  4073 ;;Total ram usage:       14 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    3
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_temp_sensor_read
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function ___xxtofl
  4085  0E65                     ___xxtofl:	
  4086                           
  4087                           ;incstack = 0
  4088                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4089                           ;___xxtofl@sign stored from wreg
  4090  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0E67  00B5               	movwf	___xxtofl@sign
  4093  0E68                     l4358:	
  4094  0E68  0835               	movf	___xxtofl@sign,w
  4095  0E69  1903               	btfsc	3,2
  4096  0E6A  2E6C               	goto	u4771
  4097  0E6B  2E6D               	goto	u4770
  4098  0E6C                     u4771:	
  4099  0E6C  2E81               	goto	l4364
  4100  0E6D                     u4770:	
  4101  0E6D                     l4360:	
  4102  0E6D  1FB0               	btfss	___xxtofl@val+3,7
  4103  0E6E  2E70               	goto	u4781
  4104  0E6F  2E71               	goto	u4780
  4105  0E70                     u4781:	
  4106  0E70  2E81               	goto	l4364
  4107  0E71                     u4780:	
  4108  0E71                     l4362:	
  4109  0E71  092D               	comf	___xxtofl@val,w
  4110  0E72  00B7               	movwf	___xxtofl@arg
  4111  0E73  092E               	comf	___xxtofl@val+1,w
  4112  0E74  00B8               	movwf	___xxtofl@arg+1
  4113  0E75  092F               	comf	___xxtofl@val+2,w
  4114  0E76  00B9               	movwf	___xxtofl@arg+2
  4115  0E77  0930               	comf	___xxtofl@val+3,w
  4116  0E78  00BA               	movwf	___xxtofl@arg+3
  4117  0E79  0AB7               	incf	___xxtofl@arg,f
  4118  0E7A  1903               	skipnz
  4119  0E7B  0AB8               	incf	___xxtofl@arg+1,f
  4120  0E7C  1903               	skipnz
  4121  0E7D  0AB9               	incf	___xxtofl@arg+2,f
  4122  0E7E  1903               	skipnz
  4123  0E7F  0ABA               	incf	___xxtofl@arg+3,f
  4124  0E80  2E89               	goto	l937
  4125  0E81                     l4364:	
  4126  0E81  0830               	movf	___xxtofl@val+3,w
  4127  0E82  00BA               	movwf	___xxtofl@arg+3
  4128  0E83  082F               	movf	___xxtofl@val+2,w
  4129  0E84  00B9               	movwf	___xxtofl@arg+2
  4130  0E85  082E               	movf	___xxtofl@val+1,w
  4131  0E86  00B8               	movwf	___xxtofl@arg+1
  4132  0E87  082D               	movf	___xxtofl@val,w
  4133  0E88  00B7               	movwf	___xxtofl@arg
  4134  0E89                     l937:	
  4135  0E89  0830               	movf	___xxtofl@val+3,w
  4136  0E8A  042F               	iorwf	___xxtofl@val+2,w
  4137  0E8B  042E               	iorwf	___xxtofl@val+1,w
  4138  0E8C  042D               	iorwf	___xxtofl@val,w
  4139  0E8D  1D03               	skipz
  4140  0E8E  2E90               	goto	u4791
  4141  0E8F  2E91               	goto	u4790
  4142  0E90                     u4791:	
  4143  0E90  2E9A               	goto	l4370
  4144  0E91                     u4790:	
  4145  0E91                     l4366:	
  4146  0E91  3000               	movlw	0
  4147  0E92  00B0               	movwf	?___xxtofl+3
  4148  0E93  3000               	movlw	0
  4149  0E94  00AF               	movwf	?___xxtofl+2
  4150  0E95  3000               	movlw	0
  4151  0E96  00AE               	movwf	?___xxtofl+1
  4152  0E97  3000               	movlw	0
  4153  0E98  00AD               	movwf	?___xxtofl
  4154  0E99  2F20               	goto	l939
  4155  0E9A                     l4370:	
  4156  0E9A  3096               	movlw	150
  4157  0E9B  00B1               	movwf	??___xxtofl
  4158  0E9C  0831               	movf	??___xxtofl,w
  4159  0E9D  00B6               	movwf	___xxtofl@exp
  4160  0E9E  2EAC               	goto	l4374
  4161  0E9F                     l4372:	
  4162  0E9F  3001               	movlw	1
  4163  0EA0  00B1               	movwf	??___xxtofl
  4164  0EA1  0831               	movf	??___xxtofl,w
  4165  0EA2  07B6               	addwf	___xxtofl@exp,f
  4166  0EA3  3001               	movlw	1
  4167  0EA4                     u4805:	
  4168  0EA4  1003               	clrc
  4169  0EA5  0CBA               	rrf	___xxtofl@arg+3,f
  4170  0EA6  0CB9               	rrf	___xxtofl@arg+2,f
  4171  0EA7  0CB8               	rrf	___xxtofl@arg+1,f
  4172  0EA8  0CB7               	rrf	___xxtofl@arg,f
  4173  0EA9  3EFF               	addlw	-1
  4174  0EAA  1D03               	skipz
  4175  0EAB  2EA4               	goto	u4805
  4176  0EAC                     l4374:	
  4177  0EAC  30FE               	movlw	254
  4178  0EAD  053A               	andwf	___xxtofl@arg+3,w
  4179  0EAE  1D03               	btfss	3,2
  4180  0EAF  2EB1               	goto	u4811
  4181  0EB0  2EB2               	goto	u4810
  4182  0EB1                     u4811:	
  4183  0EB1  2E9F               	goto	l4372
  4184  0EB2                     u4810:	
  4185  0EB2  2ECE               	goto	l943
  4186  0EB3                     l4376:	
  4187  0EB3  3001               	movlw	1
  4188  0EB4  00B1               	movwf	??___xxtofl
  4189  0EB5  0831               	movf	??___xxtofl,w
  4190  0EB6  07B6               	addwf	___xxtofl@exp,f
  4191  0EB7                     l4378:	
  4192  0EB7  3001               	movlw	1
  4193  0EB8  07B7               	addwf	___xxtofl@arg,f
  4194  0EB9  3000               	movlw	0
  4195  0EBA  1803               	skipnc
  4196  0EBB  3001               	movlw	1
  4197  0EBC  07B8               	addwf	___xxtofl@arg+1,f
  4198  0EBD  3000               	movlw	0
  4199  0EBE  1803               	skipnc
  4200  0EBF  3001               	movlw	1
  4201  0EC0  07B9               	addwf	___xxtofl@arg+2,f
  4202  0EC1  3000               	movlw	0
  4203  0EC2  1803               	skipnc
  4204  0EC3  3001               	movlw	1
  4205  0EC4  07BA               	addwf	___xxtofl@arg+3,f
  4206  0EC5                     l4380:	
  4207  0EC5  3001               	movlw	1
  4208  0EC6                     u4825:	
  4209  0EC6  1003               	clrc
  4210  0EC7  0CBA               	rrf	___xxtofl@arg+3,f
  4211  0EC8  0CB9               	rrf	___xxtofl@arg+2,f
  4212  0EC9  0CB8               	rrf	___xxtofl@arg+1,f
  4213  0ECA  0CB7               	rrf	___xxtofl@arg,f
  4214  0ECB  3EFF               	addlw	-1
  4215  0ECC  1D03               	skipz
  4216  0ECD  2EC6               	goto	u4825
  4217  0ECE                     l943:	
  4218  0ECE  30FF               	movlw	255
  4219  0ECF  053A               	andwf	___xxtofl@arg+3,w
  4220  0ED0  1D03               	btfss	3,2
  4221  0ED1  2ED3               	goto	u4831
  4222  0ED2  2ED4               	goto	u4830
  4223  0ED3                     u4831:	
  4224  0ED3  2EB3               	goto	l4376
  4225  0ED4                     u4830:	
  4226  0ED4  2EE0               	goto	l4384
  4227  0ED5                     l4382:	
  4228  0ED5  3001               	movlw	1
  4229  0ED6  02B6               	subwf	___xxtofl@exp,f
  4230  0ED7  3001               	movlw	1
  4231  0ED8  00B1               	movwf	??___xxtofl
  4232  0ED9                     u4845:	
  4233  0ED9  1003               	clrc
  4234  0EDA  0DB7               	rlf	___xxtofl@arg,f
  4235  0EDB  0DB8               	rlf	___xxtofl@arg+1,f
  4236  0EDC  0DB9               	rlf	___xxtofl@arg+2,f
  4237  0EDD  0DBA               	rlf	___xxtofl@arg+3,f
  4238  0EDE  0BB1               	decfsz	??___xxtofl,f
  4239  0EDF  2ED9               	goto	u4845
  4240  0EE0                     l4384:	
  4241  0EE0  1BB9               	btfsc	___xxtofl@arg+2,7
  4242  0EE1  2EE3               	goto	u4851
  4243  0EE2  2EE4               	goto	u4850
  4244  0EE3                     u4851:	
  4245  0EE3  2EEA               	goto	l950
  4246  0EE4                     u4850:	
  4247  0EE4                     l4386:	
  4248  0EE4  3002               	movlw	2
  4249  0EE5  0236               	subwf	___xxtofl@exp,w
  4250  0EE6  1803               	skipnc
  4251  0EE7  2EE9               	goto	u4861
  4252  0EE8  2EEA               	goto	u4860
  4253  0EE9                     u4861:	
  4254  0EE9  2ED5               	goto	l4382
  4255  0EEA                     u4860:	
  4256  0EEA                     l950:	
  4257  0EEA  1836               	btfsc	___xxtofl@exp,0
  4258  0EEB  2EED               	goto	u4871
  4259  0EEC  2EEE               	goto	u4870
  4260  0EED                     u4871:	
  4261  0EED  2EF6               	goto	l951
  4262  0EEE                     u4870:	
  4263  0EEE                     l4388:	
  4264  0EEE  30FF               	movlw	255
  4265  0EEF  05B7               	andwf	___xxtofl@arg,f
  4266  0EF0  30FF               	movlw	255
  4267  0EF1  05B8               	andwf	___xxtofl@arg+1,f
  4268  0EF2  307F               	movlw	127
  4269  0EF3  05B9               	andwf	___xxtofl@arg+2,f
  4270  0EF4  30FF               	movlw	255
  4271  0EF5  05BA               	andwf	___xxtofl@arg+3,f
  4272  0EF6                     l951:	
  4273  0EF6  1003               	clrc
  4274  0EF7  0CB6               	rrf	___xxtofl@exp,f
  4275  0EF8                     l4390:	
  4276  0EF8  0836               	movf	___xxtofl@exp,w
  4277  0EF9  00B1               	movwf	??___xxtofl
  4278  0EFA  01B2               	clrf	??___xxtofl+1
  4279  0EFB  01B3               	clrf	??___xxtofl+2
  4280  0EFC  01B4               	clrf	??___xxtofl+3
  4281  0EFD  3018               	movlw	24
  4282  0EFE                     u4885:	
  4283  0EFE  1003               	clrc
  4284  0EFF  0DB1               	rlf	??___xxtofl,f
  4285  0F00  0DB2               	rlf	??___xxtofl+1,f
  4286  0F01  0DB3               	rlf	??___xxtofl+2,f
  4287  0F02  0DB4               	rlf	??___xxtofl+3,f
  4288  0F03                     u4880:	
  4289  0F03  3EFF               	addlw	-1
  4290  0F04  1D03               	skipz
  4291  0F05  2EFE               	goto	u4885
  4292  0F06  0831               	movf	??___xxtofl,w
  4293  0F07  04B7               	iorwf	___xxtofl@arg,f
  4294  0F08  0832               	movf	??___xxtofl+1,w
  4295  0F09  04B8               	iorwf	___xxtofl@arg+1,f
  4296  0F0A  0833               	movf	??___xxtofl+2,w
  4297  0F0B  04B9               	iorwf	___xxtofl@arg+2,f
  4298  0F0C  0834               	movf	??___xxtofl+3,w
  4299  0F0D  04BA               	iorwf	___xxtofl@arg+3,f
  4300  0F0E                     l4392:	
  4301  0F0E  0835               	movf	___xxtofl@sign,w
  4302  0F0F  1903               	btfsc	3,2
  4303  0F10  2F12               	goto	u4891
  4304  0F11  2F13               	goto	u4890
  4305  0F12                     u4891:	
  4306  0F12  2F18               	goto	l4398
  4307  0F13                     u4890:	
  4308  0F13                     l4394:	
  4309  0F13  1FB0               	btfss	___xxtofl@val+3,7
  4310  0F14  2F16               	goto	u4901
  4311  0F15  2F17               	goto	u4900
  4312  0F16                     u4901:	
  4313  0F16  2F18               	goto	l4398
  4314  0F17                     u4900:	
  4315  0F17                     l4396:	
  4316  0F17  17BA               	bsf	___xxtofl@arg+3,7
  4317  0F18                     l4398:	
  4318  0F18  083A               	movf	___xxtofl@arg+3,w
  4319  0F19  00B0               	movwf	?___xxtofl+3
  4320  0F1A  0839               	movf	___xxtofl@arg+2,w
  4321  0F1B  00AF               	movwf	?___xxtofl+2
  4322  0F1C  0838               	movf	___xxtofl@arg+1,w
  4323  0F1D  00AE               	movwf	?___xxtofl+1
  4324  0F1E  0837               	movf	___xxtofl@arg,w
  4325  0F1F  00AD               	movwf	?___xxtofl
  4326  0F20                     l939:	
  4327  0F20  0008               	return
  4328  0F21                     __end_of___xxtofl:	
  4329                           
  4330                           	psect	text19
  4331  0BC1                     __ptext19:	
  4332 ;; *************** function ___fltol *****************
  4333 ;; Defined at:
  4334 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  f1              4   53[BANK0 ] unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  exp1            1   63[BANK0 ] unsigned char 
  4339 ;;  sign1           1   62[BANK0 ] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  4   53[BANK0 ] long 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         0       4       0       0       0
  4350 ;;      Locals:         0       2       0       0       0
  4351 ;;      Temps:          0       5       0       0       0
  4352 ;;      Totals:         0      11       0       0       0
  4353 ;;Total ram usage:       11 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    3
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_temp_sensor_read
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function ___fltol
  4365  0BC1                     ___fltol:	
  4366  0BC1                     l4040:	
  4367                           ;incstack = 0
  4368                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4369                           
  4370  0BC1  1003               	clrc
  4371  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  4372  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  4373  0BC4  0D57               	rlf	___fltol@f1+2,w
  4374  0BC5  0D58               	rlf	___fltol@f1+3,w
  4375  0BC6  00D9               	movwf	??___fltol
  4376  0BC7  0859               	movf	??___fltol,w
  4377  0BC8  00DF               	movwf	___fltol@exp1
  4378  0BC9  085F               	movf	___fltol@exp1,w
  4379  0BCA  1D03               	btfss	3,2
  4380  0BCB  2BCD               	goto	u4011
  4381  0BCC  2BCE               	goto	u4010
  4382  0BCD                     u4011:	
  4383  0BCD  2BD7               	goto	l4046
  4384  0BCE                     u4010:	
  4385  0BCE                     l4042:	
  4386  0BCE  3000               	movlw	0
  4387  0BCF  00D8               	movwf	?___fltol+3
  4388  0BD0  3000               	movlw	0
  4389  0BD1  00D7               	movwf	?___fltol+2
  4390  0BD2  3000               	movlw	0
  4391  0BD3  00D6               	movwf	?___fltol+1
  4392  0BD4  3000               	movlw	0
  4393  0BD5  00D5               	movwf	?___fltol
  4394  0BD6  2C3C               	goto	l696
  4395  0BD7                     l4046:	
  4396  0BD7  0855               	movf	___fltol@f1,w
  4397  0BD8  00D9               	movwf	??___fltol
  4398  0BD9  0856               	movf	___fltol@f1+1,w
  4399  0BDA  00DA               	movwf	??___fltol+1
  4400  0BDB  0857               	movf	___fltol@f1+2,w
  4401  0BDC  00DB               	movwf	??___fltol+2
  4402  0BDD  0858               	movf	___fltol@f1+3,w
  4403  0BDE  00DC               	movwf	??___fltol+3
  4404  0BDF  301F               	movlw	31
  4405  0BE0                     u4025:	
  4406  0BE0  1003               	clrc
  4407  0BE1  0CDC               	rrf	??___fltol+3,f
  4408  0BE2  0CDB               	rrf	??___fltol+2,f
  4409  0BE3  0CDA               	rrf	??___fltol+1,f
  4410  0BE4  0CD9               	rrf	??___fltol,f
  4411  0BE5                     u4020:	
  4412  0BE5  3EFF               	addlw	-1
  4413  0BE6  1D03               	skipz
  4414  0BE7  2BE0               	goto	u4025
  4415  0BE8  0859               	movf	??___fltol,w
  4416  0BE9  00DD               	movwf	??___fltol+4
  4417  0BEA  085D               	movf	??___fltol+4,w
  4418  0BEB  00DE               	movwf	___fltol@sign1
  4419  0BEC                     l4048:	
  4420  0BEC  17D7               	bsf	___fltol@f1+2,7
  4421  0BED                     l4050:	
  4422  0BED  30FF               	movlw	255
  4423  0BEE  05D5               	andwf	___fltol@f1,f
  4424  0BEF  30FF               	movlw	255
  4425  0BF0  05D6               	andwf	___fltol@f1+1,f
  4426  0BF1  30FF               	movlw	255
  4427  0BF2  05D7               	andwf	___fltol@f1+2,f
  4428  0BF3  3000               	movlw	0
  4429  0BF4  05D8               	andwf	___fltol@f1+3,f
  4430  0BF5                     l4052:	
  4431  0BF5  3096               	movlw	150
  4432  0BF6  02DF               	subwf	___fltol@exp1,f
  4433  0BF7                     l4054:	
  4434  0BF7  1FDF               	btfss	___fltol@exp1,7
  4435  0BF8  2BFA               	goto	u4031
  4436  0BF9  2BFB               	goto	u4030
  4437  0BFA                     u4031:	
  4438  0BFA  2C15               	goto	l4064
  4439  0BFB                     u4030:	
  4440  0BFB                     l4056:	
  4441  0BFB  085F               	movf	___fltol@exp1,w
  4442  0BFC  3A80               	xorlw	128
  4443  0BFD  3E97               	addlw	151
  4444  0BFE  1803               	skipnc
  4445  0BFF  2C01               	goto	u4041
  4446  0C00  2C02               	goto	u4040
  4447  0C01                     u4041:	
  4448  0C01  2C03               	goto	l4062
  4449  0C02                     u4040:	
  4450  0C02  2BCE               	goto	l4042
  4451  0C03                     l4062:	
  4452  0C03  3001               	movlw	1
  4453  0C04                     u4055:	
  4454  0C04  1003               	clrc
  4455  0C05  0CD8               	rrf	___fltol@f1+3,f
  4456  0C06  0CD7               	rrf	___fltol@f1+2,f
  4457  0C07  0CD6               	rrf	___fltol@f1+1,f
  4458  0C08  0CD5               	rrf	___fltol@f1,f
  4459  0C09  3EFF               	addlw	-1
  4460  0C0A  1D03               	skipz
  4461  0C0B  2C04               	goto	u4055
  4462  0C0C  3001               	movlw	1
  4463  0C0D  00D9               	movwf	??___fltol
  4464  0C0E  0859               	movf	??___fltol,w
  4465  0C0F  07DF               	addwf	___fltol@exp1,f
  4466  0C10  1D03               	btfss	3,2
  4467  0C11  2C13               	goto	u4061
  4468  0C12  2C14               	goto	u4060
  4469  0C13                     u4061:	
  4470  0C13  2C03               	goto	l4062
  4471  0C14                     u4060:	
  4472  0C14  2C2C               	goto	l4072
  4473  0C15                     l4064:	
  4474  0C15  3020               	movlw	32
  4475  0C16  025F               	subwf	___fltol@exp1,w
  4476  0C17  1C03               	skipc
  4477  0C18  2C1A               	goto	u4071
  4478  0C19  2C1B               	goto	u4070
  4479  0C1A                     u4071:	
  4480  0C1A  2C27               	goto	l703
  4481  0C1B                     u4070:	
  4482  0C1B  2BCE               	goto	l4042
  4483  0C1C                     l4070:	
  4484  0C1C  3001               	movlw	1
  4485  0C1D  00D9               	movwf	??___fltol
  4486  0C1E                     u4085:	
  4487  0C1E  1003               	clrc
  4488  0C1F  0DD5               	rlf	___fltol@f1,f
  4489  0C20  0DD6               	rlf	___fltol@f1+1,f
  4490  0C21  0DD7               	rlf	___fltol@f1+2,f
  4491  0C22  0DD8               	rlf	___fltol@f1+3,f
  4492  0C23  0BD9               	decfsz	??___fltol,f
  4493  0C24  2C1E               	goto	u4085
  4494  0C25  3001               	movlw	1
  4495  0C26  02DF               	subwf	___fltol@exp1,f
  4496  0C27                     l703:	
  4497  0C27  085F               	movf	___fltol@exp1,w
  4498  0C28  1D03               	btfss	3,2
  4499  0C29  2C2B               	goto	u4091
  4500  0C2A  2C2C               	goto	u4090
  4501  0C2B                     u4091:	
  4502  0C2B  2C1C               	goto	l4070
  4503  0C2C                     u4090:	
  4504  0C2C                     l4072:	
  4505  0C2C  085E               	movf	___fltol@sign1,w
  4506  0C2D  1903               	btfsc	3,2
  4507  0C2E  2C30               	goto	u4101
  4508  0C2F  2C31               	goto	u4100
  4509  0C30                     u4101:	
  4510  0C30  2C3C               	goto	l706
  4511  0C31                     u4100:	
  4512  0C31                     l4074:	
  4513  0C31  09D5               	comf	___fltol@f1,f
  4514  0C32  09D6               	comf	___fltol@f1+1,f
  4515  0C33  09D7               	comf	___fltol@f1+2,f
  4516  0C34  09D8               	comf	___fltol@f1+3,f
  4517  0C35  0AD5               	incf	___fltol@f1,f
  4518  0C36  1903               	skipnz
  4519  0C37  0AD6               	incf	___fltol@f1+1,f
  4520  0C38  1903               	skipnz
  4521  0C39  0AD7               	incf	___fltol@f1+2,f
  4522  0C3A  1903               	skipnz
  4523  0C3B  0AD8               	incf	___fltol@f1+3,f
  4524  0C3C                     l706:	
  4525  0C3C                     l696:	
  4526  0C3C  0008               	return
  4527  0C3D                     __end_of___fltol:	
  4528                           
  4529                           	psect	text20
  4530  004D                     __ptext20:	
  4531 ;; *************** function ___flmul *****************
  4532 ;; Defined at:
  4533 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  b               4   27[BANK0 ] long 
  4536 ;;  a               4   31[BANK0 ] long 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  prod            4   47[BANK0 ] struct .
  4539 ;;  grs             4   42[BANK0 ] unsigned long 
  4540 ;;  temp            2   51[BANK0 ] struct .
  4541 ;;  bexp            1   46[BANK0 ] unsigned char 
  4542 ;;  aexp            1   41[BANK0 ] unsigned char 
  4543 ;;  sign            1   40[BANK0 ] unsigned char 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  4   27[BANK0 ] unsigned char 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4553 ;;      Params:         0       8       0       0       0
  4554 ;;      Locals:         0      13       0       0       0
  4555 ;;      Temps:          0       5       0       0       0
  4556 ;;      Totals:         0      26       0       0       0
  4557 ;;Total ram usage:       26 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    4
  4560 ;; This function calls:
  4561 ;;		__Umul8_16
  4562 ;; This function is called by:
  4563 ;;		_temp_sensor_read
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function ___flmul
  4569  004D                     ___flmul:	
  4570  004D                     l4218:	
  4571                           ;incstack = 0
  4572                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4573                           
  4574  004D  1283               	bcf	3,5	;RP0=0, select bank0
  4575  004E  1303               	bcf	3,6	;RP1=0, select bank0
  4576  004F  083E               	movf	___flmul@b+3,w
  4577  0050  3980               	andlw	128
  4578  0051  00C3               	movwf	??___flmul
  4579  0052  0843               	movf	??___flmul,w
  4580  0053  00C8               	movwf	___flmul@sign
  4581  0054                     l4220:	
  4582  0054  083E               	movf	___flmul@b+3,w
  4583  0055  00C3               	movwf	??___flmul
  4584  0056  0743               	addwf	??___flmul,w
  4585  0057  00C4               	movwf	??___flmul+1
  4586  0058  0844               	movf	??___flmul+1,w
  4587  0059  00CE               	movwf	___flmul@bexp
  4588  005A                     l4222:	
  4589  005A  1FBD               	btfss	___flmul@b+2,7
  4590  005B  285D               	goto	u4401
  4591  005C  285E               	goto	u4400
  4592  005D                     u4401:	
  4593  005D  285F               	goto	l4226
  4594  005E                     u4400:	
  4595  005E                     l4224:	
  4596  005E  144E               	bsf	___flmul@bexp,0
  4597  005F                     l4226:	
  4598  005F  084E               	movf	___flmul@bexp,w
  4599  0060  1903               	btfsc	3,2
  4600  0061  2863               	goto	u4411
  4601  0062  2864               	goto	u4410
  4602  0063                     u4411:	
  4603  0063  2873               	goto	l4234
  4604  0064                     u4410:	
  4605  0064                     l4228:	
  4606  0064  0A4E               	incf	___flmul@bexp,w
  4607  0065  1D03               	btfss	3,2
  4608  0066  2868               	goto	u4421
  4609  0067  2869               	goto	u4420
  4610  0068                     u4421:	
  4611  0068  2871               	goto	l4232
  4612  0069                     u4420:	
  4613  0069                     l4230:	
  4614  0069  3000               	movlw	0
  4615  006A  00BE               	movwf	___flmul@b+3
  4616  006B  3000               	movlw	0
  4617  006C  00BD               	movwf	___flmul@b+2
  4618  006D  3000               	movlw	0
  4619  006E  00BC               	movwf	___flmul@b+1
  4620  006F  3000               	movlw	0
  4621  0070  00BB               	movwf	___flmul@b
  4622  0071                     l4232:	
  4623  0071  17BD               	bsf	___flmul@b+2,7
  4624  0072  287B               	goto	l4236
  4625  0073                     l4234:	
  4626  0073  3000               	movlw	0
  4627  0074  00BE               	movwf	___flmul@b+3
  4628  0075  3000               	movlw	0
  4629  0076  00BD               	movwf	___flmul@b+2
  4630  0077  3000               	movlw	0
  4631  0078  00BC               	movwf	___flmul@b+1
  4632  0079  3000               	movlw	0
  4633  007A  00BB               	movwf	___flmul@b
  4634  007B                     l4236:	
  4635  007B  0842               	movf	___flmul@a+3,w
  4636  007C  3980               	andlw	128
  4637  007D  00C3               	movwf	??___flmul
  4638  007E  0843               	movf	??___flmul,w
  4639  007F  06C8               	xorwf	___flmul@sign,f
  4640  0080                     l4238:	
  4641  0080  0842               	movf	___flmul@a+3,w
  4642  0081  00C3               	movwf	??___flmul
  4643  0082  0743               	addwf	??___flmul,w
  4644  0083  00C4               	movwf	??___flmul+1
  4645  0084  0844               	movf	??___flmul+1,w
  4646  0085  00C9               	movwf	___flmul@aexp
  4647  0086                     l4240:	
  4648  0086  1FC1               	btfss	___flmul@a+2,7
  4649  0087  2889               	goto	u4431
  4650  0088  288A               	goto	u4430
  4651  0089                     u4431:	
  4652  0089  288B               	goto	l4244
  4653  008A                     u4430:	
  4654  008A                     l4242:	
  4655  008A  1449               	bsf	___flmul@aexp,0
  4656  008B                     l4244:	
  4657  008B  0849               	movf	___flmul@aexp,w
  4658  008C  1903               	btfsc	3,2
  4659  008D  288F               	goto	u4441
  4660  008E  2890               	goto	u4440
  4661  008F                     u4441:	
  4662  008F  289F               	goto	l4252
  4663  0090                     u4440:	
  4664  0090                     l4246:	
  4665  0090  0A49               	incf	___flmul@aexp,w
  4666  0091  1D03               	btfss	3,2
  4667  0092  2894               	goto	u4451
  4668  0093  2895               	goto	u4450
  4669  0094                     u4451:	
  4670  0094  289D               	goto	l4250
  4671  0095                     u4450:	
  4672  0095                     l4248:	
  4673  0095  3000               	movlw	0
  4674  0096  00C2               	movwf	___flmul@a+3
  4675  0097  3000               	movlw	0
  4676  0098  00C1               	movwf	___flmul@a+2
  4677  0099  3000               	movlw	0
  4678  009A  00C0               	movwf	___flmul@a+1
  4679  009B  3000               	movlw	0
  4680  009C  00BF               	movwf	___flmul@a
  4681  009D                     l4250:	
  4682  009D  17C1               	bsf	___flmul@a+2,7
  4683  009E  28A7               	goto	l4254
  4684  009F                     l4252:	
  4685  009F  3000               	movlw	0
  4686  00A0  00C2               	movwf	___flmul@a+3
  4687  00A1  3000               	movlw	0
  4688  00A2  00C1               	movwf	___flmul@a+2
  4689  00A3  3000               	movlw	0
  4690  00A4  00C0               	movwf	___flmul@a+1
  4691  00A5  3000               	movlw	0
  4692  00A6  00BF               	movwf	___flmul@a
  4693  00A7                     l4254:	
  4694  00A7  0849               	movf	___flmul@aexp,w
  4695  00A8  1903               	btfsc	3,2
  4696  00A9  28AB               	goto	u4461
  4697  00AA  28AC               	goto	u4460
  4698  00AB                     u4461:	
  4699  00AB  28B1               	goto	l4258
  4700  00AC                     u4460:	
  4701  00AC                     l4256:	
  4702  00AC  084E               	movf	___flmul@bexp,w
  4703  00AD  1D03               	btfss	3,2
  4704  00AE  28B0               	goto	u4471
  4705  00AF  28B1               	goto	u4470
  4706  00B0                     u4471:	
  4707  00B0  28BA               	goto	l4262
  4708  00B1                     u4470:	
  4709  00B1                     l4258:	
  4710  00B1  3000               	movlw	0
  4711  00B2  00BE               	movwf	?___flmul+3
  4712  00B3  3000               	movlw	0
  4713  00B4  00BD               	movwf	?___flmul+2
  4714  00B5  3000               	movlw	0
  4715  00B6  00BC               	movwf	?___flmul+1
  4716  00B7  3000               	movlw	0
  4717  00B8  00BB               	movwf	?___flmul
  4718  00B9  2BAD               	goto	l899
  4719  00BA                     l4262:	
  4720  00BA  083B               	movf	___flmul@b,w
  4721  00BB  00C3               	movwf	??___flmul
  4722  00BC  0843               	movf	??___flmul,w
  4723  00BD  00A8               	movwf	__Umul8_16@multiplicand
  4724  00BE  0841               	movf	___flmul@a+2,w
  4725  00BF  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  4726  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  4727  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  4728  00C6  0829               	movf	?__Umul8_16+1,w
  4729  00C7  00D4               	movwf	___flmul@temp+1
  4730  00C8  0828               	movf	?__Umul8_16,w
  4731  00C9  00D3               	movwf	___flmul@temp
  4732  00CA                     l4264:	
  4733  00CA  0853               	movf	___flmul@temp,w
  4734  00CB  00C3               	movwf	??___flmul
  4735  00CC  01C4               	clrf	??___flmul+1
  4736  00CD  01C5               	clrf	??___flmul+2
  4737  00CE  01C6               	clrf	??___flmul+3
  4738  00CF  0846               	movf	??___flmul+3,w
  4739  00D0  00CD               	movwf	___flmul@grs+3
  4740  00D1  0845               	movf	??___flmul+2,w
  4741  00D2  00CC               	movwf	___flmul@grs+2
  4742  00D3  0844               	movf	??___flmul+1,w
  4743  00D4  00CB               	movwf	___flmul@grs+1
  4744  00D5  0843               	movf	??___flmul,w
  4745  00D6  00CA               	movwf	___flmul@grs
  4746  00D7                     l4266:	
  4747  00D7  0854               	movf	___flmul@temp+1,w
  4748  00D8  00C3               	movwf	??___flmul
  4749  00D9  01C4               	clrf	??___flmul+1
  4750  00DA  01C5               	clrf	??___flmul+2
  4751  00DB  01C6               	clrf	??___flmul+3
  4752  00DC  0846               	movf	??___flmul+3,w
  4753  00DD  00D2               	movwf	___flmul@prod+3
  4754  00DE  0845               	movf	??___flmul+2,w
  4755  00DF  00D1               	movwf	___flmul@prod+2
  4756  00E0  0844               	movf	??___flmul+1,w
  4757  00E1  00D0               	movwf	___flmul@prod+1
  4758  00E2  0843               	movf	??___flmul,w
  4759  00E3  00CF               	movwf	___flmul@prod
  4760  00E4  083C               	movf	___flmul@b+1,w
  4761  00E5  00C3               	movwf	??___flmul
  4762  00E6  0843               	movf	??___flmul,w
  4763  00E7  00A8               	movwf	__Umul8_16@multiplicand
  4764  00E8  0840               	movf	___flmul@a+1,w
  4765  00E9  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  4766  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  4767  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  4768  00F0  0829               	movf	?__Umul8_16+1,w
  4769  00F1  00D4               	movwf	___flmul@temp+1
  4770  00F2  0828               	movf	?__Umul8_16,w
  4771  00F3  00D3               	movwf	___flmul@temp
  4772  00F4                     l4268:	
  4773  00F4  0853               	movf	___flmul@temp,w
  4774  00F5  00C3               	movwf	??___flmul
  4775  00F6  01C4               	clrf	??___flmul+1
  4776  00F7  01C5               	clrf	??___flmul+2
  4777  00F8  01C6               	clrf	??___flmul+3
  4778  00F9  0843               	movf	??___flmul,w
  4779  00FA  07CA               	addwf	___flmul@grs,f
  4780  00FB  0844               	movf	??___flmul+1,w
  4781  00FC  1103               	clrz
  4782  00FD  1803               	skipnc
  4783  00FE  3E01               	addlw	1
  4784  00FF  1903               	skipnz
  4785  0100  2902               	goto	u4481
  4786  0101  07CB               	addwf	___flmul@grs+1,f
  4787  0102                     u4481:	
  4788  0102  0845               	movf	??___flmul+2,w
  4789  0103  1103               	clrz
  4790  0104  1803               	skipnc
  4791  0105  3E01               	addlw	1
  4792  0106  1903               	skipnz
  4793  0107  2909               	goto	u4482
  4794  0108  07CC               	addwf	___flmul@grs+2,f
  4795  0109                     u4482:	
  4796  0109  0846               	movf	??___flmul+3,w
  4797  010A  1103               	clrz
  4798  010B  1803               	skipnc
  4799  010C  3E01               	addlw	1
  4800  010D  1903               	skipnz
  4801  010E  2910               	goto	u4483
  4802  010F  07CD               	addwf	___flmul@grs+3,f
  4803  0110                     u4483:	
  4804  0110                     l4270:	
  4805  0110  0854               	movf	___flmul@temp+1,w
  4806  0111  00C3               	movwf	??___flmul
  4807  0112  01C4               	clrf	??___flmul+1
  4808  0113  01C5               	clrf	??___flmul+2
  4809  0114  01C6               	clrf	??___flmul+3
  4810  0115  0843               	movf	??___flmul,w
  4811  0116  07CF               	addwf	___flmul@prod,f
  4812  0117  0844               	movf	??___flmul+1,w
  4813  0118  1103               	clrz
  4814  0119  1803               	skipnc
  4815  011A  3E01               	addlw	1
  4816  011B  1903               	skipnz
  4817  011C  291E               	goto	u4491
  4818  011D  07D0               	addwf	___flmul@prod+1,f
  4819  011E                     u4491:	
  4820  011E  0845               	movf	??___flmul+2,w
  4821  011F  1103               	clrz
  4822  0120  1803               	skipnc
  4823  0121  3E01               	addlw	1
  4824  0122  1903               	skipnz
  4825  0123  2925               	goto	u4492
  4826  0124  07D1               	addwf	___flmul@prod+2,f
  4827  0125                     u4492:	
  4828  0125  0846               	movf	??___flmul+3,w
  4829  0126  1103               	clrz
  4830  0127  1803               	skipnc
  4831  0128  3E01               	addlw	1
  4832  0129  1903               	skipnz
  4833  012A  292C               	goto	u4493
  4834  012B  07D2               	addwf	___flmul@prod+3,f
  4835  012C                     u4493:	
  4836  012C  083D               	movf	___flmul@b+2,w
  4837  012D  00C3               	movwf	??___flmul
  4838  012E  0843               	movf	??___flmul,w
  4839  012F  00A8               	movwf	__Umul8_16@multiplicand
  4840  0130  083F               	movf	___flmul@a,w
  4841  0131  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  4842  0136  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0137  1303               	bcf	3,6	;RP1=0, select bank0
  4844  0138  0829               	movf	?__Umul8_16+1,w
  4845  0139  00D4               	movwf	___flmul@temp+1
  4846  013A  0828               	movf	?__Umul8_16,w
  4847  013B  00D3               	movwf	___flmul@temp
  4848  013C                     l4272:	
  4849  013C  0853               	movf	___flmul@temp,w
  4850  013D  00C3               	movwf	??___flmul
  4851  013E  01C4               	clrf	??___flmul+1
  4852  013F  01C5               	clrf	??___flmul+2
  4853  0140  01C6               	clrf	??___flmul+3
  4854  0141  0843               	movf	??___flmul,w
  4855  0142  07CA               	addwf	___flmul@grs,f
  4856  0143  0844               	movf	??___flmul+1,w
  4857  0144  1103               	clrz
  4858  0145  1803               	skipnc
  4859  0146  3E01               	addlw	1
  4860  0147  1903               	skipnz
  4861  0148  294A               	goto	u4501
  4862  0149  07CB               	addwf	___flmul@grs+1,f
  4863  014A                     u4501:	
  4864  014A  0845               	movf	??___flmul+2,w
  4865  014B  1103               	clrz
  4866  014C  1803               	skipnc
  4867  014D  3E01               	addlw	1
  4868  014E  1903               	skipnz
  4869  014F  2951               	goto	u4502
  4870  0150  07CC               	addwf	___flmul@grs+2,f
  4871  0151                     u4502:	
  4872  0151  0846               	movf	??___flmul+3,w
  4873  0152  1103               	clrz
  4874  0153  1803               	skipnc
  4875  0154  3E01               	addlw	1
  4876  0155  1903               	skipnz
  4877  0156  2958               	goto	u4503
  4878  0157  07CD               	addwf	___flmul@grs+3,f
  4879  0158                     u4503:	
  4880  0158                     l4274:	
  4881  0158  0854               	movf	___flmul@temp+1,w
  4882  0159  00C3               	movwf	??___flmul
  4883  015A  01C4               	clrf	??___flmul+1
  4884  015B  01C5               	clrf	??___flmul+2
  4885  015C  01C6               	clrf	??___flmul+3
  4886  015D  0843               	movf	??___flmul,w
  4887  015E  07CF               	addwf	___flmul@prod,f
  4888  015F  0844               	movf	??___flmul+1,w
  4889  0160  1103               	clrz
  4890  0161  1803               	skipnc
  4891  0162  3E01               	addlw	1
  4892  0163  1903               	skipnz
  4893  0164  2966               	goto	u4511
  4894  0165  07D0               	addwf	___flmul@prod+1,f
  4895  0166                     u4511:	
  4896  0166  0845               	movf	??___flmul+2,w
  4897  0167  1103               	clrz
  4898  0168  1803               	skipnc
  4899  0169  3E01               	addlw	1
  4900  016A  1903               	skipnz
  4901  016B  296D               	goto	u4512
  4902  016C  07D1               	addwf	___flmul@prod+2,f
  4903  016D                     u4512:	
  4904  016D  0846               	movf	??___flmul+3,w
  4905  016E  1103               	clrz
  4906  016F  1803               	skipnc
  4907  0170  3E01               	addlw	1
  4908  0171  1903               	skipnz
  4909  0172  2974               	goto	u4513
  4910  0173  07D2               	addwf	___flmul@prod+3,f
  4911  0174                     u4513:	
  4912  0174                     l4276:	
  4913  0174  3008               	movlw	8
  4914  0175  00C3               	movwf	??___flmul
  4915  0176                     u4525:	
  4916  0176  1003               	clrc
  4917  0177  0DCA               	rlf	___flmul@grs,f
  4918  0178  0DCB               	rlf	___flmul@grs+1,f
  4919  0179  0DCC               	rlf	___flmul@grs+2,f
  4920  017A  0DCD               	rlf	___flmul@grs+3,f
  4921  017B  0BC3               	decfsz	??___flmul,f
  4922  017C  2976               	goto	u4525
  4923  017D                     l4278:	
  4924  017D  083C               	movf	___flmul@b+1,w
  4925  017E  00C3               	movwf	??___flmul
  4926  017F  0843               	movf	??___flmul,w
  4927  0180  00A8               	movwf	__Umul8_16@multiplicand
  4928  0181  083F               	movf	___flmul@a,w
  4929  0182  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  4930  0187  1283               	bcf	3,5	;RP0=0, select bank0
  4931  0188  1303               	bcf	3,6	;RP1=0, select bank0
  4932  0189  0829               	movf	?__Umul8_16+1,w
  4933  018A  00D4               	movwf	___flmul@temp+1
  4934  018B  0828               	movf	?__Umul8_16,w
  4935  018C  00D3               	movwf	___flmul@temp
  4936  018D                     l4280:	
  4937  018D  0853               	movf	___flmul@temp,w
  4938  018E  00C3               	movwf	??___flmul
  4939  018F  0854               	movf	___flmul@temp+1,w
  4940  0190  00C4               	movwf	??___flmul+1
  4941  0191  01C5               	clrf	??___flmul+2
  4942  0192  01C6               	clrf	??___flmul+3
  4943  0193  0843               	movf	??___flmul,w
  4944  0194  07CA               	addwf	___flmul@grs,f
  4945  0195  0844               	movf	??___flmul+1,w
  4946  0196  1103               	clrz
  4947  0197  1803               	skipnc
  4948  0198  3E01               	addlw	1
  4949  0199  1903               	skipnz
  4950  019A  299C               	goto	u4531
  4951  019B  07CB               	addwf	___flmul@grs+1,f
  4952  019C                     u4531:	
  4953  019C  0845               	movf	??___flmul+2,w
  4954  019D  1103               	clrz
  4955  019E  1803               	skipnc
  4956  019F  3E01               	addlw	1
  4957  01A0  1903               	skipnz
  4958  01A1  29A3               	goto	u4532
  4959  01A2  07CC               	addwf	___flmul@grs+2,f
  4960  01A3                     u4532:	
  4961  01A3  0846               	movf	??___flmul+3,w
  4962  01A4  1103               	clrz
  4963  01A5  1803               	skipnc
  4964  01A6  3E01               	addlw	1
  4965  01A7  1903               	skipnz
  4966  01A8  29AA               	goto	u4533
  4967  01A9  07CD               	addwf	___flmul@grs+3,f
  4968  01AA                     u4533:	
  4969  01AA                     l4282:	
  4970  01AA  083B               	movf	___flmul@b,w
  4971  01AB  00C3               	movwf	??___flmul
  4972  01AC  0843               	movf	??___flmul,w
  4973  01AD  00A8               	movwf	__Umul8_16@multiplicand
  4974  01AE  0840               	movf	___flmul@a+1,w
  4975  01AF  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  4976  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  4977  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  4978  01B6  0829               	movf	?__Umul8_16+1,w
  4979  01B7  00D4               	movwf	___flmul@temp+1
  4980  01B8  0828               	movf	?__Umul8_16,w
  4981  01B9  00D3               	movwf	___flmul@temp
  4982  01BA                     l4284:	
  4983  01BA  0853               	movf	___flmul@temp,w
  4984  01BB  00C3               	movwf	??___flmul
  4985  01BC  0854               	movf	___flmul@temp+1,w
  4986  01BD  00C4               	movwf	??___flmul+1
  4987  01BE  01C5               	clrf	??___flmul+2
  4988  01BF  01C6               	clrf	??___flmul+3
  4989  01C0  0843               	movf	??___flmul,w
  4990  01C1  07CA               	addwf	___flmul@grs,f
  4991  01C2  0844               	movf	??___flmul+1,w
  4992  01C3  1103               	clrz
  4993  01C4  1803               	skipnc
  4994  01C5  3E01               	addlw	1
  4995  01C6  1903               	skipnz
  4996  01C7  29C9               	goto	u4541
  4997  01C8  07CB               	addwf	___flmul@grs+1,f
  4998  01C9                     u4541:	
  4999  01C9  0845               	movf	??___flmul+2,w
  5000  01CA  1103               	clrz
  5001  01CB  1803               	skipnc
  5002  01CC  3E01               	addlw	1
  5003  01CD  1903               	skipnz
  5004  01CE  29D0               	goto	u4542
  5005  01CF  07CC               	addwf	___flmul@grs+2,f
  5006  01D0                     u4542:	
  5007  01D0  0846               	movf	??___flmul+3,w
  5008  01D1  1103               	clrz
  5009  01D2  1803               	skipnc
  5010  01D3  3E01               	addlw	1
  5011  01D4  1903               	skipnz
  5012  01D5  29D7               	goto	u4543
  5013  01D6  07CD               	addwf	___flmul@grs+3,f
  5014  01D7                     u4543:	
  5015  01D7                     l4286:	
  5016  01D7  3008               	movlw	8
  5017  01D8  00C3               	movwf	??___flmul
  5018  01D9                     u4555:	
  5019  01D9  1003               	clrc
  5020  01DA  0DCA               	rlf	___flmul@grs,f
  5021  01DB  0DCB               	rlf	___flmul@grs+1,f
  5022  01DC  0DCC               	rlf	___flmul@grs+2,f
  5023  01DD  0DCD               	rlf	___flmul@grs+3,f
  5024  01DE  0BC3               	decfsz	??___flmul,f
  5025  01DF  29D9               	goto	u4555
  5026  01E0  083B               	movf	___flmul@b,w
  5027  01E1  00C3               	movwf	??___flmul
  5028  01E2  0843               	movf	??___flmul,w
  5029  01E3  00A8               	movwf	__Umul8_16@multiplicand
  5030  01E4  083F               	movf	___flmul@a,w
  5031  01E5  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  5032  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  5033  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  5034  01EC  0829               	movf	?__Umul8_16+1,w
  5035  01ED  00D4               	movwf	___flmul@temp+1
  5036  01EE  0828               	movf	?__Umul8_16,w
  5037  01EF  00D3               	movwf	___flmul@temp
  5038  01F0                     l4288:	
  5039  01F0  0853               	movf	___flmul@temp,w
  5040  01F1  00C3               	movwf	??___flmul
  5041  01F2  0854               	movf	___flmul@temp+1,w
  5042  01F3  00C4               	movwf	??___flmul+1
  5043  01F4  01C5               	clrf	??___flmul+2
  5044  01F5  01C6               	clrf	??___flmul+3
  5045  01F6  0843               	movf	??___flmul,w
  5046  01F7  07CA               	addwf	___flmul@grs,f
  5047  01F8  0844               	movf	??___flmul+1,w
  5048  01F9  1103               	clrz
  5049  01FA  1803               	skipnc
  5050  01FB  3E01               	addlw	1
  5051  01FC  1903               	skipnz
  5052  01FD  29FF               	goto	u4561
  5053  01FE  07CB               	addwf	___flmul@grs+1,f
  5054  01FF                     u4561:	
  5055  01FF  0845               	movf	??___flmul+2,w
  5056  0200  1103               	clrz
  5057  0201  1803               	skipnc
  5058  0202  3E01               	addlw	1
  5059  0203  1903               	skipnz
  5060  0204  2A06               	goto	u4562
  5061  0205  07CC               	addwf	___flmul@grs+2,f
  5062  0206                     u4562:	
  5063  0206  0846               	movf	??___flmul+3,w
  5064  0207  1103               	clrz
  5065  0208  1803               	skipnc
  5066  0209  3E01               	addlw	1
  5067  020A  1903               	skipnz
  5068  020B  2A0D               	goto	u4563
  5069  020C  07CD               	addwf	___flmul@grs+3,f
  5070  020D                     u4563:	
  5071  020D                     l4290:	
  5072  020D  083C               	movf	___flmul@b+1,w
  5073  020E  00C3               	movwf	??___flmul
  5074  020F  0843               	movf	??___flmul,w
  5075  0210  00A8               	movwf	__Umul8_16@multiplicand
  5076  0211  0841               	movf	___flmul@a+2,w
  5077  0212  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  5078  0217  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0218  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0219  0829               	movf	?__Umul8_16+1,w
  5081  021A  00D4               	movwf	___flmul@temp+1
  5082  021B  0828               	movf	?__Umul8_16,w
  5083  021C  00D3               	movwf	___flmul@temp
  5084  021D  0853               	movf	___flmul@temp,w
  5085  021E  00C3               	movwf	??___flmul
  5086  021F  0854               	movf	___flmul@temp+1,w
  5087  0220  00C4               	movwf	??___flmul+1
  5088  0221  01C5               	clrf	??___flmul+2
  5089  0222  01C6               	clrf	??___flmul+3
  5090  0223  0843               	movf	??___flmul,w
  5091  0224  07CF               	addwf	___flmul@prod,f
  5092  0225  0844               	movf	??___flmul+1,w
  5093  0226  1103               	clrz
  5094  0227  1803               	skipnc
  5095  0228  3E01               	addlw	1
  5096  0229  1903               	skipnz
  5097  022A  2A2C               	goto	u4571
  5098  022B  07D0               	addwf	___flmul@prod+1,f
  5099  022C                     u4571:	
  5100  022C  0845               	movf	??___flmul+2,w
  5101  022D  1103               	clrz
  5102  022E  1803               	skipnc
  5103  022F  3E01               	addlw	1
  5104  0230  1903               	skipnz
  5105  0231  2A33               	goto	u4572
  5106  0232  07D1               	addwf	___flmul@prod+2,f
  5107  0233                     u4572:	
  5108  0233  0846               	movf	??___flmul+3,w
  5109  0234  1103               	clrz
  5110  0235  1803               	skipnc
  5111  0236  3E01               	addlw	1
  5112  0237  1903               	skipnz
  5113  0238  2A3A               	goto	u4573
  5114  0239  07D2               	addwf	___flmul@prod+3,f
  5115  023A                     u4573:	
  5116  023A                     l4292:	
  5117  023A  083D               	movf	___flmul@b+2,w
  5118  023B  00C3               	movwf	??___flmul
  5119  023C  0843               	movf	??___flmul,w
  5120  023D  00A8               	movwf	__Umul8_16@multiplicand
  5121  023E  0840               	movf	___flmul@a+1,w
  5122  023F  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  5123  0244  1283               	bcf	3,5	;RP0=0, select bank0
  5124  0245  1303               	bcf	3,6	;RP1=0, select bank0
  5125  0246  0829               	movf	?__Umul8_16+1,w
  5126  0247  00D4               	movwf	___flmul@temp+1
  5127  0248  0828               	movf	?__Umul8_16,w
  5128  0249  00D3               	movwf	___flmul@temp
  5129  024A                     l4294:	
  5130  024A  0853               	movf	___flmul@temp,w
  5131  024B  00C3               	movwf	??___flmul
  5132  024C  0854               	movf	___flmul@temp+1,w
  5133  024D  00C4               	movwf	??___flmul+1
  5134  024E  01C5               	clrf	??___flmul+2
  5135  024F  01C6               	clrf	??___flmul+3
  5136  0250  0843               	movf	??___flmul,w
  5137  0251  07CF               	addwf	___flmul@prod,f
  5138  0252  0844               	movf	??___flmul+1,w
  5139  0253  1103               	clrz
  5140  0254  1803               	skipnc
  5141  0255  3E01               	addlw	1
  5142  0256  1903               	skipnz
  5143  0257  2A59               	goto	u4581
  5144  0258  07D0               	addwf	___flmul@prod+1,f
  5145  0259                     u4581:	
  5146  0259  0845               	movf	??___flmul+2,w
  5147  025A  1103               	clrz
  5148  025B  1803               	skipnc
  5149  025C  3E01               	addlw	1
  5150  025D  1903               	skipnz
  5151  025E  2A60               	goto	u4582
  5152  025F  07D1               	addwf	___flmul@prod+2,f
  5153  0260                     u4582:	
  5154  0260  0846               	movf	??___flmul+3,w
  5155  0261  1103               	clrz
  5156  0262  1803               	skipnc
  5157  0263  3E01               	addlw	1
  5158  0264  1903               	skipnz
  5159  0265  2A67               	goto	u4583
  5160  0266  07D2               	addwf	___flmul@prod+3,f
  5161  0267                     u4583:	
  5162  0267  083D               	movf	___flmul@b+2,w
  5163  0268  00C3               	movwf	??___flmul
  5164  0269  0843               	movf	??___flmul,w
  5165  026A  00A8               	movwf	__Umul8_16@multiplicand
  5166  026B  0841               	movf	___flmul@a+2,w
  5167  026C  160A  118A  2720  120A  118A  	fcall	__Umul8_16
  5168  0271  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0272  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0273  0829               	movf	?__Umul8_16+1,w
  5171  0274  00D4               	movwf	___flmul@temp+1
  5172  0275  0828               	movf	?__Umul8_16,w
  5173  0276  00D3               	movwf	___flmul@temp
  5174  0277                     l4296:	
  5175  0277  0853               	movf	___flmul@temp,w
  5176  0278  00C3               	movwf	??___flmul
  5177  0279  0854               	movf	___flmul@temp+1,w
  5178  027A  00C4               	movwf	??___flmul+1
  5179  027B  01C5               	clrf	??___flmul+2
  5180  027C  01C6               	clrf	??___flmul+3
  5181  027D  3008               	movlw	8
  5182  027E                     u4595:	
  5183  027E  1003               	clrc
  5184  027F  0DC3               	rlf	??___flmul,f
  5185  0280  0DC4               	rlf	??___flmul+1,f
  5186  0281  0DC5               	rlf	??___flmul+2,f
  5187  0282  0DC6               	rlf	??___flmul+3,f
  5188  0283                     u4590:	
  5189  0283  3EFF               	addlw	-1
  5190  0284  1D03               	skipz
  5191  0285  2A7E               	goto	u4595
  5192  0286  0843               	movf	??___flmul,w
  5193  0287  07CF               	addwf	___flmul@prod,f
  5194  0288  0844               	movf	??___flmul+1,w
  5195  0289  1103               	clrz
  5196  028A  1803               	skipnc
  5197  028B  3E01               	addlw	1
  5198  028C  1903               	skipnz
  5199  028D  2A8F               	goto	u4601
  5200  028E  07D0               	addwf	___flmul@prod+1,f
  5201  028F                     u4601:	
  5202  028F  0845               	movf	??___flmul+2,w
  5203  0290  1103               	clrz
  5204  0291  1803               	skipnc
  5205  0292  3E01               	addlw	1
  5206  0293  1903               	skipnz
  5207  0294  2A96               	goto	u4602
  5208  0295  07D1               	addwf	___flmul@prod+2,f
  5209  0296                     u4602:	
  5210  0296  0846               	movf	??___flmul+3,w
  5211  0297  1103               	clrz
  5212  0298  1803               	skipnc
  5213  0299  3E01               	addlw	1
  5214  029A  1903               	skipnz
  5215  029B  2A9D               	goto	u4603
  5216  029C  07D2               	addwf	___flmul@prod+3,f
  5217  029D                     u4603:	
  5218  029D                     l4298:	
  5219  029D  084A               	movf	___flmul@grs,w
  5220  029E  00C3               	movwf	??___flmul
  5221  029F  084B               	movf	___flmul@grs+1,w
  5222  02A0  00C4               	movwf	??___flmul+1
  5223  02A1  084C               	movf	___flmul@grs+2,w
  5224  02A2  00C5               	movwf	??___flmul+2
  5225  02A3  084D               	movf	___flmul@grs+3,w
  5226  02A4  00C6               	movwf	??___flmul+3
  5227  02A5  3018               	movlw	24
  5228  02A6                     u4615:	
  5229  02A6  1003               	clrc
  5230  02A7  0CC6               	rrf	??___flmul+3,f
  5231  02A8  0CC5               	rrf	??___flmul+2,f
  5232  02A9  0CC4               	rrf	??___flmul+1,f
  5233  02AA  0CC3               	rrf	??___flmul,f
  5234  02AB                     u4610:	
  5235  02AB  3EFF               	addlw	-1
  5236  02AC  1D03               	skipz
  5237  02AD  2AA6               	goto	u4615
  5238  02AE  0843               	movf	??___flmul,w
  5239  02AF  07CF               	addwf	___flmul@prod,f
  5240  02B0  0844               	movf	??___flmul+1,w
  5241  02B1  1103               	clrz
  5242  02B2  1803               	skipnc
  5243  02B3  3E01               	addlw	1
  5244  02B4  1903               	skipnz
  5245  02B5  2AB7               	goto	u4621
  5246  02B6  07D0               	addwf	___flmul@prod+1,f
  5247  02B7                     u4621:	
  5248  02B7  0845               	movf	??___flmul+2,w
  5249  02B8  1103               	clrz
  5250  02B9  1803               	skipnc
  5251  02BA  3E01               	addlw	1
  5252  02BB  1903               	skipnz
  5253  02BC  2ABE               	goto	u4622
  5254  02BD  07D1               	addwf	___flmul@prod+2,f
  5255  02BE                     u4622:	
  5256  02BE  0846               	movf	??___flmul+3,w
  5257  02BF  1103               	clrz
  5258  02C0  1803               	skipnc
  5259  02C1  3E01               	addlw	1
  5260  02C2  1903               	skipnz
  5261  02C3  2AC5               	goto	u4623
  5262  02C4  07D2               	addwf	___flmul@prod+3,f
  5263  02C5                     u4623:	
  5264  02C5                     l4300:	
  5265  02C5  3008               	movlw	8
  5266  02C6  00C3               	movwf	??___flmul
  5267  02C7                     u4635:	
  5268  02C7  1003               	clrc
  5269  02C8  0DCA               	rlf	___flmul@grs,f
  5270  02C9  0DCB               	rlf	___flmul@grs+1,f
  5271  02CA  0DCC               	rlf	___flmul@grs+2,f
  5272  02CB  0DCD               	rlf	___flmul@grs+3,f
  5273  02CC  0BC3               	decfsz	??___flmul,f
  5274  02CD  2AC7               	goto	u4635
  5275  02CE                     l4302:	
  5276  02CE  084E               	movf	___flmul@bexp,w
  5277  02CF  0749               	addwf	___flmul@aexp,w
  5278  02D0  00C3               	movwf	??___flmul
  5279  02D1  01C4               	clrf	??___flmul+1
  5280  02D2  0DC4               	rlf	??___flmul+1,f
  5281  02D3  0843               	movf	??___flmul,w
  5282  02D4  3E82               	addlw	130
  5283  02D5  00D3               	movwf	___flmul@temp
  5284  02D6  0844               	movf	??___flmul+1,w
  5285  02D7  1803               	skipnc
  5286  02D8  3E01               	addlw	1
  5287  02D9  3EFF               	addlw	255
  5288  02DA  00D4               	movwf	___flmul@temp+1
  5289  02DB  2AF9               	goto	l4314
  5290  02DC                     l4304:	
  5291  02DC  3001               	movlw	1
  5292  02DD  00C3               	movwf	??___flmul
  5293  02DE                     u4645:	
  5294  02DE  1003               	clrc
  5295  02DF  0DCF               	rlf	___flmul@prod,f
  5296  02E0  0DD0               	rlf	___flmul@prod+1,f
  5297  02E1  0DD1               	rlf	___flmul@prod+2,f
  5298  02E2  0DD2               	rlf	___flmul@prod+3,f
  5299  02E3  0BC3               	decfsz	??___flmul,f
  5300  02E4  2ADE               	goto	u4645
  5301  02E5                     l4306:	
  5302  02E5  1FCD               	btfss	___flmul@grs+3,7
  5303  02E6  2AE8               	goto	u4651
  5304  02E7  2AE9               	goto	u4650
  5305  02E8                     u4651:	
  5306  02E8  2AEA               	goto	l4310
  5307  02E9                     u4650:	
  5308  02E9                     l4308:	
  5309  02E9  144F               	bsf	___flmul@prod,0
  5310  02EA                     l4310:	
  5311  02EA  3001               	movlw	1
  5312  02EB  00C3               	movwf	??___flmul
  5313  02EC                     u4665:	
  5314  02EC  1003               	clrc
  5315  02ED  0DCA               	rlf	___flmul@grs,f
  5316  02EE  0DCB               	rlf	___flmul@grs+1,f
  5317  02EF  0DCC               	rlf	___flmul@grs+2,f
  5318  02F0  0DCD               	rlf	___flmul@grs+3,f
  5319  02F1  0BC3               	decfsz	??___flmul,f
  5320  02F2  2AEC               	goto	u4665
  5321  02F3                     l4312:	
  5322  02F3  30FF               	movlw	255
  5323  02F4  07D3               	addwf	___flmul@temp,f
  5324  02F5  1803               	skipnc
  5325  02F6  0AD4               	incf	___flmul@temp+1,f
  5326  02F7  30FF               	movlw	255
  5327  02F8  07D4               	addwf	___flmul@temp+1,f
  5328  02F9                     l4314:	
  5329  02F9  1FD1               	btfss	___flmul@prod+2,7
  5330  02FA  2AFC               	goto	u4671
  5331  02FB  2AFD               	goto	u4670
  5332  02FC                     u4671:	
  5333  02FC  2ADC               	goto	l4304
  5334  02FD                     u4670:	
  5335  02FD                     l4316:	
  5336  02FD  01C9               	clrf	___flmul@aexp
  5337  02FE                     l4318:	
  5338  02FE  1FCD               	btfss	___flmul@grs+3,7
  5339  02FF  2B01               	goto	u4681
  5340  0300  2B02               	goto	u4680
  5341  0301                     u4681:	
  5342  0301  2B1E               	goto	l4326
  5343  0302                     u4680:	
  5344  0302                     l4320:	
  5345  0302  30FF               	movlw	255
  5346  0303  054A               	andwf	___flmul@grs,w
  5347  0304  00C3               	movwf	??___flmul
  5348  0305  30FF               	movlw	255
  5349  0306  054B               	andwf	___flmul@grs+1,w
  5350  0307  00C4               	movwf	??___flmul+1
  5351  0308  30FF               	movlw	255
  5352  0309  054C               	andwf	___flmul@grs+2,w
  5353  030A  00C5               	movwf	??___flmul+2
  5354  030B  307F               	movlw	127
  5355  030C  054D               	andwf	___flmul@grs+3,w
  5356  030D  00C6               	movwf	??___flmul+3
  5357  030E  0846               	movf	??___flmul+3,w
  5358  030F  0445               	iorwf	??___flmul+2,w
  5359  0310  0444               	iorwf	??___flmul+1,w
  5360  0311  0443               	iorwf	??___flmul,w
  5361  0312  1903               	skipnz
  5362  0313  2B15               	goto	u4691
  5363  0314  2B16               	goto	u4690
  5364  0315                     u4691:	
  5365  0315  2B19               	goto	l905
  5366  0316                     u4690:	
  5367  0316                     l4322:	
  5368  0316  01C9               	clrf	___flmul@aexp
  5369  0317  0AC9               	incf	___flmul@aexp,f
  5370  0318  2B1E               	goto	l4326
  5371  0319                     l905:	
  5372  0319  1C4F               	btfss	___flmul@prod,0
  5373  031A  2B1C               	goto	u4701
  5374  031B  2B1D               	goto	u4700
  5375  031C                     u4701:	
  5376  031C  2B1E               	goto	l4326
  5377  031D                     u4700:	
  5378  031D  2B16               	goto	l4322
  5379  031E                     l4326:	
  5380  031E  0849               	movf	___flmul@aexp,w
  5381  031F  1903               	btfsc	3,2
  5382  0320  2B22               	goto	u4711
  5383  0321  2B23               	goto	u4710
  5384  0322                     u4711:	
  5385  0322  2B54               	goto	l4336
  5386  0323                     u4710:	
  5387  0323                     l4328:	
  5388  0323  3001               	movlw	1
  5389  0324  07CF               	addwf	___flmul@prod,f
  5390  0325  3000               	movlw	0
  5391  0326  1803               	skipnc
  5392  0327  3001               	movlw	1
  5393  0328  07D0               	addwf	___flmul@prod+1,f
  5394  0329  3000               	movlw	0
  5395  032A  1803               	skipnc
  5396  032B  3001               	movlw	1
  5397  032C  07D1               	addwf	___flmul@prod+2,f
  5398  032D  3000               	movlw	0
  5399  032E  1803               	skipnc
  5400  032F  3001               	movlw	1
  5401  0330  07D2               	addwf	___flmul@prod+3,f
  5402  0331                     l4330:	
  5403  0331  1C52               	btfss	___flmul@prod+3,0
  5404  0332  2B34               	goto	u4721
  5405  0333  2B35               	goto	u4720
  5406  0334                     u4721:	
  5407  0334  2B54               	goto	l4336
  5408  0335                     u4720:	
  5409  0335                     l4332:	
  5410  0335  084F               	movf	___flmul@prod,w
  5411  0336  00C3               	movwf	??___flmul
  5412  0337  0850               	movf	___flmul@prod+1,w
  5413  0338  00C4               	movwf	??___flmul+1
  5414  0339  0851               	movf	___flmul@prod+2,w
  5415  033A  00C5               	movwf	??___flmul+2
  5416  033B  0852               	movf	___flmul@prod+3,w
  5417  033C  00C6               	movwf	??___flmul+3
  5418  033D  3001               	movlw	1
  5419  033E  00C7               	movwf	??___flmul+4
  5420  033F                     u4735:	
  5421  033F  0D46               	rlf	??___flmul+3,w
  5422  0340  0CC6               	rrf	??___flmul+3,f
  5423  0341  0CC5               	rrf	??___flmul+2,f
  5424  0342  0CC4               	rrf	??___flmul+1,f
  5425  0343  0CC3               	rrf	??___flmul,f
  5426  0344                     u4730:	
  5427  0344  0BC7               	decfsz	??___flmul+4,f
  5428  0345  2B3F               	goto	u4735
  5429  0346  0846               	movf	??___flmul+3,w
  5430  0347  00D2               	movwf	___flmul@prod+3
  5431  0348  0845               	movf	??___flmul+2,w
  5432  0349  00D1               	movwf	___flmul@prod+2
  5433  034A  0844               	movf	??___flmul+1,w
  5434  034B  00D0               	movwf	___flmul@prod+1
  5435  034C  0843               	movf	??___flmul,w
  5436  034D  00CF               	movwf	___flmul@prod
  5437  034E                     l4334:	
  5438  034E  3001               	movlw	1
  5439  034F  07D3               	addwf	___flmul@temp,f
  5440  0350  1803               	skipnc
  5441  0351  0AD4               	incf	___flmul@temp+1,f
  5442  0352  3000               	movlw	0
  5443  0353  07D4               	addwf	___flmul@temp+1,f
  5444  0354                     l4336:	
  5445  0354  0854               	movf	___flmul@temp+1,w
  5446  0355  3A80               	xorlw	128
  5447  0356  00FF               	movwf	btemp+1
  5448  0357  3080               	movlw	128
  5449  0358  027F               	subwf	btemp+1,w
  5450  0359  1D03               	skipz
  5451  035A  2B5D               	goto	u4745
  5452  035B  30FF               	movlw	255
  5453  035C  0253               	subwf	___flmul@temp,w
  5454  035D                     u4745:	
  5455  035D  1C03               	skipc
  5456  035E  2B60               	goto	u4741
  5457  035F  2B61               	goto	u4740
  5458  0360                     u4741:	
  5459  0360  2B6C               	goto	l4340
  5460  0361                     u4740:	
  5461  0361                     l4338:	
  5462  0361  307F               	movlw	127
  5463  0362  1283               	bcf	3,5	;RP0=0, select bank0
  5464  0363  1303               	bcf	3,6	;RP1=0, select bank0
  5465  0364  00D2               	movwf	___flmul@prod+3
  5466  0365  3080               	movlw	128
  5467  0366  00D1               	movwf	___flmul@prod+2
  5468  0367  3000               	movlw	0
  5469  0368  00D0               	movwf	___flmul@prod+1
  5470  0369  3000               	movlw	0
  5471  036A  00CF               	movwf	___flmul@prod
  5472  036B  2BA1               	goto	l911
  5473  036C                     l4340:	
  5474  036C  1283               	bcf	3,5	;RP0=0, select bank0
  5475  036D  1303               	bcf	3,6	;RP1=0, select bank0
  5476  036E  0854               	movf	___flmul@temp+1,w
  5477  036F  3A80               	xorlw	128
  5478  0370  00FF               	movwf	btemp+1
  5479  0371  3080               	movlw	128
  5480  0372  027F               	subwf	btemp+1,w
  5481  0373  1D03               	skipz
  5482  0374  2B77               	goto	u4755
  5483  0375  3001               	movlw	1
  5484  0376  0253               	subwf	___flmul@temp,w
  5485  0377                     u4755:	
  5486  0377  1803               	skipnc
  5487  0378  2B7A               	goto	u4751
  5488  0379  2B7B               	goto	u4750
  5489  037A                     u4751:	
  5490  037A  2B87               	goto	l4346
  5491  037B                     u4750:	
  5492  037B                     l4342:	
  5493  037B  3000               	movlw	0
  5494  037C  1283               	bcf	3,5	;RP0=0, select bank0
  5495  037D  1303               	bcf	3,6	;RP1=0, select bank0
  5496  037E  00D2               	movwf	___flmul@prod+3
  5497  037F  3000               	movlw	0
  5498  0380  00D1               	movwf	___flmul@prod+2
  5499  0381  3000               	movlw	0
  5500  0382  00D0               	movwf	___flmul@prod+1
  5501  0383  3000               	movlw	0
  5502  0384  00CF               	movwf	___flmul@prod
  5503  0385                     l4344:	
  5504  0385  01C8               	clrf	___flmul@sign
  5505  0386  2BA1               	goto	l911
  5506  0387                     l4346:	
  5507  0387  1283               	bcf	3,5	;RP0=0, select bank0
  5508  0388  1303               	bcf	3,6	;RP1=0, select bank0
  5509  0389  0853               	movf	___flmul@temp,w
  5510  038A  00C3               	movwf	??___flmul
  5511  038B  0843               	movf	??___flmul,w
  5512  038C  00CE               	movwf	___flmul@bexp
  5513  038D  30FF               	movlw	255
  5514  038E  05CF               	andwf	___flmul@prod,f
  5515  038F  30FF               	movlw	255
  5516  0390  05D0               	andwf	___flmul@prod+1,f
  5517  0391  307F               	movlw	127
  5518  0392  05D1               	andwf	___flmul@prod+2,f
  5519  0393  3000               	movlw	0
  5520  0394  05D2               	andwf	___flmul@prod+3,f
  5521  0395                     l4348:	
  5522  0395  1C4E               	btfss	___flmul@bexp,0
  5523  0396  2B98               	goto	u4761
  5524  0397  2B99               	goto	u4760
  5525  0398                     u4761:	
  5526  0398  2B9A               	goto	l4352
  5527  0399                     u4760:	
  5528  0399                     l4350:	
  5529  0399  17D1               	bsf	___flmul@prod+2,7
  5530  039A                     l4352:	
  5531  039A  084E               	movf	___flmul@bexp,w
  5532  039B  00C3               	movwf	??___flmul
  5533  039C  1003               	clrc
  5534  039D  0C43               	rrf	??___flmul,w
  5535  039E  00C4               	movwf	??___flmul+1
  5536  039F  0844               	movf	??___flmul+1,w
  5537  03A0  00D2               	movwf	___flmul@prod+3
  5538  03A1                     l911:	
  5539  03A1  0848               	movf	___flmul@sign,w
  5540  03A2  00C3               	movwf	??___flmul
  5541  03A3  0843               	movf	??___flmul,w
  5542  03A4  04D2               	iorwf	___flmul@prod+3,f
  5543  03A5                     l4354:	
  5544  03A5  0852               	movf	___flmul@prod+3,w
  5545  03A6  00BE               	movwf	?___flmul+3
  5546  03A7  0851               	movf	___flmul@prod+2,w
  5547  03A8  00BD               	movwf	?___flmul+2
  5548  03A9  0850               	movf	___flmul@prod+1,w
  5549  03AA  00BC               	movwf	?___flmul+1
  5550  03AB  084F               	movf	___flmul@prod,w
  5551  03AC  00BB               	movwf	?___flmul
  5552  03AD                     l899:	
  5553  03AD  0008               	return
  5554  03AE                     __end_of___flmul:	
  5555                           
  5556                           	psect	text21
  5557  1720                     __ptext21:	
  5558 ;; *************** function __Umul8_16 *****************
  5559 ;; Defined at:
  5560 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  multiplier      1    wreg     unsigned char 
  5563 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  multiplier      1   16[BANK0 ] unsigned char 
  5566 ;;  word_mpld       2   14[BANK0 ] unsigned int 
  5567 ;;  product         2   12[BANK0 ] unsigned int 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  2    8[BANK0 ] unsigned int 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5577 ;;      Params:         0       2       0       0       0
  5578 ;;      Locals:         0       5       0       0       0
  5579 ;;      Temps:          0       2       0       0       0
  5580 ;;      Totals:         0       9       0       0       0
  5581 ;;Total ram usage:        9 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    3
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		___flmul
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function __Umul8_16
  5593  1720                     __Umul8_16:	
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5597                           ;__Umul8_16@multiplier stored from wreg
  5598  1720  1283               	bcf	3,5	;RP0=0, select bank0
  5599  1721  1303               	bcf	3,6	;RP1=0, select bank0
  5600  1722  00B0               	movwf	__Umul8_16@multiplier
  5601  1723                     l3724:	
  5602  1723  01AC               	clrf	__Umul8_16@product
  5603  1724  01AD               	clrf	__Umul8_16@product+1
  5604  1725                     l3726:	
  5605  1725  0828               	movf	__Umul8_16@multiplicand,w
  5606  1726  00AA               	movwf	??__Umul8_16
  5607  1727  01AB               	clrf	??__Umul8_16+1
  5608  1728  082A               	movf	??__Umul8_16,w
  5609  1729  00AE               	movwf	__Umul8_16@word_mpld
  5610  172A  082B               	movf	??__Umul8_16+1,w
  5611  172B  00AF               	movwf	__Umul8_16@word_mpld+1
  5612  172C                     l3728:	
  5613  172C  1C30               	btfss	__Umul8_16@multiplier,0
  5614  172D  2F2F               	goto	u3671
  5615  172E  2F30               	goto	u3670
  5616  172F                     u3671:	
  5617  172F  2F36               	goto	l956
  5618  1730                     u3670:	
  5619  1730                     l3730:	
  5620  1730  082E               	movf	__Umul8_16@word_mpld,w
  5621  1731  07AC               	addwf	__Umul8_16@product,f
  5622  1732  1803               	skipnc
  5623  1733  0AAD               	incf	__Umul8_16@product+1,f
  5624  1734  082F               	movf	__Umul8_16@word_mpld+1,w
  5625  1735  07AD               	addwf	__Umul8_16@product+1,f
  5626  1736                     l956:	
  5627  1736  3001               	movlw	1
  5628  1737                     u3685:	
  5629  1737  1003               	clrc
  5630  1738  0DAE               	rlf	__Umul8_16@word_mpld,f
  5631  1739  0DAF               	rlf	__Umul8_16@word_mpld+1,f
  5632  173A  3EFF               	addlw	-1
  5633  173B  1D03               	skipz
  5634  173C  2F37               	goto	u3685
  5635  173D  1003               	clrc
  5636  173E  0CB0               	rrf	__Umul8_16@multiplier,f
  5637  173F                     l3732:	
  5638  173F  0830               	movf	__Umul8_16@multiplier,w
  5639  1740  1D03               	btfss	3,2
  5640  1741  2F43               	goto	u3691
  5641  1742  2F44               	goto	u3690
  5642  1743                     u3691:	
  5643  1743  2F2C               	goto	l3728
  5644  1744                     u3690:	
  5645  1744                     l3734:	
  5646  1744  082D               	movf	__Umul8_16@product+1,w
  5647  1745  00A9               	movwf	?__Umul8_16+1
  5648  1746  082C               	movf	__Umul8_16@product,w
  5649  1747  00A8               	movwf	?__Umul8_16
  5650  1748                     l958:	
  5651  1748  0008               	return
  5652  1749                     __end_of__Umul8_16:	
  5653                           
  5654                           	psect	text22
  5655  03AE                     __ptext22:	
  5656 ;; *************** function ___fldiv *****************
  5657 ;; Defined at:
  5658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  a               4   27[BANK0 ] unsigned int 
  5661 ;;  b               4   31[BANK0 ] unsigned int 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  grs             4   47[BANK0 ] unsigned long 
  5664 ;;  rem             4   40[BANK0 ] unsigned long 
  5665 ;;  new_exp         2   45[BANK0 ] int 
  5666 ;;  aexp            1   52[BANK0 ] unsigned char 
  5667 ;;  bexp            1   51[BANK0 ] unsigned char 
  5668 ;;  sign            1   44[BANK0 ] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  4   27[BANK0 ] unsigned char 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0, btemp+1
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5678 ;;      Params:         0       8       0       0       0
  5679 ;;      Locals:         0      13       0       0       0
  5680 ;;      Temps:          0       5       0       0       0
  5681 ;;      Totals:         0      26       0       0       0
  5682 ;;Total ram usage:       26 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    3
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_temp_sensor_read
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           
  5693                           ;psect for function ___fldiv
  5694  03AE                     ___fldiv:	
  5695  03AE                     l4076:	
  5696                           ;incstack = 0
  5697                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5698                           
  5699  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  5700  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  5701  03B0  0842               	movf	___fldiv@b+3,w
  5702  03B1  3980               	andlw	128
  5703  03B2  00C3               	movwf	??___fldiv
  5704  03B3  0843               	movf	??___fldiv,w
  5705  03B4  00CC               	movwf	___fldiv@sign
  5706  03B5                     l4078:	
  5707  03B5  0842               	movf	___fldiv@b+3,w
  5708  03B6  00C3               	movwf	??___fldiv
  5709  03B7  0743               	addwf	??___fldiv,w
  5710  03B8  00C4               	movwf	??___fldiv+1
  5711  03B9  0844               	movf	??___fldiv+1,w
  5712  03BA  00D3               	movwf	___fldiv@bexp
  5713  03BB                     l4080:	
  5714  03BB  1FC1               	btfss	___fldiv@b+2,7
  5715  03BC  2BBE               	goto	u4111
  5716  03BD  2BBF               	goto	u4110
  5717  03BE                     u4111:	
  5718  03BE  2BC0               	goto	l4084
  5719  03BF                     u4110:	
  5720  03BF                     l4082:	
  5721  03BF  1453               	bsf	___fldiv@bexp,0
  5722  03C0                     l4084:	
  5723  03C0  0853               	movf	___fldiv@bexp,w
  5724  03C1  1903               	btfsc	3,2
  5725  03C2  2BC4               	goto	u4121
  5726  03C3  2BC5               	goto	u4120
  5727  03C4                     u4121:	
  5728  03C4  2BD5               	goto	l4094
  5729  03C5                     u4120:	
  5730  03C5                     l4086:	
  5731  03C5  0A53               	incf	___fldiv@bexp,w
  5732  03C6  1D03               	btfss	3,2
  5733  03C7  2BC9               	goto	u4131
  5734  03C8  2BCA               	goto	u4130
  5735  03C9                     u4131:	
  5736  03C9  2BD2               	goto	l4090
  5737  03CA                     u4130:	
  5738  03CA                     l4088:	
  5739  03CA  3000               	movlw	0
  5740  03CB  00C2               	movwf	___fldiv@b+3
  5741  03CC  3000               	movlw	0
  5742  03CD  00C1               	movwf	___fldiv@b+2
  5743  03CE  3000               	movlw	0
  5744  03CF  00C0               	movwf	___fldiv@b+1
  5745  03D0  3000               	movlw	0
  5746  03D1  00BF               	movwf	___fldiv@b
  5747  03D2                     l4090:	
  5748  03D2  17C1               	bsf	___fldiv@b+2,7
  5749  03D3                     l4092:	
  5750  03D3  01C2               	clrf	___fldiv@b+3
  5751  03D4  2BDD               	goto	l4096
  5752  03D5                     l4094:	
  5753  03D5  3000               	movlw	0
  5754  03D6  00C2               	movwf	___fldiv@b+3
  5755  03D7  3000               	movlw	0
  5756  03D8  00C1               	movwf	___fldiv@b+2
  5757  03D9  3000               	movlw	0
  5758  03DA  00C0               	movwf	___fldiv@b+1
  5759  03DB  3000               	movlw	0
  5760  03DC  00BF               	movwf	___fldiv@b
  5761  03DD                     l4096:	
  5762  03DD  083E               	movf	___fldiv@a+3,w
  5763  03DE  3980               	andlw	128
  5764  03DF  00C3               	movwf	??___fldiv
  5765  03E0  0843               	movf	??___fldiv,w
  5766  03E1  06CC               	xorwf	___fldiv@sign,f
  5767  03E2                     l4098:	
  5768  03E2  083E               	movf	___fldiv@a+3,w
  5769  03E3  00C3               	movwf	??___fldiv
  5770  03E4  0743               	addwf	??___fldiv,w
  5771  03E5  00C4               	movwf	??___fldiv+1
  5772  03E6  0844               	movf	??___fldiv+1,w
  5773  03E7  00D4               	movwf	___fldiv@aexp
  5774  03E8                     l4100:	
  5775  03E8  1FBD               	btfss	___fldiv@a+2,7
  5776  03E9  2BEB               	goto	u4141
  5777  03EA  2BEC               	goto	u4140
  5778  03EB                     u4141:	
  5779  03EB  2BED               	goto	l4104
  5780  03EC                     u4140:	
  5781  03EC                     l4102:	
  5782  03EC  1454               	bsf	___fldiv@aexp,0
  5783  03ED                     l4104:	
  5784  03ED  0854               	movf	___fldiv@aexp,w
  5785  03EE  1903               	btfsc	3,2
  5786  03EF  2BF1               	goto	u4151
  5787  03F0  2BF2               	goto	u4150
  5788  03F1                     u4151:	
  5789  03F1  2C02               	goto	l4114
  5790  03F2                     u4150:	
  5791  03F2                     l4106:	
  5792  03F2  0A54               	incf	___fldiv@aexp,w
  5793  03F3  1D03               	btfss	3,2
  5794  03F4  2BF6               	goto	u4161
  5795  03F5  2BF7               	goto	u4160
  5796  03F6                     u4161:	
  5797  03F6  2BFF               	goto	l4110
  5798  03F7                     u4160:	
  5799  03F7                     l4108:	
  5800  03F7  3000               	movlw	0
  5801  03F8  00BE               	movwf	___fldiv@a+3
  5802  03F9  3000               	movlw	0
  5803  03FA  00BD               	movwf	___fldiv@a+2
  5804  03FB  3000               	movlw	0
  5805  03FC  00BC               	movwf	___fldiv@a+1
  5806  03FD  3000               	movlw	0
  5807  03FE  00BB               	movwf	___fldiv@a
  5808  03FF                     l4110:	
  5809  03FF  17BD               	bsf	___fldiv@a+2,7
  5810  0400                     l4112:	
  5811  0400  01BE               	clrf	___fldiv@a+3
  5812  0401  2C0A               	goto	l859
  5813  0402                     l4114:	
  5814  0402  3000               	movlw	0
  5815  0403  00BE               	movwf	___fldiv@a+3
  5816  0404  3000               	movlw	0
  5817  0405  00BD               	movwf	___fldiv@a+2
  5818  0406  3000               	movlw	0
  5819  0407  00BC               	movwf	___fldiv@a+1
  5820  0408  3000               	movlw	0
  5821  0409  00BB               	movwf	___fldiv@a
  5822  040A                     l859:	
  5823  040A  083E               	movf	___fldiv@a+3,w
  5824  040B  043D               	iorwf	___fldiv@a+2,w
  5825  040C  043C               	iorwf	___fldiv@a+1,w
  5826  040D  043B               	iorwf	___fldiv@a,w
  5827  040E  1D03               	skipz
  5828  040F  2C11               	goto	u4171
  5829  0410  2C12               	goto	u4170
  5830  0411                     u4171:	
  5831  0411  2C2B               	goto	l4124
  5832  0412                     u4170:	
  5833  0412                     l4116:	
  5834  0412  3000               	movlw	0
  5835  0413  00C2               	movwf	___fldiv@b+3
  5836  0414  3000               	movlw	0
  5837  0415  00C1               	movwf	___fldiv@b+2
  5838  0416  3000               	movlw	0
  5839  0417  00C0               	movwf	___fldiv@b+1
  5840  0418  3000               	movlw	0
  5841  0419  00BF               	movwf	___fldiv@b
  5842  041A  3080               	movlw	128
  5843  041B  04C1               	iorwf	___fldiv@b+2,f
  5844  041C  307F               	movlw	127
  5845  041D  04C2               	iorwf	___fldiv@b+3,f
  5846  041E                     l4118:	
  5847  041E  084C               	movf	___fldiv@sign,w
  5848  041F  00C3               	movwf	??___fldiv
  5849  0420  0843               	movf	??___fldiv,w
  5850  0421  04C2               	iorwf	___fldiv@b+3,f
  5851  0422                     l4120:	
  5852  0422  0842               	movf	___fldiv@b+3,w
  5853  0423  00BE               	movwf	?___fldiv+3
  5854  0424  0841               	movf	___fldiv@b+2,w
  5855  0425  00BD               	movwf	?___fldiv+2
  5856  0426  0840               	movf	___fldiv@b+1,w
  5857  0427  00BC               	movwf	?___fldiv+1
  5858  0428  083F               	movf	___fldiv@b,w
  5859  0429  00BB               	movwf	?___fldiv
  5860  042A  2D8A               	goto	l861
  5861  042B                     l4124:	
  5862  042B  0853               	movf	___fldiv@bexp,w
  5863  042C  1D03               	btfss	3,2
  5864  042D  2C2F               	goto	u4181
  5865  042E  2C30               	goto	u4180
  5866  042F                     u4181:	
  5867  042F  2C39               	goto	l4130
  5868  0430                     u4180:	
  5869  0430                     l4126:	
  5870  0430  3000               	movlw	0
  5871  0431  00BE               	movwf	?___fldiv+3
  5872  0432  3000               	movlw	0
  5873  0433  00BD               	movwf	?___fldiv+2
  5874  0434  3000               	movlw	0
  5875  0435  00BC               	movwf	?___fldiv+1
  5876  0436  3000               	movlw	0
  5877  0437  00BB               	movwf	?___fldiv
  5878  0438  2D8A               	goto	l861
  5879  0439                     l4130:	
  5880  0439  0853               	movf	___fldiv@bexp,w
  5881  043A  00C3               	movwf	??___fldiv
  5882  043B  01C4               	clrf	??___fldiv+1
  5883  043C  0844               	movf	??___fldiv+1,w
  5884  043D  00C6               	movwf	??___fldiv+3
  5885  043E  0854               	movf	___fldiv@aexp,w
  5886  043F  0243               	subwf	??___fldiv,w
  5887  0440  00C5               	movwf	??___fldiv+2
  5888  0441  1C03               	skipc
  5889  0442  03C6               	decf	??___fldiv+3,f
  5890  0443  0845               	movf	??___fldiv+2,w
  5891  0444  3E7F               	addlw	127
  5892  0445  00CD               	movwf	___fldiv@new_exp
  5893  0446  0846               	movf	??___fldiv+3,w
  5894  0447  1803               	skipnc
  5895  0448  3E01               	addlw	1
  5896  0449  3E00               	addlw	0
  5897  044A  00CE               	movwf	___fldiv@new_exp+1
  5898  044B                     l4132:	
  5899  044B  0842               	movf	___fldiv@b+3,w
  5900  044C  00CB               	movwf	___fldiv@rem+3
  5901  044D  0841               	movf	___fldiv@b+2,w
  5902  044E  00CA               	movwf	___fldiv@rem+2
  5903  044F  0840               	movf	___fldiv@b+1,w
  5904  0450  00C9               	movwf	___fldiv@rem+1
  5905  0451  083F               	movf	___fldiv@b,w
  5906  0452  00C8               	movwf	___fldiv@rem
  5907  0453                     l4134:	
  5908  0453  3000               	movlw	0
  5909  0454  00C2               	movwf	___fldiv@b+3
  5910  0455  3000               	movlw	0
  5911  0456  00C1               	movwf	___fldiv@b+2
  5912  0457  3000               	movlw	0
  5913  0458  00C0               	movwf	___fldiv@b+1
  5914  0459  3000               	movlw	0
  5915  045A  00BF               	movwf	___fldiv@b
  5916  045B                     l4136:	
  5917  045B  3000               	movlw	0
  5918  045C  00D2               	movwf	___fldiv@grs+3
  5919  045D  3000               	movlw	0
  5920  045E  00D1               	movwf	___fldiv@grs+2
  5921  045F  3000               	movlw	0
  5922  0460  00D0               	movwf	___fldiv@grs+1
  5923  0461  3000               	movlw	0
  5924  0462  00CF               	movwf	___fldiv@grs
  5925  0463                     l4138:	
  5926  0463  01D4               	clrf	___fldiv@aexp
  5927  0464  2CAF               	goto	l4158
  5928  0465                     l4140:	
  5929  0465  0854               	movf	___fldiv@aexp,w
  5930  0466  1903               	btfsc	3,2
  5931  0467  2C69               	goto	u4191
  5932  0468  2C6A               	goto	u4190
  5933  0469                     u4191:	
  5934  0469  2C8A               	goto	l4150
  5935  046A                     u4190:	
  5936  046A                     l4142:	
  5937  046A  3001               	movlw	1
  5938  046B  00C3               	movwf	??___fldiv
  5939  046C                     u4205:	
  5940  046C  1003               	clrc
  5941  046D  0DC8               	rlf	___fldiv@rem,f
  5942  046E  0DC9               	rlf	___fldiv@rem+1,f
  5943  046F  0DCA               	rlf	___fldiv@rem+2,f
  5944  0470  0DCB               	rlf	___fldiv@rem+3,f
  5945  0471  0BC3               	decfsz	??___fldiv,f
  5946  0472  2C6C               	goto	u4205
  5947  0473  3001               	movlw	1
  5948  0474  00C3               	movwf	??___fldiv
  5949  0475                     u4215:	
  5950  0475  1003               	clrc
  5951  0476  0DBF               	rlf	___fldiv@b,f
  5952  0477  0DC0               	rlf	___fldiv@b+1,f
  5953  0478  0DC1               	rlf	___fldiv@b+2,f
  5954  0479  0DC2               	rlf	___fldiv@b+3,f
  5955  047A  0BC3               	decfsz	??___fldiv,f
  5956  047B  2C75               	goto	u4215
  5957  047C                     l4144:	
  5958  047C  1FD2               	btfss	___fldiv@grs+3,7
  5959  047D  2C7F               	goto	u4221
  5960  047E  2C80               	goto	u4220
  5961  047F                     u4221:	
  5962  047F  2C81               	goto	l4148
  5963  0480                     u4220:	
  5964  0480                     l4146:	
  5965  0480  143F               	bsf	___fldiv@b,0
  5966  0481                     l4148:	
  5967  0481  3001               	movlw	1
  5968  0482  00C3               	movwf	??___fldiv
  5969  0483                     u4235:	
  5970  0483  1003               	clrc
  5971  0484  0DCF               	rlf	___fldiv@grs,f
  5972  0485  0DD0               	rlf	___fldiv@grs+1,f
  5973  0486  0DD1               	rlf	___fldiv@grs+2,f
  5974  0487  0DD2               	rlf	___fldiv@grs+3,f
  5975  0488  0BC3               	decfsz	??___fldiv,f
  5976  0489  2C83               	goto	u4235
  5977  048A                     l4150:	
  5978  048A  083E               	movf	___fldiv@a+3,w
  5979  048B  024B               	subwf	___fldiv@rem+3,w
  5980  048C  1D03               	skipz
  5981  048D  2C98               	goto	u4245
  5982  048E  083D               	movf	___fldiv@a+2,w
  5983  048F  024A               	subwf	___fldiv@rem+2,w
  5984  0490  1D03               	skipz
  5985  0491  2C98               	goto	u4245
  5986  0492  083C               	movf	___fldiv@a+1,w
  5987  0493  0249               	subwf	___fldiv@rem+1,w
  5988  0494  1D03               	skipz
  5989  0495  2C98               	goto	u4245
  5990  0496  083B               	movf	___fldiv@a,w
  5991  0497  0248               	subwf	___fldiv@rem,w
  5992  0498                     u4245:	
  5993  0498  1C03               	skipc
  5994  0499  2C9B               	goto	u4241
  5995  049A  2C9C               	goto	u4240
  5996  049B                     u4241:	
  5997  049B  2CAB               	goto	l4156
  5998  049C                     u4240:	
  5999  049C                     l4152:	
  6000  049C  1752               	bsf	___fldiv@grs+3,6
  6001  049D                     l4154:	
  6002  049D  083B               	movf	___fldiv@a,w
  6003  049E  02C8               	subwf	___fldiv@rem,f
  6004  049F  083C               	movf	___fldiv@a+1,w
  6005  04A0  1C03               	skipc
  6006  04A1  0F3C               	incfsz	___fldiv@a+1,w
  6007  04A2  02C9               	subwf	___fldiv@rem+1,f
  6008  04A3  083D               	movf	___fldiv@a+2,w
  6009  04A4  1C03               	skipc
  6010  04A5  0F3D               	incfsz	___fldiv@a+2,w
  6011  04A6  02CA               	subwf	___fldiv@rem+2,f
  6012  04A7  083E               	movf	___fldiv@a+3,w
  6013  04A8  1C03               	skipc
  6014  04A9  0F3E               	incfsz	___fldiv@a+3,w
  6015  04AA  02CB               	subwf	___fldiv@rem+3,f
  6016  04AB                     l4156:	
  6017  04AB  3001               	movlw	1
  6018  04AC  00C3               	movwf	??___fldiv
  6019  04AD  0843               	movf	??___fldiv,w
  6020  04AE  07D4               	addwf	___fldiv@aexp,f
  6021  04AF                     l4158:	
  6022  04AF  301A               	movlw	26
  6023  04B0  0254               	subwf	___fldiv@aexp,w
  6024  04B1  1C03               	skipc
  6025  04B2  2CB4               	goto	u4251
  6026  04B3  2CB5               	goto	u4250
  6027  04B4                     u4251:	
  6028  04B4  2C65               	goto	l4140
  6029  04B5                     u4250:	
  6030  04B5                     l4160:	
  6031  04B5  084B               	movf	___fldiv@rem+3,w
  6032  04B6  044A               	iorwf	___fldiv@rem+2,w
  6033  04B7  0449               	iorwf	___fldiv@rem+1,w
  6034  04B8  0448               	iorwf	___fldiv@rem,w
  6035  04B9  1903               	skipnz
  6036  04BA  2CBC               	goto	u4261
  6037  04BB  2CBD               	goto	u4260
  6038  04BC                     u4261:	
  6039  04BC  2CDC               	goto	l4174
  6040  04BD                     u4260:	
  6041  04BD                     l4162:	
  6042  04BD  144F               	bsf	___fldiv@grs,0
  6043  04BE  2CDC               	goto	l4174
  6044  04BF                     l4164:	
  6045  04BF  3001               	movlw	1
  6046  04C0  00C3               	movwf	??___fldiv
  6047  04C1                     u4275:	
  6048  04C1  1003               	clrc
  6049  04C2  0DBF               	rlf	___fldiv@b,f
  6050  04C3  0DC0               	rlf	___fldiv@b+1,f
  6051  04C4  0DC1               	rlf	___fldiv@b+2,f
  6052  04C5  0DC2               	rlf	___fldiv@b+3,f
  6053  04C6  0BC3               	decfsz	??___fldiv,f
  6054  04C7  2CC1               	goto	u4275
  6055  04C8                     l4166:	
  6056  04C8  1FD2               	btfss	___fldiv@grs+3,7
  6057  04C9  2CCB               	goto	u4281
  6058  04CA  2CCC               	goto	u4280
  6059  04CB                     u4281:	
  6060  04CB  2CCD               	goto	l4170
  6061  04CC                     u4280:	
  6062  04CC                     l4168:	
  6063  04CC  143F               	bsf	___fldiv@b,0
  6064  04CD                     l4170:	
  6065  04CD  3001               	movlw	1
  6066  04CE  00C3               	movwf	??___fldiv
  6067  04CF                     u4295:	
  6068  04CF  1003               	clrc
  6069  04D0  0DCF               	rlf	___fldiv@grs,f
  6070  04D1  0DD0               	rlf	___fldiv@grs+1,f
  6071  04D2  0DD1               	rlf	___fldiv@grs+2,f
  6072  04D3  0DD2               	rlf	___fldiv@grs+3,f
  6073  04D4  0BC3               	decfsz	??___fldiv,f
  6074  04D5  2CCF               	goto	u4295
  6075  04D6                     l4172:	
  6076  04D6  30FF               	movlw	255
  6077  04D7  07CD               	addwf	___fldiv@new_exp,f
  6078  04D8  1803               	skipnc
  6079  04D9  0ACE               	incf	___fldiv@new_exp+1,f
  6080  04DA  30FF               	movlw	255
  6081  04DB  07CE               	addwf	___fldiv@new_exp+1,f
  6082  04DC                     l4174:	
  6083  04DC  1FC1               	btfss	___fldiv@b+2,7
  6084  04DD  2CDF               	goto	u4301
  6085  04DE  2CE0               	goto	u4300
  6086  04DF                     u4301:	
  6087  04DF  2CBF               	goto	l4164
  6088  04E0                     u4300:	
  6089  04E0                     l4176:	
  6090  04E0  01D4               	clrf	___fldiv@aexp
  6091  04E1                     l4178:	
  6092  04E1  1FD2               	btfss	___fldiv@grs+3,7
  6093  04E2  2CE4               	goto	u4311
  6094  04E3  2CE5               	goto	u4310
  6095  04E4                     u4311:	
  6096  04E4  2D01               	goto	l4186
  6097  04E5                     u4310:	
  6098  04E5                     l4180:	
  6099  04E5  30FF               	movlw	255
  6100  04E6  054F               	andwf	___fldiv@grs,w
  6101  04E7  00C3               	movwf	??___fldiv
  6102  04E8  30FF               	movlw	255
  6103  04E9  0550               	andwf	___fldiv@grs+1,w
  6104  04EA  00C4               	movwf	??___fldiv+1
  6105  04EB  30FF               	movlw	255
  6106  04EC  0551               	andwf	___fldiv@grs+2,w
  6107  04ED  00C5               	movwf	??___fldiv+2
  6108  04EE  307F               	movlw	127
  6109  04EF  0552               	andwf	___fldiv@grs+3,w
  6110  04F0  00C6               	movwf	??___fldiv+3
  6111  04F1  0846               	movf	??___fldiv+3,w
  6112  04F2  0445               	iorwf	??___fldiv+2,w
  6113  04F3  0444               	iorwf	??___fldiv+1,w
  6114  04F4  0443               	iorwf	??___fldiv,w
  6115  04F5  1903               	skipnz
  6116  04F6  2CF8               	goto	u4321
  6117  04F7  2CF9               	goto	u4320
  6118  04F8                     u4321:	
  6119  04F8  2CFC               	goto	l875
  6120  04F9                     u4320:	
  6121  04F9                     l4182:	
  6122  04F9  01D4               	clrf	___fldiv@aexp
  6123  04FA  0AD4               	incf	___fldiv@aexp,f
  6124  04FB  2D01               	goto	l4186
  6125  04FC                     l875:	
  6126  04FC  1C3F               	btfss	___fldiv@b,0
  6127  04FD  2CFF               	goto	u4331
  6128  04FE  2D00               	goto	u4330
  6129  04FF                     u4331:	
  6130  04FF  2D01               	goto	l4186
  6131  0500                     u4330:	
  6132  0500  2CF9               	goto	l4182
  6133  0501                     l4186:	
  6134  0501  0854               	movf	___fldiv@aexp,w
  6135  0502  1903               	btfsc	3,2
  6136  0503  2D05               	goto	u4341
  6137  0504  2D06               	goto	u4340
  6138  0505                     u4341:	
  6139  0505  2D37               	goto	l4196
  6140  0506                     u4340:	
  6141  0506                     l4188:	
  6142  0506  3001               	movlw	1
  6143  0507  07BF               	addwf	___fldiv@b,f
  6144  0508  3000               	movlw	0
  6145  0509  1803               	skipnc
  6146  050A  3001               	movlw	1
  6147  050B  07C0               	addwf	___fldiv@b+1,f
  6148  050C  3000               	movlw	0
  6149  050D  1803               	skipnc
  6150  050E  3001               	movlw	1
  6151  050F  07C1               	addwf	___fldiv@b+2,f
  6152  0510  3000               	movlw	0
  6153  0511  1803               	skipnc
  6154  0512  3001               	movlw	1
  6155  0513  07C2               	addwf	___fldiv@b+3,f
  6156  0514                     l4190:	
  6157  0514  1C42               	btfss	___fldiv@b+3,0
  6158  0515  2D17               	goto	u4351
  6159  0516  2D18               	goto	u4350
  6160  0517                     u4351:	
  6161  0517  2D37               	goto	l4196
  6162  0518                     u4350:	
  6163  0518                     l4192:	
  6164  0518  083F               	movf	___fldiv@b,w
  6165  0519  00C3               	movwf	??___fldiv
  6166  051A  0840               	movf	___fldiv@b+1,w
  6167  051B  00C4               	movwf	??___fldiv+1
  6168  051C  0841               	movf	___fldiv@b+2,w
  6169  051D  00C5               	movwf	??___fldiv+2
  6170  051E  0842               	movf	___fldiv@b+3,w
  6171  051F  00C6               	movwf	??___fldiv+3
  6172  0520  3001               	movlw	1
  6173  0521  00C7               	movwf	??___fldiv+4
  6174  0522                     u4365:	
  6175  0522  0D46               	rlf	??___fldiv+3,w
  6176  0523  0CC6               	rrf	??___fldiv+3,f
  6177  0524  0CC5               	rrf	??___fldiv+2,f
  6178  0525  0CC4               	rrf	??___fldiv+1,f
  6179  0526  0CC3               	rrf	??___fldiv,f
  6180  0527                     u4360:	
  6181  0527  0BC7               	decfsz	??___fldiv+4,f
  6182  0528  2D22               	goto	u4365
  6183  0529  0846               	movf	??___fldiv+3,w
  6184  052A  00C2               	movwf	___fldiv@b+3
  6185  052B  0845               	movf	??___fldiv+2,w
  6186  052C  00C1               	movwf	___fldiv@b+2
  6187  052D  0844               	movf	??___fldiv+1,w
  6188  052E  00C0               	movwf	___fldiv@b+1
  6189  052F  0843               	movf	??___fldiv,w
  6190  0530  00BF               	movwf	___fldiv@b
  6191  0531                     l4194:	
  6192  0531  3001               	movlw	1
  6193  0532  07CD               	addwf	___fldiv@new_exp,f
  6194  0533  1803               	skipnc
  6195  0534  0ACE               	incf	___fldiv@new_exp+1,f
  6196  0535  3000               	movlw	0
  6197  0536  07CE               	addwf	___fldiv@new_exp+1,f
  6198  0537                     l4196:	
  6199  0537  084E               	movf	___fldiv@new_exp+1,w
  6200  0538  3A80               	xorlw	128
  6201  0539  00FF               	movwf	btemp+1
  6202  053A  3080               	movlw	128
  6203  053B  027F               	subwf	btemp+1,w
  6204  053C  1D03               	skipz
  6205  053D  2D40               	goto	u4375
  6206  053E  30FF               	movlw	255
  6207  053F  024D               	subwf	___fldiv@new_exp,w
  6208  0540                     u4375:	
  6209  0540  1C03               	skipc
  6210  0541  2D43               	goto	u4371
  6211  0542  2D44               	goto	u4370
  6212  0543                     u4371:	
  6213  0543  2D52               	goto	l4200
  6214  0544                     u4370:	
  6215  0544                     l4198:	
  6216  0544  30FF               	movlw	255
  6217  0545  1283               	bcf	3,5	;RP0=0, select bank0
  6218  0546  1303               	bcf	3,6	;RP1=0, select bank0
  6219  0547  00CD               	movwf	___fldiv@new_exp
  6220  0548  3000               	movlw	0
  6221  0549  00CE               	movwf	___fldiv@new_exp+1
  6222  054A  3000               	movlw	0
  6223  054B  00C2               	movwf	___fldiv@b+3
  6224  054C  3000               	movlw	0
  6225  054D  00C1               	movwf	___fldiv@b+2
  6226  054E  3000               	movlw	0
  6227  054F  00C0               	movwf	___fldiv@b+1
  6228  0550  3000               	movlw	0
  6229  0551  00BF               	movwf	___fldiv@b
  6230  0552                     l4200:	
  6231  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0553  1303               	bcf	3,6	;RP1=0, select bank0
  6233  0554  084E               	movf	___fldiv@new_exp+1,w
  6234  0555  3A80               	xorlw	128
  6235  0556  00FF               	movwf	btemp+1
  6236  0557  3080               	movlw	128
  6237  0558  027F               	subwf	btemp+1,w
  6238  0559  1D03               	skipz
  6239  055A  2D5D               	goto	u4385
  6240  055B  3001               	movlw	1
  6241  055C  024D               	subwf	___fldiv@new_exp,w
  6242  055D                     u4385:	
  6243  055D  1803               	skipnc
  6244  055E  2D60               	goto	u4381
  6245  055F  2D61               	goto	u4380
  6246  0560                     u4381:	
  6247  0560  2D6E               	goto	l881
  6248  0561                     u4380:	
  6249  0561                     l4202:	
  6250  0561  1283               	bcf	3,5	;RP0=0, select bank0
  6251  0562  1303               	bcf	3,6	;RP1=0, select bank0
  6252  0563  01CD               	clrf	___fldiv@new_exp
  6253  0564  01CE               	clrf	___fldiv@new_exp+1
  6254  0565                     l4204:	
  6255  0565  3000               	movlw	0
  6256  0566  00C2               	movwf	___fldiv@b+3
  6257  0567  3000               	movlw	0
  6258  0568  00C1               	movwf	___fldiv@b+2
  6259  0569  3000               	movlw	0
  6260  056A  00C0               	movwf	___fldiv@b+1
  6261  056B  3000               	movlw	0
  6262  056C  00BF               	movwf	___fldiv@b
  6263  056D                     l4206:	
  6264  056D  01CC               	clrf	___fldiv@sign
  6265  056E                     l881:	
  6266  056E  1283               	bcf	3,5	;RP0=0, select bank0
  6267  056F  1303               	bcf	3,6	;RP1=0, select bank0
  6268  0570  084D               	movf	___fldiv@new_exp,w
  6269  0571  00C3               	movwf	??___fldiv
  6270  0572  0843               	movf	??___fldiv,w
  6271  0573  00D3               	movwf	___fldiv@bexp
  6272  0574                     l4208:	
  6273  0574  1C53               	btfss	___fldiv@bexp,0
  6274  0575  2D77               	goto	u4391
  6275  0576  2D78               	goto	u4390
  6276  0577                     u4391:	
  6277  0577  2D7A               	goto	l4212
  6278  0578                     u4390:	
  6279  0578                     l4210:	
  6280  0578  17C1               	bsf	___fldiv@b+2,7
  6281  0579  2D7E               	goto	l883
  6282  057A                     l4212:	
  6283  057A  307F               	movlw	127
  6284  057B  00C3               	movwf	??___fldiv
  6285  057C  0843               	movf	??___fldiv,w
  6286  057D  05C1               	andwf	___fldiv@b+2,f
  6287  057E                     l883:	
  6288  057E  0853               	movf	___fldiv@bexp,w
  6289  057F  00C3               	movwf	??___fldiv
  6290  0580  1003               	clrc
  6291  0581  0C43               	rrf	??___fldiv,w
  6292  0582  00C4               	movwf	??___fldiv+1
  6293  0583  0844               	movf	??___fldiv+1,w
  6294  0584  00C2               	movwf	___fldiv@b+3
  6295  0585  084C               	movf	___fldiv@sign,w
  6296  0586  00C3               	movwf	??___fldiv
  6297  0587  0843               	movf	??___fldiv,w
  6298  0588  04C2               	iorwf	___fldiv@b+3,f
  6299  0589  2C22               	goto	l4120
  6300  058A                     l861:	
  6301  058A  0008               	return
  6302  058B                     __end_of___fldiv:	
  6303                           
  6304                           	psect	text23
  6305  1749                     __ptext23:	
  6306 ;; *************** function _ADC_Read *****************
  6307 ;; Defined at:
  6308 ;;		line 29 in file "adc_drive.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  channel         1    wreg     unsigned char 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  channel         1   12[BANK0 ] unsigned char 
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  2    8[BANK0 ] unsigned int 
  6315 ;; Registers used:
  6316 ;;		wreg, status,2, status,0
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6322 ;;      Params:         0       2       0       0       0
  6323 ;;      Locals:         0       1       0       0       0
  6324 ;;      Temps:          0       2       0       0       0
  6325 ;;      Totals:         0       5       0       0       0
  6326 ;;Total ram usage:        5 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; Hardware stack levels required when called:    3
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_temp_sensor_read
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           
  6337                           ;psect for function _ADC_Read
  6338  1749                     _ADC_Read:	
  6339                           
  6340                           ;incstack = 0
  6341                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  6342                           ;ADC_Read@channel stored from wreg
  6343  1749  1283               	bcf	3,5	;RP0=0, select bank0
  6344  174A  1303               	bcf	3,6	;RP1=0, select bank0
  6345  174B  00AC               	movwf	ADC_Read@channel
  6346  174C                     l3738:	
  6347                           
  6348                           ;adc_drive.c: 30:     (ADCON0 &= ~(1 << 3));
  6349  174C  30F7               	movlw	247
  6350  174D  00AA               	movwf	??_ADC_Read
  6351  174E  082A               	movf	??_ADC_Read,w
  6352  174F  059F               	andwf	31,f	;volatile
  6353                           
  6354                           ;adc_drive.c: 31:     (ADCON0 &= ~(1 << 4));
  6355  1750  30EF               	movlw	239
  6356  1751  00AA               	movwf	??_ADC_Read
  6357  1752  082A               	movf	??_ADC_Read,w
  6358  1753  059F               	andwf	31,f	;volatile
  6359                           
  6360                           ;adc_drive.c: 32:     (ADCON0 &= ~(1 << 5));
  6361  1754  30DF               	movlw	223
  6362  1755  00AA               	movwf	??_ADC_Read
  6363  1756  082A               	movf	??_ADC_Read,w
  6364  1757  059F               	andwf	31,f	;volatile
  6365                           
  6366                           ;adc_drive.c: 33:     ADCON0 |= (channel << 3);
  6367  1758  082C               	movf	ADC_Read@channel,w	;volatile
  6368  1759  00AA               	movwf	??_ADC_Read
  6369  175A  3002               	movlw	2
  6370  175B                     u3705:	
  6371  175B  1003               	clrc
  6372  175C  0DAA               	rlf	??_ADC_Read,f
  6373  175D  3EFF               	addlw	-1
  6374  175E  1D03               	skipz
  6375  175F  2F5B               	goto	u3705
  6376  1760  1003               	clrc
  6377  1761  0D2A               	rlf	??_ADC_Read,w
  6378  1762  00AB               	movwf	??_ADC_Read+1
  6379  1763  082B               	movf	??_ADC_Read+1,w
  6380  1764  049F               	iorwf	31,f	;volatile
  6381  1765                     l3740:	
  6382                           
  6383                           ;adc_drive.c: 34:     (ADCON0 |= (1 << 2));
  6384  1765  151F               	bsf	31,2	;volatile
  6385  1766                     l60:	
  6386                           ;adc_drive.c: 35:     while (ADCON0 & (1 << 2)){}
  6387                           
  6388  1766  191F               	btfsc	31,2	;volatile
  6389  1767  2F69               	goto	u3711
  6390  1768  2F6A               	goto	u3710
  6391  1769                     u3711:	
  6392  1769  2F66               	goto	l60
  6393  176A                     u3710:	
  6394  176A                     l3742:	
  6395                           
  6396                           ;adc_drive.c: 36:     return ( ADRESL + (ADRESH* 256) ) ;
  6397  176A  081E               	movf	30,w	;volatile
  6398  176B  00A9               	movwf	?_ADC_Read+1
  6399  176C  1683               	bsf	3,5	;RP0=1, select bank1
  6400  176D  1303               	bcf	3,6	;RP1=0, select bank1
  6401  176E  081E               	movf	30,w	;volatile
  6402  176F  1283               	bcf	3,5	;RP0=0, select bank0
  6403  1770  1303               	bcf	3,6	;RP1=0, select bank0
  6404  1771  00A8               	movwf	?_ADC_Read
  6405  1772                     l63:	
  6406  1772  0008               	return
  6407  1773                     __end_of_ADC_Read:	
  6408                           
  6409                           	psect	text24
  6410  0C3D                     __ptext24:	
  6411 ;; *************** function _sw_action *****************
  6412 ;; Defined at:
  6413 ;;		line 107 in file "switchs.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      void 
  6420 ;; Registers used:
  6421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6427 ;;      Params:         0       0       0       0       0
  6428 ;;      Locals:         0       0       0       0       0
  6429 ;;      Temps:          0       2       0       0       0
  6430 ;;      Totals:         0       2       0       0       0
  6431 ;;Total ram usage:        2 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    6
  6434 ;; This function calls:
  6435 ;;		_EEPROM_write
  6436 ;; This function is called by:
  6437 ;;		_switch_scan
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function _sw_action
  6443  0C3D                     _sw_action:	
  6444  0C3D                     l3886:	
  6445                           ;incstack = 0
  6446 ;; hardware stack exceeded
  6447                           ; Regs used in _sw_action: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6448                           
  6449                           
  6450                           ;switchs.c: 108:    switch (mode){
  6451  0C3D  2CA9               	goto	l3920
  6452  0C3E                     l3888:	
  6453                           
  6454                           ;switchs.c: 111:             if ( (sw_info[0].state == PRE_RELEASED ) ||
  6455  0C3E  3003               	movlw	3
  6456  0C3F  1683               	bsf	3,5	;RP0=1, select bank1
  6457  0C40  1303               	bcf	3,6	;RP1=0, select bank1
  6458  0C41  0660               	xorwf	(_sw_info^(0+128)+2),w
  6459  0C42  1903               	btfsc	3,2
  6460  0C43  2C45               	goto	u3721
  6461  0C44  2C46               	goto	u3720
  6462  0C45                     u3721:	
  6463  0C45  2C4C               	goto	l252
  6464  0C46                     u3720:	
  6465  0C46                     l3890:	
  6466  0C46  3003               	movlw	3
  6467  0C47  0663               	xorwf	(_sw_info^(0+128)+5),w
  6468  0C48  1D03               	btfss	3,2
  6469  0C49  2C4B               	goto	u3731
  6470  0C4A  2C4C               	goto	u3730
  6471  0C4B                     u3731:	
  6472  0C4B  2CBB               	goto	l263
  6473  0C4C                     u3730:	
  6474  0C4C                     l252:	
  6475                           
  6476                           ;switchs.c: 112:                 (sw_info[1].state == PRE_RELEASED) ) {;switchs.c: 113: 
      +                                          mode = SETTING_MODE ;
  6477  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  6478  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  6479  0C4E  01E5               	clrf	_mode
  6480  0C4F  0AE5               	incf	_mode,f
  6481                           
  6482                           ;switchs.c: 114:             }
  6483  0C50  2CBB               	goto	l263
  6484  0C51                     l3892:	
  6485                           
  6486                           ;switchs.c: 122:             if (switch_wait < 5000){
  6487  0C51  3013               	movlw	19
  6488  0C52  1683               	bsf	3,5	;RP0=1, select bank1
  6489  0C53  1303               	bcf	3,6	;RP1=0, select bank1
  6490  0C54  0267               	subwf	(_switch_wait+1)^(0+128),w
  6491  0C55  3088               	movlw	136
  6492  0C56  1903               	skipnz
  6493  0C57  0266               	subwf	_switch_wait^(0+128),w
  6494  0C58  1803               	skipnc
  6495  0C59  2C5B               	goto	u3741
  6496  0C5A  2C5C               	goto	u3740
  6497  0C5B                     u3741:	
  6498  0C5B  2C8F               	goto	l3912
  6499  0C5C                     u3740:	
  6500  0C5C                     l3894:	
  6501                           
  6502                           ;switchs.c: 123:                 if ( (sw_info[0].state == PRE_RELEASED) && (set_temp < 
      +                          75)){
  6503  0C5C  3003               	movlw	3
  6504  0C5D  0660               	xorwf	(_sw_info^(0+128)+2),w
  6505  0C5E  1D03               	btfss	3,2
  6506  0C5F  2C61               	goto	u3751
  6507  0C60  2C62               	goto	u3750
  6508  0C61                     u3751:	
  6509  0C61  2C73               	goto	l3902
  6510  0C62                     u3750:	
  6511  0C62                     l3896:	
  6512  0C62  304B               	movlw	75
  6513  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6514  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6515  0C65  0267               	subwf	_set_temp,w
  6516  0C66  1803               	skipnc
  6517  0C67  2C69               	goto	u3761
  6518  0C68  2C6A               	goto	u3760
  6519  0C69                     u3761:	
  6520  0C69  2C73               	goto	l3902
  6521  0C6A                     u3760:	
  6522  0C6A                     l3898:	
  6523                           
  6524                           ;switchs.c: 124:                     set_temp += 5 ;
  6525  0C6A  3005               	movlw	5
  6526  0C6B  00AC               	movwf	??_sw_action
  6527  0C6C  082C               	movf	??_sw_action,w
  6528  0C6D  07E7               	addwf	_set_temp,f
  6529  0C6E                     l3900:	
  6530                           
  6531                           ;switchs.c: 125:                     switch_wait = 0 ;
  6532  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  6533  0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  6534  0C70  01E6               	clrf	_switch_wait^(0+128)
  6535  0C71  01E7               	clrf	(_switch_wait+1)^(0+128)
  6536                           
  6537                           ;switchs.c: 126:                 }
  6538  0C72  2CBB               	goto	l263
  6539  0C73                     l3902:	
  6540  0C73  3003               	movlw	3
  6541  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  6542  0C75  1303               	bcf	3,6	;RP1=0, select bank1
  6543  0C76  0663               	xorwf	(_sw_info^(0+128)+5),w
  6544  0C77  1D03               	btfss	3,2
  6545  0C78  2C7A               	goto	u3771
  6546  0C79  2C7B               	goto	u3770
  6547  0C7A                     u3771:	
  6548  0C7A  2C86               	goto	l3910
  6549  0C7B                     u3770:	
  6550  0C7B                     l3904:	
  6551  0C7B  3024               	movlw	36
  6552  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  6553  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  6554  0C7E  0267               	subwf	_set_temp,w
  6555  0C7F  1C03               	skipc
  6556  0C80  2C82               	goto	u3781
  6557  0C81  2C83               	goto	u3780
  6558  0C82                     u3781:	
  6559  0C82  2C86               	goto	l3910
  6560  0C83                     u3780:	
  6561  0C83                     l3906:	
  6562                           
  6563                           ;switchs.c: 128:                     set_temp -= 5 ;
  6564  0C83  3005               	movlw	5
  6565  0C84  02E7               	subwf	_set_temp,f
  6566  0C85  2C6E               	goto	l3900
  6567  0C86                     l3910:	
  6568                           
  6569                           ;switchs.c: 132:                     switch_wait += (20) ;
  6570  0C86  3014               	movlw	20
  6571  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  6572  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  6573  0C89  07E6               	addwf	_switch_wait^(0+128),f
  6574  0C8A  1803               	skipnc
  6575  0C8B  0AE7               	incf	(_switch_wait+1)^(0+128),f
  6576  0C8C  3000               	movlw	0
  6577  0C8D  07E7               	addwf	(_switch_wait+1)^(0+128),f
  6578  0C8E  2CBB               	goto	l263
  6579  0C8F                     l3912:	
  6580                           
  6581                           ;switchs.c: 136:                 mode = NORMAL_MODE ;
  6582  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  6583  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  6584  0C91  01E5               	clrf	_mode
  6585                           
  6586                           ;switchs.c: 137:                 switch_wait = 0 ;
  6587  0C92  1683               	bsf	3,5	;RP0=1, select bank1
  6588  0C93  1303               	bcf	3,6	;RP1=0, select bank1
  6589  0C94  01E6               	clrf	_switch_wait^(0+128)
  6590  0C95  01E7               	clrf	(_switch_wait+1)^(0+128)
  6591  0C96                     l3914:	
  6592                           
  6593                           ;switchs.c: 138:                 EEPROM_write(0xff , set_temp);
  6594  0C96  30FF               	movlw	255
  6595  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  6596  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  6597  0C99  00A9               	movwf	EEPROM_write@address
  6598  0C9A  3000               	movlw	0
  6599  0C9B  00AA               	movwf	EEPROM_write@address+1
  6600  0C9C  0867               	movf	_set_temp,w
  6601  0C9D  00AC               	movwf	??_sw_action
  6602  0C9E  082C               	movf	??_sw_action,w
  6603  0C9F  00AB               	movwf	EEPROM_write@_x
  6604  0CA0  120A  118A  27DE  120A  158A  	fcall	_EEPROM_write
  6605  0CA5                     l3916:	
  6606                           
  6607                           ;switchs.c: 139:                 blink = SSD_ON ;
  6608  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  6609  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  6610  0CA7  01E1               	clrf	_blink
  6611  0CA8  2CBB               	goto	l263
  6612  0CA9                     l3920:	
  6613  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  6614  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  6615  0CAB  0865               	movf	_mode,w
  6616  0CAC  00AC               	movwf	??_sw_action
  6617  0CAD  01AD               	clrf	??_sw_action+1
  6618                           
  6619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6620                           ; Switch size 1, requested type "simple"
  6621                           ; Number of cases is 1, Range of values is 0 to 0
  6622                           ; switch strategies available:
  6623                           ; Name         Instructions Cycles
  6624                           ; simple_byte            4     3 (average)
  6625                           ; direct_byte           11     8 (fixed)
  6626                           ; jumptable            260     6 (fixed)
  6627                           ;	Chosen strategy is simple_byte
  6628  0CAE  082D               	movf	??_sw_action+1,w
  6629  0CAF  3A00               	xorlw	0	; case 0
  6630  0CB0  1903               	skipnz
  6631  0CB1  2CB3               	goto	l4926
  6632  0CB2  2CBB               	goto	l263
  6633  0CB3                     l4926:	
  6634                           
  6635                           ; Switch size 1, requested type "simple"
  6636                           ; Number of cases is 2, Range of values is 0 to 1
  6637                           ; switch strategies available:
  6638                           ; Name         Instructions Cycles
  6639                           ; simple_byte            7     4 (average)
  6640                           ; direct_byte           14     8 (fixed)
  6641                           ; jumptable            260     6 (fixed)
  6642                           ;	Chosen strategy is simple_byte
  6643  0CB3  082C               	movf	??_sw_action,w
  6644  0CB4  3A00               	xorlw	0	; case 0
  6645  0CB5  1903               	skipnz
  6646  0CB6  2C3E               	goto	l3888
  6647  0CB7  3A01               	xorlw	1	; case 1
  6648  0CB8  1903               	skipnz
  6649  0CB9  2C51               	goto	l3892
  6650  0CBA  2CBB               	goto	l263
  6651  0CBB                     l263:	
  6652  0CBB  0008               	return
  6653  0CBC                     __end_of_sw_action:	
  6654                           
  6655                           	psect	text25
  6656  07DE                     __ptext25:	
  6657 ;; *************** function _EEPROM_write *****************
  6658 ;; Defined at:
  6659 ;;		line 19 in file "eeprom.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  address         2    9[BANK0 ] unsigned int 
  6662 ;;  _x              1   11[BANK0 ] unsigned char 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0, pclath, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6674 ;;      Params:         0       3       0       0       0
  6675 ;;      Locals:         0       0       0       0       0
  6676 ;;      Temps:          0       0       0       0       0
  6677 ;;      Totals:         0       3       0       0       0
  6678 ;;Total ram usage:        3 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:    5
  6681 ;; This function calls:
  6682 ;;		_I2C1_Start
  6683 ;;		_I2C1_Stop
  6684 ;;		_I2C1_Wr
  6685 ;; This function is called by:
  6686 ;;		_sw_action
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           
  6691                           ;psect for function _EEPROM_write
  6692  07DE                     _EEPROM_write:	
  6693  07DE                     l3696:	
  6694                           ;incstack = 0
  6695 ;; hardware stack exceeded
  6696                           ; Regs used in _EEPROM_write: [wreg+status,2+status,0+pclath+cstack]
  6697                           
  6698                           
  6699                           ;eeprom.c: 20:     I2C1_Start();
  6700  07DE  160A  118A  25C0  120A  118A  	fcall	_I2C1_Start
  6701                           
  6702                           ;eeprom.c: 21:     I2C1_Wr(0XA2);
  6703  07E3  30A2               	movlw	162
  6704  07E4  160A  118A  263C  120A  118A  	fcall	_I2C1_Wr
  6705                           
  6706                           ;eeprom.c: 22:     I2C1_Wr(address);
  6707  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  6708  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  6709  07EB  0829               	movf	EEPROM_write@address,w
  6710  07EC  160A  118A  263C  120A  118A  	fcall	_I2C1_Wr
  6711                           
  6712                           ;eeprom.c: 23:     I2C1_Wr(_x);
  6713  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  6714  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  6715  07F3  082B               	movf	EEPROM_write@_x,w
  6716  07F4  160A  118A  263C  120A  118A  	fcall	_I2C1_Wr
  6717                           
  6718                           ;eeprom.c: 24:     I2C1_Stop();
  6719  07F9  160A  118A  25C9  120A  118A  	fcall	_I2C1_Stop
  6720  07FE                     l119:	
  6721  07FE  0008               	return
  6722  07FF                     __end_of_EEPROM_write:	
  6723                           
  6724                           	psect	text26
  6725  0953                     __ptext26:	
  6726 ;; *************** function _display7s *****************
  6727 ;; Defined at:
  6728 ;;		line 36 in file "SSD.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  v               1    wreg     unsigned char 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  v               1   10[BANK0 ] unsigned char 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  1    wreg      unsigned char 
  6735 ;; Registers used:
  6736 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6742 ;;      Params:         0       0       0       0       0
  6743 ;;      Locals:         0       1       0       0       0
  6744 ;;      Temps:          0       2       0       0       0
  6745 ;;      Totals:         0       3       0       0       0
  6746 ;;Total ram usage:        3 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:    3
  6749 ;; This function calls:
  6750 ;;		Nothing
  6751 ;; This function is called by:
  6752 ;;		_ssd_update
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           
  6757                           ;psect for function _display7s
  6758  0953                     _display7s:	
  6759                           
  6760                           ;incstack = 0
  6761                           ; Regs used in _display7s: [wreg-fsr0h+status,2+status,0]
  6762                           ;display7s@v stored from wreg
  6763  0953  1283               	bcf	3,5	;RP0=0, select bank0
  6764  0954  1303               	bcf	3,6	;RP1=0, select bank0
  6765  0955  00AA               	movwf	display7s@v
  6766  0956                     l3766:	
  6767                           
  6768                           ;SSD.c: 36: uint8_t display7s(uint8_t v);SSD.c: 37: {;SSD.c: 38:   switch(v)
  6769  0956  2979               	goto	l3872
  6770  0957                     l3768:	
  6771                           
  6772                           ;SSD.c: 41:       return 0x3F;
  6773  0957  303F               	movlw	63
  6774  0958  29B3               	goto	l159
  6775  0959                     l3774:	
  6776                           
  6777                           ;SSD.c: 44:       return 0x06;
  6778  0959  3006               	movlw	6
  6779  095A  29B3               	goto	l159
  6780  095B                     l3780:	
  6781                           
  6782                           ;SSD.c: 47:       return 0x5B;
  6783  095B  305B               	movlw	91
  6784  095C  29B3               	goto	l159
  6785  095D                     l3786:	
  6786                           
  6787                           ;SSD.c: 50:       return 0x4F;
  6788  095D  304F               	movlw	79
  6789  095E  29B3               	goto	l159
  6790  095F                     l3792:	
  6791                           
  6792                           ;SSD.c: 53:       return 0x66;
  6793  095F  3066               	movlw	102
  6794  0960  29B3               	goto	l159
  6795  0961                     l3798:	
  6796                           
  6797                           ;SSD.c: 56:       return 0x6D;
  6798  0961  306D               	movlw	109
  6799  0962  29B3               	goto	l159
  6800  0963                     l3804:	
  6801                           
  6802                           ;SSD.c: 59:       return 0x7D;
  6803  0963  307D               	movlw	125
  6804  0964  29B3               	goto	l159
  6805  0965                     l3810:	
  6806                           
  6807                           ;SSD.c: 62:       return 0x07;
  6808  0965  3007               	movlw	7
  6809  0966  29B3               	goto	l159
  6810  0967                     l3816:	
  6811                           
  6812                           ;SSD.c: 65:       return 0x7F;
  6813  0967  307F               	movlw	127
  6814  0968  29B3               	goto	l159
  6815  0969                     l3822:	
  6816                           
  6817                           ;SSD.c: 68:       return 0x6F;
  6818  0969  306F               	movlw	111
  6819  096A  29B3               	goto	l159
  6820  096B                     l3828:	
  6821                           
  6822                           ;SSD.c: 71:       return 0x77;
  6823  096B  3077               	movlw	119
  6824  096C  29B3               	goto	l159
  6825  096D                     l3834:	
  6826                           
  6827                           ;SSD.c: 74:       return 0x7c;
  6828  096D  307C               	movlw	124
  6829  096E  29B3               	goto	l159
  6830  096F                     l3840:	
  6831                           
  6832                           ;SSD.c: 77:       return 0x58;
  6833  096F  3058               	movlw	88
  6834  0970  29B3               	goto	l159
  6835  0971                     l3846:	
  6836                           
  6837                           ;SSD.c: 80:       return 0x5E;
  6838  0971  305E               	movlw	94
  6839  0972  29B3               	goto	l159
  6840  0973                     l3852:	
  6841                           
  6842                           ;SSD.c: 83:       return 0x79;
  6843  0973  3079               	movlw	121
  6844  0974  29B3               	goto	l159
  6845  0975                     l3858:	
  6846                           
  6847                           ;SSD.c: 86:       return 0x71;
  6848  0975  3071               	movlw	113
  6849  0976  29B3               	goto	l159
  6850  0977                     l3864:	
  6851                           
  6852                           ;SSD.c: 89:       return 0;
  6853  0977  3000               	movlw	0
  6854  0978  29B3               	goto	l159
  6855  0979                     l3872:	
  6856  0979  082A               	movf	display7s@v,w
  6857  097A  00A8               	movwf	??_display7s
  6858  097B  01A9               	clrf	??_display7s+1
  6859                           
  6860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6861                           ; Switch size 1, requested type "simple"
  6862                           ; Number of cases is 1, Range of values is 0 to 0
  6863                           ; switch strategies available:
  6864                           ; Name         Instructions Cycles
  6865                           ; simple_byte            4     3 (average)
  6866                           ; direct_byte           11     8 (fixed)
  6867                           ; jumptable            260     6 (fixed)
  6868                           ;	Chosen strategy is simple_byte
  6869  097C  0829               	movf	??_display7s+1,w
  6870  097D  3A00               	xorlw	0	; case 0
  6871  097E  1903               	skipnz
  6872  097F  2981               	goto	l4928
  6873  0980  2977               	goto	l3864
  6874  0981                     l4928:	
  6875                           
  6876                           ; Switch size 1, requested type "simple"
  6877                           ; Number of cases is 16, Range of values is 0 to 15
  6878                           ; switch strategies available:
  6879                           ; Name         Instructions Cycles
  6880                           ; simple_byte           49    25 (average)
  6881                           ; direct_byte           56     8 (fixed)
  6882                           ; jumptable            260     6 (fixed)
  6883                           ;	Chosen strategy is simple_byte
  6884  0981  0828               	movf	??_display7s,w
  6885  0982  3A00               	xorlw	0	; case 0
  6886  0983  1903               	skipnz
  6887  0984  2957               	goto	l3768
  6888  0985  3A01               	xorlw	1	; case 1
  6889  0986  1903               	skipnz
  6890  0987  2959               	goto	l3774
  6891  0988  3A03               	xorlw	3	; case 2
  6892  0989  1903               	skipnz
  6893  098A  295B               	goto	l3780
  6894  098B  3A01               	xorlw	1	; case 3
  6895  098C  1903               	skipnz
  6896  098D  295D               	goto	l3786
  6897  098E  3A07               	xorlw	7	; case 4
  6898  098F  1903               	skipnz
  6899  0990  295F               	goto	l3792
  6900  0991  3A01               	xorlw	1	; case 5
  6901  0992  1903               	skipnz
  6902  0993  2961               	goto	l3798
  6903  0994  3A03               	xorlw	3	; case 6
  6904  0995  1903               	skipnz
  6905  0996  2963               	goto	l3804
  6906  0997  3A01               	xorlw	1	; case 7
  6907  0998  1903               	skipnz
  6908  0999  2965               	goto	l3810
  6909  099A  3A0F               	xorlw	15	; case 8
  6910  099B  1903               	skipnz
  6911  099C  2967               	goto	l3816
  6912  099D  3A01               	xorlw	1	; case 9
  6913  099E  1903               	skipnz
  6914  099F  2969               	goto	l3822
  6915  09A0  3A03               	xorlw	3	; case 10
  6916  09A1  1903               	skipnz
  6917  09A2  296B               	goto	l3828
  6918  09A3  3A01               	xorlw	1	; case 11
  6919  09A4  1903               	skipnz
  6920  09A5  296D               	goto	l3834
  6921  09A6  3A07               	xorlw	7	; case 12
  6922  09A7  1903               	skipnz
  6923  09A8  296F               	goto	l3840
  6924  09A9  3A01               	xorlw	1	; case 13
  6925  09AA  1903               	skipnz
  6926  09AB  2971               	goto	l3846
  6927  09AC  3A03               	xorlw	3	; case 14
  6928  09AD  1903               	skipnz
  6929  09AE  2973               	goto	l3852
  6930  09AF  3A01               	xorlw	1	; case 15
  6931  09B0  1903               	skipnz
  6932  09B1  2975               	goto	l3858
  6933  09B2  2977               	goto	l3864
  6934  09B3                     l159:	
  6935  09B3  0008               	return
  6936  09B4                     __end_of_display7s:	
  6937                           
  6938                           	psect	text27
  6939  08F8                     __ptext27:	
  6940 ;; *************** function ___awmod *****************
  6941 ;; Defined at:
  6942 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  divisor         2    8[BANK0 ] int 
  6945 ;;  dividend        2   10[BANK0 ] int 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  sign            1   14[BANK0 ] unsigned char 
  6948 ;;  counter         1   13[BANK0 ] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  2    8[BANK0 ] int 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6958 ;;      Params:         0       4       0       0       0
  6959 ;;      Locals:         0       2       0       0       0
  6960 ;;      Temps:          0       1       0       0       0
  6961 ;;      Totals:         0       7       0       0       0
  6962 ;;Total ram usage:        7 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    3
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_ssd_update
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function ___awmod
  6974  08F8                     ___awmod:	
  6975  08F8                     l4002:	
  6976                           ;incstack = 0
  6977                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6978                           
  6979  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  6980  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  6981  08FA  01AE               	clrf	___awmod@sign
  6982  08FB                     l4004:	
  6983  08FB  1FAB               	btfss	___awmod@dividend+1,7
  6984  08FC  28FE               	goto	u3921
  6985  08FD  28FF               	goto	u3920
  6986  08FE                     u3921:	
  6987  08FE  2906               	goto	l4010
  6988  08FF                     u3920:	
  6989  08FF                     l4006:	
  6990  08FF  09AA               	comf	___awmod@dividend,f
  6991  0900  09AB               	comf	___awmod@dividend+1,f
  6992  0901  0AAA               	incf	___awmod@dividend,f
  6993  0902  1903               	skipnz
  6994  0903  0AAB               	incf	___awmod@dividend+1,f
  6995  0904                     l4008:	
  6996  0904  01AE               	clrf	___awmod@sign
  6997  0905  0AAE               	incf	___awmod@sign,f
  6998  0906                     l4010:	
  6999  0906  1FA9               	btfss	___awmod@divisor+1,7
  7000  0907  2909               	goto	u3931
  7001  0908  290A               	goto	u3930
  7002  0909                     u3931:	
  7003  0909  290F               	goto	l4014
  7004  090A                     u3930:	
  7005  090A                     l4012:	
  7006  090A  09A8               	comf	___awmod@divisor,f
  7007  090B  09A9               	comf	___awmod@divisor+1,f
  7008  090C  0AA8               	incf	___awmod@divisor,f
  7009  090D  1903               	skipnz
  7010  090E  0AA9               	incf	___awmod@divisor+1,f
  7011  090F                     l4014:	
  7012  090F  0828               	movf	___awmod@divisor,w
  7013  0910  0429               	iorwf	___awmod@divisor+1,w
  7014  0911  1903               	btfsc	3,2
  7015  0912  2914               	goto	u3941
  7016  0913  2915               	goto	u3940
  7017  0914                     u3941:	
  7018  0914  2944               	goto	l4032
  7019  0915                     u3940:	
  7020  0915                     l4016:	
  7021  0915  01AD               	clrf	___awmod@counter
  7022  0916  0AAD               	incf	___awmod@counter,f
  7023  0917  2923               	goto	l4022
  7024  0918                     l4018:	
  7025  0918  3001               	movlw	1
  7026  0919                     u3955:	
  7027  0919  1003               	clrc
  7028  091A  0DA8               	rlf	___awmod@divisor,f
  7029  091B  0DA9               	rlf	___awmod@divisor+1,f
  7030  091C  3EFF               	addlw	-1
  7031  091D  1D03               	skipz
  7032  091E  2919               	goto	u3955
  7033  091F                     l4020:	
  7034  091F  3001               	movlw	1
  7035  0920  00AC               	movwf	??___awmod
  7036  0921  082C               	movf	??___awmod,w
  7037  0922  07AD               	addwf	___awmod@counter,f
  7038  0923                     l4022:	
  7039  0923  1FA9               	btfss	___awmod@divisor+1,7
  7040  0924  2926               	goto	u3961
  7041  0925  2927               	goto	u3960
  7042  0926                     u3961:	
  7043  0926  2918               	goto	l4018
  7044  0927                     u3960:	
  7045  0927                     l4024:	
  7046  0927  0829               	movf	___awmod@divisor+1,w
  7047  0928  022B               	subwf	___awmod@dividend+1,w
  7048  0929  1D03               	skipz
  7049  092A  292D               	goto	u3975
  7050  092B  0828               	movf	___awmod@divisor,w
  7051  092C  022A               	subwf	___awmod@dividend,w
  7052  092D                     u3975:	
  7053  092D  1C03               	skipc
  7054  092E  2930               	goto	u3971
  7055  092F  2931               	goto	u3970
  7056  0930                     u3971:	
  7057  0930  2937               	goto	l4028
  7058  0931                     u3970:	
  7059  0931                     l4026:	
  7060  0931  0828               	movf	___awmod@divisor,w
  7061  0932  02AA               	subwf	___awmod@dividend,f
  7062  0933  0829               	movf	___awmod@divisor+1,w
  7063  0934  1C03               	skipc
  7064  0935  03AB               	decf	___awmod@dividend+1,f
  7065  0936  02AB               	subwf	___awmod@dividend+1,f
  7066  0937                     l4028:	
  7067  0937  3001               	movlw	1
  7068  0938                     u3985:	
  7069  0938  1003               	clrc
  7070  0939  0CA9               	rrf	___awmod@divisor+1,f
  7071  093A  0CA8               	rrf	___awmod@divisor,f
  7072  093B  3EFF               	addlw	-1
  7073  093C  1D03               	skipz
  7074  093D  2938               	goto	u3985
  7075  093E                     l4030:	
  7076  093E  3001               	movlw	1
  7077  093F  02AD               	subwf	___awmod@counter,f
  7078  0940  1D03               	btfss	3,2
  7079  0941  2943               	goto	u3991
  7080  0942  2944               	goto	u3990
  7081  0943                     u3991:	
  7082  0943  2927               	goto	l4024
  7083  0944                     u3990:	
  7084  0944                     l4032:	
  7085  0944  082E               	movf	___awmod@sign,w
  7086  0945  1903               	btfsc	3,2
  7087  0946  2948               	goto	u4001
  7088  0947  2949               	goto	u4000
  7089  0948                     u4001:	
  7090  0948  294E               	goto	l4036
  7091  0949                     u4000:	
  7092  0949                     l4034:	
  7093  0949  09AA               	comf	___awmod@dividend,f
  7094  094A  09AB               	comf	___awmod@dividend+1,f
  7095  094B  0AAA               	incf	___awmod@dividend,f
  7096  094C  1903               	skipnz
  7097  094D  0AAB               	incf	___awmod@dividend+1,f
  7098  094E                     l4036:	
  7099  094E  082B               	movf	___awmod@dividend+1,w
  7100  094F  00A9               	movwf	?___awmod+1
  7101  0950  082A               	movf	___awmod@dividend,w
  7102  0951  00A8               	movwf	?___awmod
  7103  0952                     l676:	
  7104  0952  0008               	return
  7105  0953                     __end_of___awmod:	
  7106                           
  7107                           	psect	text28
  7108  0AE2                     __ptext28:	
  7109 ;; *************** function ___awdiv *****************
  7110 ;; Defined at:
  7111 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  divisor         2    8[BANK0 ] int 
  7114 ;;  dividend        2   10[BANK0 ] int 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  quotient        2   15[BANK0 ] int 
  7117 ;;  sign            1   14[BANK0 ] unsigned char 
  7118 ;;  counter         1   13[BANK0 ] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  2    8[BANK0 ] int 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7128 ;;      Params:         0       4       0       0       0
  7129 ;;      Locals:         0       4       0       0       0
  7130 ;;      Temps:          0       1       0       0       0
  7131 ;;      Totals:         0       9       0       0       0
  7132 ;;Total ram usage:        9 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    3
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_ssd_update
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           
  7143                           ;psect for function ___awdiv
  7144  0AE2                     ___awdiv:	
  7145  0AE2                     l3958:	
  7146                           ;incstack = 0
  7147                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7148                           
  7149  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  7150  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  7151  0AE4  01AE               	clrf	___awdiv@sign
  7152  0AE5                     l3960:	
  7153  0AE5  1FA9               	btfss	___awdiv@divisor+1,7
  7154  0AE6  2AE8               	goto	u3821
  7155  0AE7  2AE9               	goto	u3820
  7156  0AE8                     u3821:	
  7157  0AE8  2AF0               	goto	l3966
  7158  0AE9                     u3820:	
  7159  0AE9                     l3962:	
  7160  0AE9  09A8               	comf	___awdiv@divisor,f
  7161  0AEA  09A9               	comf	___awdiv@divisor+1,f
  7162  0AEB  0AA8               	incf	___awdiv@divisor,f
  7163  0AEC  1903               	skipnz
  7164  0AED  0AA9               	incf	___awdiv@divisor+1,f
  7165  0AEE                     l3964:	
  7166  0AEE  01AE               	clrf	___awdiv@sign
  7167  0AEF  0AAE               	incf	___awdiv@sign,f
  7168  0AF0                     l3966:	
  7169  0AF0  1FAB               	btfss	___awdiv@dividend+1,7
  7170  0AF1  2AF3               	goto	u3831
  7171  0AF2  2AF4               	goto	u3830
  7172  0AF3                     u3831:	
  7173  0AF3  2AFD               	goto	l3972
  7174  0AF4                     u3830:	
  7175  0AF4                     l3968:	
  7176  0AF4  09AA               	comf	___awdiv@dividend,f
  7177  0AF5  09AB               	comf	___awdiv@dividend+1,f
  7178  0AF6  0AAA               	incf	___awdiv@dividend,f
  7179  0AF7  1903               	skipnz
  7180  0AF8  0AAB               	incf	___awdiv@dividend+1,f
  7181  0AF9                     l3970:	
  7182  0AF9  3001               	movlw	1
  7183  0AFA  00AC               	movwf	??___awdiv
  7184  0AFB  082C               	movf	??___awdiv,w
  7185  0AFC  06AE               	xorwf	___awdiv@sign,f
  7186  0AFD                     l3972:	
  7187  0AFD  01AF               	clrf	___awdiv@quotient
  7188  0AFE  01B0               	clrf	___awdiv@quotient+1
  7189  0AFF                     l3974:	
  7190  0AFF  0828               	movf	___awdiv@divisor,w
  7191  0B00  0429               	iorwf	___awdiv@divisor+1,w
  7192  0B01  1903               	btfsc	3,2
  7193  0B02  2B04               	goto	u3841
  7194  0B03  2B05               	goto	u3840
  7195  0B04                     u3841:	
  7196  0B04  2B3C               	goto	l3994
  7197  0B05                     u3840:	
  7198  0B05                     l3976:	
  7199  0B05  01AD               	clrf	___awdiv@counter
  7200  0B06  0AAD               	incf	___awdiv@counter,f
  7201  0B07  2B13               	goto	l3982
  7202  0B08                     l3978:	
  7203  0B08  3001               	movlw	1
  7204  0B09                     u3855:	
  7205  0B09  1003               	clrc
  7206  0B0A  0DA8               	rlf	___awdiv@divisor,f
  7207  0B0B  0DA9               	rlf	___awdiv@divisor+1,f
  7208  0B0C  3EFF               	addlw	-1
  7209  0B0D  1D03               	skipz
  7210  0B0E  2B09               	goto	u3855
  7211  0B0F                     l3980:	
  7212  0B0F  3001               	movlw	1
  7213  0B10  00AC               	movwf	??___awdiv
  7214  0B11  082C               	movf	??___awdiv,w
  7215  0B12  07AD               	addwf	___awdiv@counter,f
  7216  0B13                     l3982:	
  7217  0B13  1FA9               	btfss	___awdiv@divisor+1,7
  7218  0B14  2B16               	goto	u3861
  7219  0B15  2B17               	goto	u3860
  7220  0B16                     u3861:	
  7221  0B16  2B08               	goto	l3978
  7222  0B17                     u3860:	
  7223  0B17                     l3984:	
  7224  0B17  3001               	movlw	1
  7225  0B18                     u3875:	
  7226  0B18  1003               	clrc
  7227  0B19  0DAF               	rlf	___awdiv@quotient,f
  7228  0B1A  0DB0               	rlf	___awdiv@quotient+1,f
  7229  0B1B  3EFF               	addlw	-1
  7230  0B1C  1D03               	skipz
  7231  0B1D  2B18               	goto	u3875
  7232  0B1E  0829               	movf	___awdiv@divisor+1,w
  7233  0B1F  022B               	subwf	___awdiv@dividend+1,w
  7234  0B20  1D03               	skipz
  7235  0B21  2B24               	goto	u3885
  7236  0B22  0828               	movf	___awdiv@divisor,w
  7237  0B23  022A               	subwf	___awdiv@dividend,w
  7238  0B24                     u3885:	
  7239  0B24  1C03               	skipc
  7240  0B25  2B27               	goto	u3881
  7241  0B26  2B28               	goto	u3880
  7242  0B27                     u3881:	
  7243  0B27  2B2F               	goto	l3990
  7244  0B28                     u3880:	
  7245  0B28                     l3986:	
  7246  0B28  0828               	movf	___awdiv@divisor,w
  7247  0B29  02AA               	subwf	___awdiv@dividend,f
  7248  0B2A  0829               	movf	___awdiv@divisor+1,w
  7249  0B2B  1C03               	skipc
  7250  0B2C  03AB               	decf	___awdiv@dividend+1,f
  7251  0B2D  02AB               	subwf	___awdiv@dividend+1,f
  7252  0B2E                     l3988:	
  7253  0B2E  142F               	bsf	___awdiv@quotient,0
  7254  0B2F                     l3990:	
  7255  0B2F  3001               	movlw	1
  7256  0B30                     u3895:	
  7257  0B30  1003               	clrc
  7258  0B31  0CA9               	rrf	___awdiv@divisor+1,f
  7259  0B32  0CA8               	rrf	___awdiv@divisor,f
  7260  0B33  3EFF               	addlw	-1
  7261  0B34  1D03               	skipz
  7262  0B35  2B30               	goto	u3895
  7263  0B36                     l3992:	
  7264  0B36  3001               	movlw	1
  7265  0B37  02AD               	subwf	___awdiv@counter,f
  7266  0B38  1D03               	btfss	3,2
  7267  0B39  2B3B               	goto	u3901
  7268  0B3A  2B3C               	goto	u3900
  7269  0B3B                     u3901:	
  7270  0B3B  2B17               	goto	l3984
  7271  0B3C                     u3900:	
  7272  0B3C                     l3994:	
  7273  0B3C  082E               	movf	___awdiv@sign,w
  7274  0B3D  1903               	btfsc	3,2
  7275  0B3E  2B40               	goto	u3911
  7276  0B3F  2B41               	goto	u3910
  7277  0B40                     u3911:	
  7278  0B40  2B46               	goto	l3998
  7279  0B41                     u3910:	
  7280  0B41                     l3996:	
  7281  0B41  09AF               	comf	___awdiv@quotient,f
  7282  0B42  09B0               	comf	___awdiv@quotient+1,f
  7283  0B43  0AAF               	incf	___awdiv@quotient,f
  7284  0B44  1903               	skipnz
  7285  0B45  0AB0               	incf	___awdiv@quotient+1,f
  7286  0B46                     l3998:	
  7287  0B46  0830               	movf	___awdiv@quotient+1,w
  7288  0B47  00A9               	movwf	?___awdiv+1
  7289  0B48  082F               	movf	___awdiv@quotient,w
  7290  0B49  00A8               	movwf	?___awdiv
  7291  0B4A                     l663:	
  7292  0B4A  0008               	return
  7293  0B4B                     __end_of___awdiv:	
  7294                           
  7295                           	psect	text29
  7296  15E7                     __ptext29:	
  7297 ;; *************** function _ssd_turn_off *****************
  7298 ;; Defined at:
  7299 ;;		line 138 in file "SSD.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7313 ;;      Params:         0       0       0       0       0
  7314 ;;      Locals:         0       0       0       0       0
  7315 ;;      Temps:          0       1       0       0       0
  7316 ;;      Totals:         0       1       0       0       0
  7317 ;;Total ram usage:        1 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    3
  7320 ;; This function calls:
  7321 ;;		Nothing
  7322 ;; This function is called by:
  7323 ;;		_ssd_blink
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           
  7328                           ;psect for function _ssd_turn_off
  7329  15E7                     _ssd_turn_off:	
  7330  15E7                     l3880:	
  7331                           ;incstack = 0
  7332                           ; Regs used in _ssd_turn_off: [wreg+status,2+status,0]
  7333                           
  7334                           
  7335                           ;SSD.c: 139:     (PORTD &= ~(255 << 0));
  7336  15E7  1283               	bcf	3,5	;RP0=0, select bank0
  7337  15E8  1303               	bcf	3,6	;RP1=0, select bank0
  7338  15E9  0188               	clrf	8	;volatile
  7339  15EA                     l3882:	
  7340                           
  7341                           ;SSD.c: 140:     (PORTA &= ~(1 << 4));
  7342  15EA  30EF               	movlw	239
  7343  15EB  00A8               	movwf	??_ssd_turn_off
  7344  15EC  0828               	movf	??_ssd_turn_off,w
  7345  15ED  0585               	andwf	5,f	;volatile
  7346  15EE                     l3884:	
  7347                           
  7348                           ;SSD.c: 141:     (PORTA &= ~(1 << 5));
  7349  15EE  30DF               	movlw	223
  7350  15EF  00A8               	movwf	??_ssd_turn_off
  7351  15F0  0828               	movf	??_ssd_turn_off,w
  7352  15F1  0585               	andwf	5,f	;volatile
  7353  15F2                     l192:	
  7354  15F2  0008               	return
  7355  15F3                     __end_of_ssd_turn_off:	
  7356                           
  7357                           	psect	text30
  7358  17CF                     __ptext30:	
  7359 ;; *************** function _EEPROM_read *****************
  7360 ;; Defined at:
  7361 ;;		line 32 in file "eeprom.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  address         2    9[BANK0 ] unsigned int 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  _x              1   12[BANK0 ] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      unsigned char 
  7368 ;; Registers used:
  7369 ;;		wreg, status,2, status,0, pclath, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7375 ;;      Params:         0       2       0       0       0
  7376 ;;      Locals:         0       1       0       0       0
  7377 ;;      Temps:          0       1       0       0       0
  7378 ;;      Totals:         0       4       0       0       0
  7379 ;;Total ram usage:        4 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:    5
  7382 ;; This function calls:
  7383 ;;		_I2C1_Rd
  7384 ;;		_I2C1_Start
  7385 ;;		_I2C1_Stop
  7386 ;;		_I2C1_Wr
  7387 ;; This function is called by:
  7388 ;;		_get_set_temp
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           
  7393                           ;psect for function _EEPROM_read
  7394  17CF                     _EEPROM_read:	
  7395  17CF                     l3746:	
  7396                           ;incstack = 0
  7397                           ; Regs used in _EEPROM_read: [wreg+status,2+status,0+pclath+cstack]
  7398                           
  7399  17CF                     l3748:	
  7400                           
  7401                           ;eeprom.c: 34:     I2C1_Start();
  7402  17CF  160A  118A  25C0  160A  118A  	fcall	_I2C1_Start
  7403  17D4                     l3750:	
  7404                           
  7405                           ;eeprom.c: 35:     I2C1_Wr(0XA2);
  7406  17D4  30A2               	movlw	162
  7407  17D5  160A  118A  263C  160A  118A  	fcall	_I2C1_Wr
  7408  17DA                     l3752:	
  7409                           
  7410                           ;eeprom.c: 36:     I2C1_Wr(address);
  7411  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  7412  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  7413  17DC  0829               	movf	EEPROM_read@address,w
  7414  17DD  160A  118A  263C  160A  118A  	fcall	_I2C1_Wr
  7415  17E2                     l3754:	
  7416                           
  7417                           ;eeprom.c: 37:     I2C1_Start();
  7418  17E2  160A  118A  25C0  160A  118A  	fcall	_I2C1_Start
  7419  17E7                     l3756:	
  7420                           
  7421                           ;eeprom.c: 38:     I2C1_Wr(0XA3);
  7422  17E7  30A3               	movlw	163
  7423  17E8  160A  118A  263C  160A  118A  	fcall	_I2C1_Wr
  7424  17ED                     l3758:	
  7425                           
  7426                           ;eeprom.c: 39:     _x = I2C1_Rd();
  7427  17ED  160A  118A  2600  160A  118A  	fcall	_I2C1_Rd
  7428  17F2  1283               	bcf	3,5	;RP0=0, select bank0
  7429  17F3  1303               	bcf	3,6	;RP1=0, select bank0
  7430  17F4  00AB               	movwf	??_EEPROM_read
  7431  17F5  082B               	movf	??_EEPROM_read,w
  7432  17F6  00AC               	movwf	EEPROM_read@_x
  7433  17F7                     l3760:	
  7434                           
  7435                           ;eeprom.c: 40:     I2C1_Stop();
  7436  17F7  160A  118A  25C9  160A  118A  	fcall	_I2C1_Stop
  7437  17FC                     l3762:	
  7438                           
  7439                           ;eeprom.c: 41:     return _x ;
  7440  17FC  1283               	bcf	3,5	;RP0=0, select bank0
  7441  17FD  1303               	bcf	3,6	;RP1=0, select bank0
  7442  17FE  082C               	movf	EEPROM_read@_x,w
  7443  17FF                     l122:	
  7444  17FF  0008               	return
  7445  1800                     __end_of_EEPROM_read:	
  7446                           
  7447                           	psect	text31
  7448  163C                     __ptext31:	
  7449 ;; *************** function _I2C1_Wr *****************
  7450 ;; Defined at:
  7451 ;;		line 51 in file "I2C_drive.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  _data           1    wreg     unsigned char 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  _data           1    8[BANK0 ] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0, pclath, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7465 ;;      Params:         0       0       0       0       0
  7466 ;;      Locals:         0       1       0       0       0
  7467 ;;      Temps:          0       0       0       0       0
  7468 ;;      Totals:         0       1       0       0       0
  7469 ;;Total ram usage:        1 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    4
  7472 ;; This function calls:
  7473 ;;		_I2C_Wait
  7474 ;; This function is called by:
  7475 ;;		_EEPROM_write
  7476 ;;		_EEPROM_read
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           
  7481                           ;psect for function _I2C1_Wr
  7482  163C                     _I2C1_Wr:	
  7483                           
  7484                           ;incstack = 0
  7485 ;; hardware stack exceeded
  7486                           ; Regs used in _I2C1_Wr: [wreg+status,2+status,0+pclath+cstack]
  7487                           ;I2C1_Wr@_data stored from wreg
  7488  163C  1283               	bcf	3,5	;RP0=0, select bank0
  7489  163D  1303               	bcf	3,6	;RP1=0, select bank0
  7490  163E  00A8               	movwf	I2C1_Wr@_data
  7491  163F                     l3684:	
  7492                           
  7493                           ;I2C_drive.c: 52:     I2C_Wait();
  7494  163F  160A  118A  25F3  160A  118A  	fcall	_I2C_Wait
  7495  1644                     l3686:	
  7496                           
  7497                           ;I2C_drive.c: 53:     SSPBUF = _data ;
  7498  1644  1283               	bcf	3,5	;RP0=0, select bank0
  7499  1645  1303               	bcf	3,6	;RP1=0, select bank0
  7500  1646  0828               	movf	I2C1_Wr@_data,w
  7501  1647  0093               	movwf	19	;volatile
  7502  1648                     l3688:	
  7503                           
  7504                           ;I2C_drive.c: 54:     I2C_Wait();
  7505  1648  160A  118A  25F3  160A  118A  	fcall	_I2C_Wait
  7506  164D                     l95:	
  7507  164D  0008               	return
  7508  164E                     __end_of_I2C1_Wr:	
  7509                           
  7510                           	psect	text32
  7511  15C9                     __ptext32:	
  7512 ;; *************** function _I2C1_Stop *****************
  7513 ;; Defined at:
  7514 ;;		line 41 in file "I2C_drive.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, pclath, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7528 ;;      Params:         0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    4
  7535 ;; This function calls:
  7536 ;;		_I2C_Wait
  7537 ;; This function is called by:
  7538 ;;		_EEPROM_write
  7539 ;;		_EEPROM_read
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           
  7544                           ;psect for function _I2C1_Stop
  7545  15C9                     _I2C1_Stop:	
  7546  15C9                     l3680:	
  7547                           ;incstack = 0
  7548 ;; hardware stack exceeded
  7549                           ; Regs used in _I2C1_Stop: [wreg+status,2+status,0+pclath+cstack]
  7550                           
  7551                           
  7552                           ;I2C_drive.c: 42:     I2C_Wait();
  7553  15C9  160A  118A  25F3  160A  118A  	fcall	_I2C_Wait
  7554  15CE                     l3682:	
  7555                           
  7556                           ;I2C_drive.c: 43:     (SSPCON2 |= (1 << 2));
  7557  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  7558  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  7559  15D0  1511               	bsf	17,2	;volatile
  7560  15D1                     l92:	
  7561  15D1  0008               	return
  7562  15D2                     __end_of_I2C1_Stop:	
  7563                           
  7564                           	psect	text33
  7565  15C0                     __ptext33:	
  7566 ;; *************** function _I2C1_Start *****************
  7567 ;; Defined at:
  7568 ;;		line 31 in file "I2C_drive.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      void 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2, status,0, pclath, cstack
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7582 ;;      Params:         0       0       0       0       0
  7583 ;;      Locals:         0       0       0       0       0
  7584 ;;      Temps:          0       0       0       0       0
  7585 ;;      Totals:         0       0       0       0       0
  7586 ;;Total ram usage:        0 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    4
  7589 ;; This function calls:
  7590 ;;		_I2C_Wait
  7591 ;; This function is called by:
  7592 ;;		_EEPROM_write
  7593 ;;		_EEPROM_read
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           
  7598                           ;psect for function _I2C1_Start
  7599  15C0                     _I2C1_Start:	
  7600  15C0                     l3676:	
  7601                           ;incstack = 0
  7602 ;; hardware stack exceeded
  7603                           ; Regs used in _I2C1_Start: [wreg+status,2+status,0+pclath+cstack]
  7604                           
  7605                           
  7606                           ;I2C_drive.c: 32:     I2C_Wait();
  7607  15C0  160A  118A  25F3  160A  118A  	fcall	_I2C_Wait
  7608  15C5                     l3678:	
  7609                           
  7610                           ;I2C_drive.c: 33:     (SSPCON2 |= (1 << 0));
  7611  15C5  1683               	bsf	3,5	;RP0=1, select bank1
  7612  15C6  1303               	bcf	3,6	;RP1=0, select bank1
  7613  15C7  1411               	bsf	17,0	;volatile
  7614  15C8                     l89:	
  7615  15C8  0008               	return
  7616  15C9                     __end_of_I2C1_Start:	
  7617                           
  7618                           	psect	text34
  7619  15F3                     __ptext34:	
  7620 ;; *************** function _I2C_Wait *****************
  7621 ;; Defined at:
  7622 ;;		line 8 in file "I2C_drive.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;		None
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  1    wreg      void 
  7629 ;; Registers used:
  7630 ;;		wreg, status,2
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7636 ;;      Params:         0       0       0       0       0
  7637 ;;      Locals:         0       0       0       0       0
  7638 ;;      Temps:          0       0       0       0       0
  7639 ;;      Totals:         0       0       0       0       0
  7640 ;;Total ram usage:        0 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    3
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_I2C1_Start
  7647 ;;		_I2C1_Stop
  7648 ;;		_I2C1_Wr
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _I2C_Wait
  7654  15F3                     _I2C_Wait:	
  7655  15F3                     l3672:	
  7656                           ;incstack = 0
  7657 ;; hardware stack exceeded
  7658                           ; Regs used in _I2C_Wait: [wreg+status,2]
  7659                           
  7660  15F3                     l80:	
  7661                           ;I2C_drive.c: 9:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7662                           
  7663  15F3  1683               	bsf	3,5	;RP0=1, select bank1
  7664  15F4  1303               	bcf	3,6	;RP1=0, select bank1
  7665  15F5  1914               	btfsc	20,2	;volatile
  7666  15F6  2DF8               	goto	u3571
  7667  15F7  2DF9               	goto	u3570
  7668  15F8                     u3571:	
  7669  15F8  2DF3               	goto	l80
  7670  15F9                     u3570:	
  7671  15F9                     l3674:	
  7672  15F9  0811               	movf	17,w	;volatile
  7673  15FA  391F               	andlw	31
  7674  15FB  1D03               	btfss	3,2
  7675  15FC  2DFE               	goto	u3581
  7676  15FD  2DFF               	goto	u3580
  7677  15FE                     u3581:	
  7678  15FE  2DF3               	goto	l80
  7679  15FF                     u3580:	
  7680  15FF                     l83:	
  7681  15FF  0008               	return
  7682  1600                     __end_of_I2C_Wait:	
  7683                           
  7684                           	psect	text35
  7685  1600                     __ptext35:	
  7686 ;; *************** function _I2C1_Rd *****************
  7687 ;; Defined at:
  7688 ;;		line 62 in file "I2C_drive.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;		None
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      unsigned char 
  7695 ;; Registers used:
  7696 ;;		wreg
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7702 ;;      Params:         0       0       0       0       0
  7703 ;;      Locals:         0       0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0
  7705 ;;      Totals:         0       0       0       0       0
  7706 ;;Total ram usage:        0 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; Hardware stack levels required when called:    3
  7709 ;; This function calls:
  7710 ;;		Nothing
  7711 ;; This function is called by:
  7712 ;;		_EEPROM_read
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           
  7717                           ;psect for function _I2C1_Rd
  7718  1600                     _I2C1_Rd:	
  7719  1600                     l3690:	
  7720                           ;incstack = 0
  7721                           ; Regs used in _I2C1_Rd: [wreg]
  7722                           
  7723                           
  7724                           ;I2C_drive.c: 63:     SSPIF = 0;
  7725  1600  1283               	bcf	3,5	;RP0=0, select bank0
  7726  1601  1303               	bcf	3,6	;RP1=0, select bank0
  7727  1602  118C               	bcf	12,3	;volatile
  7728                           
  7729                           ;I2C_drive.c: 64:     (SSPCON2 |= (1 << 3));
  7730  1603  1683               	bsf	3,5	;RP0=1, select bank1
  7731  1604  1303               	bcf	3,6	;RP1=0, select bank1
  7732  1605  1591               	bsf	17,3	;volatile
  7733  1606                     l98:	
  7734                           ;I2C_drive.c: 65:     while(!SSPIF);
  7735                           
  7736  1606  1283               	bcf	3,5	;RP0=0, select bank0
  7737  1607  1D8C               	btfss	12,3	;volatile
  7738  1608  2E0A               	goto	u3591
  7739  1609  2E0B               	goto	u3590
  7740  160A                     u3591:	
  7741  160A  2E06               	goto	l98
  7742  160B                     u3590:	
  7743  160B                     l100:	
  7744                           
  7745                           ;I2C_drive.c: 66:     SSPIF = 0;
  7746  160B  118C               	bcf	12,3	;volatile
  7747  160C                     l3692:	
  7748                           
  7749                           ;I2C_drive.c: 67:     return SSPBUF;
  7750  160C  0813               	movf	19,w	;volatile
  7751  160D                     l101:	
  7752  160D  0008               	return
  7753  160E                     __end_of_I2C1_Rd:	
  7754                           
  7755                           	psect	text36
  7756  0003                     __ptext36:	
  7757 ;; *************** function _SCH_Report_Status *****************
  7758 ;; Defined at:
  7759 ;;		line 248 in file "Sch_16f.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		None
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7773 ;;      Params:         0       0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0
  7776 ;;      Totals:         0       0       0       0       0
  7777 ;;Total ram usage:        0 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:    3
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_SCH_Dispatch_Tasks
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           
  7788                           ;psect for function _SCH_Report_Status
  7789  0003                     _SCH_Report_Status:	
  7790  0003                     l424:	
  7791                           ;incstack = 0
  7792                           ; Regs used in _SCH_Report_Status: []
  7793                           
  7794  0003  0008               	return
  7795  0004                     __end_of_SCH_Report_Status:	
  7796                           
  7797                           	psect	text37
  7798  15B2                     __ptext37:	
  7799 ;; *************** function _SCH_Go_To_Sleep *****************
  7800 ;; Defined at:
  7801 ;;		line 179 in file "Sch_16f.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;		None
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		None
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7815 ;;      Params:         0       0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    3
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_SCH_Dispatch_Tasks
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           
  7830                           ;psect for function _SCH_Go_To_Sleep
  7831  15B2                     _SCH_Go_To_Sleep:	
  7832  15B2                     l4586:	
  7833                           ;incstack = 0
  7834                           ; Regs used in _SCH_Go_To_Sleep: []
  7835                           
  7836  15B2  0063               	sleep	;# 
  7837  15B3                     l409:	
  7838  15B3  0008               	return
  7839  15B4                     __end_of_SCH_Go_To_Sleep:	
  7840                           
  7841                           	psect	text38
  7842  09B4                     __ptext38:	
  7843 ;; *************** function _SCH_Delete_Task *****************
  7844 ;; Defined at:
  7845 ;;		line 221 in file "Sch_16f.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  TASK_INDEX      1    wreg     const unsigned char 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  TASK_INDEX      1   14[BANK0 ] const unsigned char 
  7850 ;;  Return_code     1    0        unsigned char 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      unsigned char 
  7853 ;; Registers used:
  7854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7860 ;;      Params:         0       0       0       0       0
  7861 ;;      Locals:         0       2       0       0       0
  7862 ;;      Temps:          0       1       0       0       0
  7863 ;;      Totals:         0       3       0       0       0
  7864 ;;Total ram usage:        3 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    4
  7867 ;; This function calls:
  7868 ;;		___bmul
  7869 ;; This function is called by:
  7870 ;;		_SCH_Init
  7871 ;;		_SCH_Dispatch_Tasks
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           
  7876                           ;psect for function _SCH_Delete_Task
  7877  09B4                     _SCH_Delete_Task:	
  7878                           
  7879                           ;incstack = 0
  7880                           ; Regs used in _SCH_Delete_Task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7881                           ;SCH_Delete_Task@TASK_INDEX stored from wreg
  7882  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7883  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7884  09B6  00AE               	movwf	SCH_Delete_Task@TASK_INDEX
  7885  09B7                     l4568:	
  7886                           
  7887                           ;Sch_16f.c: 221: tByte SCH_Delete_Task(const tByte TASK_INDEX);Sch_16f.c: 222: {;Sch_16f
      +                          .c: 223:     tByte Return_code;;Sch_16f.c: 224:     if (SCH_tasks_G[TASK_INDEX].pTask ==
      +                           0)
  7888  09B7  3006               	movlw	6
  7889  09B8  00AC               	movwf	??_SCH_Delete_Task
  7890  09B9  082C               	movf	??_SCH_Delete_Task,w
  7891  09BA  00A8               	movwf	___bmul@multiplicand
  7892  09BB  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7893  09BC  160A  118A  2678  120A  158A  	fcall	___bmul
  7894  09C1  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  7895  09C2  0084               	movwf	4
  7896  09C3  1383               	bcf	3,7	;select IRP bank1
  7897  09C4  0800               	movf	0,w
  7898  09C5  1D03               	btfss	3,2
  7899  09C6  29C8               	goto	u5101
  7900  09C7  29C9               	goto	u5100
  7901  09C8                     u5101:	
  7902  09C8  29D2               	goto	l4574
  7903  09C9                     u5100:	
  7904  09C9                     l4570:	
  7905                           
  7906                           ;Sch_16f.c: 225:     {;Sch_16f.c: 229:         Error_code_G = (2);
  7907  09C9  3002               	movlw	2
  7908  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  7909  09CB  1303               	bcf	3,6	;RP1=0, select bank0
  7910  09CC  00AC               	movwf	??_SCH_Delete_Task
  7911  09CD  082C               	movf	??_SCH_Delete_Task,w
  7912  09CE  1683               	bsf	3,5	;RP0=1, select bank1
  7913  09CF  1303               	bcf	3,6	;RP1=0, select bank1
  7914  09D0  00E8               	movwf	_Error_code_G^(0+128)
  7915  09D1                     l4572:	
  7916                           
  7917                           ;Sch_16f.c: 231:     }
  7918  09D1  29D2               	goto	l4576
  7919  09D2                     l4574:	
  7920  09D2                     l4576:	
  7921                           
  7922                           ;Sch_16f.c: 236:     SCH_tasks_G[TASK_INDEX].pTask = 0x0000;
  7923  09D2  3006               	movlw	6
  7924  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  7925  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  7926  09D5  00AC               	movwf	??_SCH_Delete_Task
  7927  09D6  082C               	movf	??_SCH_Delete_Task,w
  7928  09D7  00A8               	movwf	___bmul@multiplicand
  7929  09D8  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7930  09D9  160A  118A  2678  120A  158A  	fcall	___bmul
  7931  09DE  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  7932  09DF  0084               	movwf	4
  7933  09E0  1383               	bcf	3,7	;select IRP bank1
  7934  09E1  0180               	clrf	0
  7935  09E2                     l4578:	
  7936                           
  7937                           ;Sch_16f.c: 237:     SCH_tasks_G[TASK_INDEX].Delay = 0;
  7938  09E2  3006               	movlw	6
  7939  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  7940  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  7941  09E5  00AC               	movwf	??_SCH_Delete_Task
  7942  09E6  082C               	movf	??_SCH_Delete_Task,w
  7943  09E7  00A8               	movwf	___bmul@multiplicand
  7944  09E8  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7945  09E9  160A  118A  2678  120A  158A  	fcall	___bmul
  7946  09EE  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  7947  09EF  0084               	movwf	4
  7948  09F0  1383               	bcf	3,7	;select IRP bank1
  7949  09F1  0180               	clrf	0
  7950  09F2  0A84               	incf	4,f
  7951  09F3  0180               	clrf	0
  7952  09F4                     l4580:	
  7953                           
  7954                           ;Sch_16f.c: 238:     SCH_tasks_G[TASK_INDEX].Period = 0;
  7955  09F4  3006               	movlw	6
  7956  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  7957  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  7958  09F7  00AC               	movwf	??_SCH_Delete_Task
  7959  09F8  082C               	movf	??_SCH_Delete_Task,w
  7960  09F9  00A8               	movwf	___bmul@multiplicand
  7961  09FA  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7962  09FB  160A  118A  2678  120A  158A  	fcall	___bmul
  7963  0A00  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  7964  0A01  0084               	movwf	4
  7965  0A02  1383               	bcf	3,7	;select IRP bank1
  7966  0A03  0180               	clrf	0
  7967  0A04  0A84               	incf	4,f
  7968  0A05  0180               	clrf	0
  7969  0A06                     l4582:	
  7970                           
  7971                           ;Sch_16f.c: 239:     SCH_tasks_G[TASK_INDEX].RunMe = 0;
  7972  0A06  3006               	movlw	6
  7973  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  7974  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  7975  0A09  00AC               	movwf	??_SCH_Delete_Task
  7976  0A0A  082C               	movf	??_SCH_Delete_Task,w
  7977  0A0B  00A8               	movwf	___bmul@multiplicand
  7978  0A0C  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7979  0A0D  160A  118A  2678  120A  158A  	fcall	___bmul
  7980  0A12  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  7981  0A13  0084               	movwf	4
  7982  0A14  1383               	bcf	3,7	;select IRP bank1
  7983  0A15  0180               	clrf	0
  7984  0A16                     l421:	
  7985  0A16  0008               	return
  7986  0A17                     __end_of_SCH_Delete_Task:	
  7987                           
  7988                           	psect	text39
  7989  0B4B                     __ptext39:	
  7990 ;; *************** function _SCH_Add_Task *****************
  7991 ;; Defined at:
  7992 ;;		line 146 in file "Sch_16f.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  pFunction       1    wreg     PTR FTN()void 
  7995 ;;		 -> ssd_blink(1), switch_scan(1), temp_set(1), led(1), 
  7996 ;;		 -> ssd_update(1), temp_sensor_read(1), get_set_temp(1), 
  7997 ;;  DELAY           2   12[BANK0 ] const unsigned int 
  7998 ;;  PERIOD          2   14[BANK0 ] const unsigned int 
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;  pFunction       1   18[BANK0 ] PTR FTN()void 
  8001 ;;		 -> ssd_blink(1), switch_scan(1), temp_set(1), led(1), 
  8002 ;;		 -> ssd_update(1), temp_sensor_read(1), get_set_temp(1), 
  8003 ;;  Index           1   19[BANK0 ] unsigned char 
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  1    wreg      unsigned char 
  8006 ;; Registers used:
  8007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8013 ;;      Params:         0       4       0       0       0
  8014 ;;      Locals:         0       2       0       0       0
  8015 ;;      Temps:          0       2       0       0       0
  8016 ;;      Totals:         0       8       0       0       0
  8017 ;;Total ram usage:        8 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:    4
  8020 ;; This function calls:
  8021 ;;		___bmul
  8022 ;; This function is called by:
  8023 ;;		_main
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           
  8028                           ;psect for function _SCH_Add_Task
  8029  0B4B                     _SCH_Add_Task:	
  8030                           
  8031                           ;incstack = 0
  8032                           ; Regs used in _SCH_Add_Task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8033                           ;SCH_Add_Task@pFunction stored from wreg
  8034  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  8035  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  8036  0B4D  00B2               	movwf	SCH_Add_Task@pFunction
  8037  0B4E                     l4618:	
  8038                           
  8039                           ;Sch_16f.c: 146: tByte SCH_Add_Task(void (* pFunction)(),;Sch_16f.c: 147:     const tWor
      +                          d DELAY,;Sch_16f.c: 148:     const tWord PERIOD);Sch_16f.c: 149:     {;Sch_16f.c: 150:  
      +                             tByte Index = 0;
  8040  0B4E  01B3               	clrf	SCH_Add_Task@Index
  8041                           
  8042                           ;Sch_16f.c: 152:     while ((SCH_tasks_G[Index].pTask != 0) && (Index < (7)))
  8043  0B4F  2B54               	goto	l4622
  8044  0B50                     l4620:	
  8045                           
  8046                           ;Sch_16f.c: 153:     {;Sch_16f.c: 154:         Index++;
  8047  0B50  3001               	movlw	1
  8048  0B51  00B0               	movwf	??_SCH_Add_Task
  8049  0B52  0830               	movf	??_SCH_Add_Task,w
  8050  0B53  07B3               	addwf	SCH_Add_Task@Index,f
  8051  0B54                     l4622:	
  8052                           
  8053                           ;Sch_16f.c: 152:     while ((SCH_tasks_G[Index].pTask != 0) && (Index < (7)))
  8054  0B54  3006               	movlw	6
  8055  0B55  00B0               	movwf	??_SCH_Add_Task
  8056  0B56  0830               	movf	??_SCH_Add_Task,w
  8057  0B57  00A8               	movwf	___bmul@multiplicand
  8058  0B58  0833               	movf	SCH_Add_Task@Index,w
  8059  0B59  160A  118A  2678  120A  158A  	fcall	___bmul
  8060  0B5E  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  8061  0B5F  0084               	movwf	4
  8062  0B60  1383               	bcf	3,7	;select IRP bank1
  8063  0B61  0800               	movf	0,w
  8064  0B62  1903               	btfsc	3,2
  8065  0B63  2B65               	goto	u5121
  8066  0B64  2B66               	goto	u5120
  8067  0B65                     u5121:	
  8068  0B65  2B6E               	goto	l4626
  8069  0B66                     u5120:	
  8070  0B66                     l4624:	
  8071  0B66  3007               	movlw	7
  8072  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  8073  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  8074  0B69  0233               	subwf	SCH_Add_Task@Index,w
  8075  0B6A  1C03               	skipc
  8076  0B6B  2B6D               	goto	u5131
  8077  0B6C  2B6E               	goto	u5130
  8078  0B6D                     u5131:	
  8079  0B6D  2B50               	goto	l4620
  8080  0B6E                     u5130:	
  8081  0B6E                     l4626:	
  8082                           
  8083                           ;Sch_16f.c: 157:     if (Index == (7))
  8084  0B6E  3007               	movlw	7
  8085  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  8086  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  8087  0B71  0633               	xorwf	SCH_Add_Task@Index,w
  8088  0B72  1D03               	btfss	3,2
  8089  0B73  2B75               	goto	u5141
  8090  0B74  2B76               	goto	u5140
  8091  0B75                     u5141:	
  8092  0B75  2B77               	goto	l4630
  8093  0B76                     u5140:	
  8094  0B76  2BC0               	goto	l406
  8095  0B77                     l4630:	
  8096                           
  8097                           ;Sch_16f.c: 167:     SCH_tasks_G[Index].pTask = pFunction;
  8098  0B77  0832               	movf	SCH_Add_Task@pFunction,w
  8099  0B78  00B0               	movwf	??_SCH_Add_Task
  8100  0B79  3006               	movlw	6
  8101  0B7A  00B1               	movwf	??_SCH_Add_Task+1
  8102  0B7B  0831               	movf	??_SCH_Add_Task+1,w
  8103  0B7C  00A8               	movwf	___bmul@multiplicand
  8104  0B7D  0833               	movf	SCH_Add_Task@Index,w
  8105  0B7E  160A  118A  2678  120A  158A  	fcall	___bmul
  8106  0B83  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  8107  0B84  0084               	movwf	4
  8108  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  8109  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  8110  0B87  0830               	movf	??_SCH_Add_Task,w
  8111  0B88  1383               	bcf	3,7	;select IRP bank1
  8112  0B89  0080               	movwf	0
  8113                           
  8114                           ;Sch_16f.c: 168:     SCH_tasks_G[Index].Delay = DELAY;
  8115  0B8A  3006               	movlw	6
  8116  0B8B  00B0               	movwf	??_SCH_Add_Task
  8117  0B8C  0830               	movf	??_SCH_Add_Task,w
  8118  0B8D  00A8               	movwf	___bmul@multiplicand
  8119  0B8E  0833               	movf	SCH_Add_Task@Index,w
  8120  0B8F  160A  118A  2678  120A  158A  	fcall	___bmul
  8121  0B94  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  8122  0B95  0084               	movwf	4
  8123  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  8124  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  8125  0B98  082C               	movf	SCH_Add_Task@DELAY,w
  8126  0B99  1383               	bcf	3,7	;select IRP bank1
  8127  0B9A  0080               	movwf	0
  8128  0B9B  0A84               	incf	4,f
  8129  0B9C  082D               	movf	SCH_Add_Task@DELAY+1,w
  8130  0B9D  0080               	movwf	0
  8131                           
  8132                           ;Sch_16f.c: 169:     SCH_tasks_G[Index].Period = PERIOD;
  8133  0B9E  3006               	movlw	6
  8134  0B9F  00B0               	movwf	??_SCH_Add_Task
  8135  0BA0  0830               	movf	??_SCH_Add_Task,w
  8136  0BA1  00A8               	movwf	___bmul@multiplicand
  8137  0BA2  0833               	movf	SCH_Add_Task@Index,w
  8138  0BA3  160A  118A  2678  120A  158A  	fcall	___bmul
  8139  0BA8  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  8140  0BA9  0084               	movwf	4
  8141  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  8142  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  8143  0BAC  082E               	movf	SCH_Add_Task@PERIOD,w
  8144  0BAD  1383               	bcf	3,7	;select IRP bank1
  8145  0BAE  0080               	movwf	0
  8146  0BAF  0A84               	incf	4,f
  8147  0BB0  082F               	movf	SCH_Add_Task@PERIOD+1,w
  8148  0BB1  0080               	movwf	0
  8149                           
  8150                           ;Sch_16f.c: 170:     SCH_tasks_G[Index].RunMe = 0;
  8151  0BB2  3006               	movlw	6
  8152  0BB3  00B0               	movwf	??_SCH_Add_Task
  8153  0BB4  0830               	movf	??_SCH_Add_Task,w
  8154  0BB5  00A8               	movwf	___bmul@multiplicand
  8155  0BB6  0833               	movf	SCH_Add_Task@Index,w
  8156  0BB7  160A  118A  2678  120A  158A  	fcall	___bmul
  8157  0BBC  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  8158  0BBD  0084               	movwf	4
  8159  0BBE  1383               	bcf	3,7	;select IRP bank1
  8160  0BBF  0180               	clrf	0
  8161  0BC0                     l406:	
  8162  0BC0  0008               	return
  8163  0BC1                     __end_of_SCH_Add_Task:	
  8164                           
  8165                           	psect	text40
  8166  1678                     __ptext40:	
  8167 ;; *************** function ___bmul *****************
  8168 ;; Defined at:
  8169 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  multiplier      1    wreg     unsigned char 
  8172 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  multiplier      1   11[BANK0 ] unsigned char 
  8175 ;;  product         1   10[BANK0 ] unsigned char 
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  1    wreg      unsigned char 
  8178 ;; Registers used:
  8179 ;;		wreg, status,2, status,0
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8185 ;;      Params:         0       1       0       0       0
  8186 ;;      Locals:         0       2       0       0       0
  8187 ;;      Temps:          0       1       0       0       0
  8188 ;;      Totals:         0       4       0       0       0
  8189 ;;Total ram usage:        4 bytes
  8190 ;; Hardware stack levels used:    1
  8191 ;; Hardware stack levels required when called:    3
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		_switch_scan
  8196 ;;		_SCH_Update
  8197 ;;		_SCH_Stop
  8198 ;;		_SCH_Add_Task
  8199 ;;		_SCH_Dispatch_Tasks
  8200 ;;		_SCH_Delete_Task
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           
  8205                           ;psect for function ___bmul
  8206  1678                     ___bmul:	
  8207                           
  8208                           ;incstack = 0
  8209                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8210                           ;___bmul@multiplier stored from wreg
  8211  1678  1283               	bcf	3,5	;RP0=0, select bank0
  8212  1679  1303               	bcf	3,6	;RP1=0, select bank0
  8213  167A  00AB               	movwf	___bmul@multiplier
  8214  167B                     l3944:	
  8215  167B  01AA               	clrf	___bmul@product
  8216  167C                     l3946:	
  8217  167C  1C2B               	btfss	___bmul@multiplier,0
  8218  167D  2E7F               	goto	u3801
  8219  167E  2E80               	goto	u3800
  8220  167F                     u3801:	
  8221  167F  2E84               	goto	l3950
  8222  1680                     u3800:	
  8223  1680                     l3948:	
  8224  1680  0828               	movf	___bmul@multiplicand,w
  8225  1681  00A9               	movwf	??___bmul
  8226  1682  0829               	movf	??___bmul,w
  8227  1683  07AA               	addwf	___bmul@product,f
  8228  1684                     l3950:	
  8229  1684  1003               	clrc
  8230  1685  0DA8               	rlf	___bmul@multiplicand,f
  8231  1686                     l3952:	
  8232  1686  1003               	clrc
  8233  1687  0CAB               	rrf	___bmul@multiplier,f
  8234  1688  082B               	movf	___bmul@multiplier,w
  8235  1689  1D03               	btfss	3,2
  8236  168A  2E8C               	goto	u3811
  8237  168B  2E8D               	goto	u3810
  8238  168C                     u3811:	
  8239  168C  2E7C               	goto	l3946
  8240  168D                     u3810:	
  8241  168D                     l3954:	
  8242  168D  082A               	movf	___bmul@product,w
  8243  168E                     l536:	
  8244  168E  0008               	return
  8245  168F                     __end_of___bmul:	
  8246                           
  8247                           	psect	text41
  8248  162C                     __ptext41:	
  8249 ;; *************** function _EEPROM_init *****************
  8250 ;; Defined at:
  8251 ;;		line 9 in file "eeprom.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, status,2, status,0, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8265 ;;      Params:         0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0
  8267 ;;      Temps:          0       0       0       0       0
  8268 ;;      Totals:         0       0       0       0       0
  8269 ;;Total ram usage:        0 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    5
  8272 ;; This function calls:
  8273 ;;		_I2C1_Init
  8274 ;; This function is called by:
  8275 ;;		_main
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           
  8280                           ;psect for function _EEPROM_init
  8281  162C                     _EEPROM_init:	
  8282  162C                     l3332:	
  8283                           ;incstack = 0
  8284                           ; Regs used in _EEPROM_init: [wreg+status,2+status,0+pclath+cstack]
  8285                           
  8286                           
  8287                           ;eeprom.c: 10:      I2C1_Init(100000);
  8288  162C  3000               	movlw	0
  8289  162D  1283               	bcf	3,5	;RP0=0, select bank0
  8290  162E  1303               	bcf	3,6	;RP1=0, select bank0
  8291  162F  00B9               	movwf	I2C1_Init@freq+3
  8292  1630  3001               	movlw	1
  8293  1631  00B8               	movwf	I2C1_Init@freq+2
  8294  1632  3086               	movlw	134
  8295  1633  00B7               	movwf	I2C1_Init@freq+1
  8296  1634  30A0               	movlw	160
  8297  1635  00B6               	movwf	I2C1_Init@freq
  8298  1636  120A  158A  200A  160A  118A  	fcall	_I2C1_Init
  8299  163B                     l116:	
  8300  163B  0008               	return
  8301  163C                     __end_of_EEPROM_init:	
  8302                           
  8303                           	psect	text42
  8304  080A                     __ptext42:	
  8305 ;; *************** function _I2C1_Init *****************
  8306 ;; Defined at:
  8307 ;;		line 17 in file "I2C_drive.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  freq            4   22[BANK0 ] unsigned long 
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;		None
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  1    wreg      void 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0, pclath, cstack
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8321 ;;      Params:         0       4       0       0       0
  8322 ;;      Locals:         0       0       0       0       0
  8323 ;;      Temps:          0       4       0       0       0
  8324 ;;      Totals:         0       8       0       0       0
  8325 ;;Total ram usage:        8 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    4
  8328 ;; This function calls:
  8329 ;;		___lldiv
  8330 ;; This function is called by:
  8331 ;;		_EEPROM_init
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           
  8336                           ;psect for function _I2C1_Init
  8337  080A                     _I2C1_Init:	
  8338  080A                     l3104:	
  8339                           ;incstack = 0
  8340                           ; Regs used in _I2C1_Init: [wreg+status,2+status,0+pclath+cstack]
  8341                           
  8342                           
  8343                           ;I2C_drive.c: 18:     (SSPCON |= (1 << 5));
  8344  080A  1283               	bcf	3,5	;RP0=0, select bank0
  8345  080B  1303               	bcf	3,6	;RP1=0, select bank0
  8346  080C  1694               	bsf	20,5	;volatile
  8347                           
  8348                           ;I2C_drive.c: 19:     (SSPCON |= (1 << 3));
  8349  080D  1594               	bsf	20,3	;volatile
  8350  080E                     l3106:	
  8351                           
  8352                           ;I2C_drive.c: 20:     SSPADD = (8000000 / (freq * 4) ) - 1 ;
  8353  080E  0836               	movf	I2C1_Init@freq,w
  8354  080F  00BA               	movwf	??_I2C1_Init
  8355  0810  0837               	movf	I2C1_Init@freq+1,w
  8356  0811  00BB               	movwf	??_I2C1_Init+1
  8357  0812  0838               	movf	I2C1_Init@freq+2,w
  8358  0813  00BC               	movwf	??_I2C1_Init+2
  8359  0814  0839               	movf	I2C1_Init@freq+3,w
  8360  0815  00BD               	movwf	??_I2C1_Init+3
  8361  0816  3002               	movlw	2
  8362  0817                     u3205:	
  8363  0817  1003               	clrc
  8364  0818  0DBA               	rlf	??_I2C1_Init,f
  8365  0819  0DBB               	rlf	??_I2C1_Init+1,f
  8366  081A  0DBC               	rlf	??_I2C1_Init+2,f
  8367  081B  0DBD               	rlf	??_I2C1_Init+3,f
  8368  081C                     u3200:	
  8369  081C  3EFF               	addlw	-1
  8370  081D  1D03               	skipz
  8371  081E  2817               	goto	u3205
  8372  081F  083D               	movf	??_I2C1_Init+3,w
  8373  0820  00AB               	movwf	___lldiv@divisor+3
  8374  0821  083C               	movf	??_I2C1_Init+2,w
  8375  0822  00AA               	movwf	___lldiv@divisor+2
  8376  0823  083B               	movf	??_I2C1_Init+1,w
  8377  0824  00A9               	movwf	___lldiv@divisor+1
  8378  0825  083A               	movf	??_I2C1_Init,w
  8379  0826  00A8               	movwf	___lldiv@divisor
  8380  0827  3000               	movlw	0
  8381  0828  00AF               	movwf	___lldiv@dividend+3
  8382  0829  307A               	movlw	122
  8383  082A  00AE               	movwf	___lldiv@dividend+2
  8384  082B  3012               	movlw	18
  8385  082C  00AD               	movwf	___lldiv@dividend+1
  8386  082D  3000               	movlw	0
  8387  082E  00AC               	movwf	___lldiv@dividend
  8388  082F  120A  158A  227A  120A  158A  	fcall	___lldiv
  8389  0834  1283               	bcf	3,5	;RP0=0, select bank0
  8390  0835  1303               	bcf	3,6	;RP1=0, select bank0
  8391  0836  0828               	movf	?___lldiv,w
  8392  0837  3EFF               	addlw	255
  8393  0838  1683               	bsf	3,5	;RP0=1, select bank1
  8394  0839  1303               	bcf	3,6	;RP1=0, select bank1
  8395  083A  0093               	movwf	19	;volatile
  8396  083B                     l3108:	
  8397                           
  8398                           ;I2C_drive.c: 22:     TRISC |= (1 << 3);
  8399  083B  1587               	bsf	7,3	;volatile
  8400  083C                     l3110:	
  8401                           
  8402                           ;I2C_drive.c: 23:     TRISC |= (1 << 4);
  8403  083C  1607               	bsf	7,4	;volatile
  8404  083D                     l86:	
  8405  083D  0008               	return
  8406  083E                     __end_of_I2C1_Init:	
  8407                           
  8408                           	psect	text43
  8409  0A7A                     __ptext43:	
  8410 ;; *************** function ___lldiv *****************
  8411 ;; Defined at:
  8412 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  divisor         4    8[BANK0 ] unsigned long 
  8415 ;;  dividend        4   12[BANK0 ] unsigned long 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  quotient        4   17[BANK0 ] unsigned long 
  8418 ;;  counter         1   21[BANK0 ] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  4    8[BANK0 ] unsigned long 
  8421 ;; Registers used:
  8422 ;;		wreg, status,2, status,0
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8428 ;;      Params:         0       8       0       0       0
  8429 ;;      Locals:         0       5       0       0       0
  8430 ;;      Temps:          0       1       0       0       0
  8431 ;;      Totals:         0      14       0       0       0
  8432 ;;Total ram usage:       14 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:    3
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		_I2C1_Init
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           
  8443                           ;psect for function ___lldiv
  8444  0A7A                     ___lldiv:	
  8445  0A7A                     l2630:	
  8446                           ;incstack = 0
  8447                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8448                           
  8449  0A7A  3000               	movlw	0
  8450  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  8451  0A7C  1303               	bcf	3,6	;RP1=0, select bank0
  8452  0A7D  00B4               	movwf	___lldiv@quotient+3
  8453  0A7E  3000               	movlw	0
  8454  0A7F  00B3               	movwf	___lldiv@quotient+2
  8455  0A80  3000               	movlw	0
  8456  0A81  00B2               	movwf	___lldiv@quotient+1
  8457  0A82  3000               	movlw	0
  8458  0A83  00B1               	movwf	___lldiv@quotient
  8459  0A84  082B               	movf	___lldiv@divisor+3,w
  8460  0A85  042A               	iorwf	___lldiv@divisor+2,w
  8461  0A86  0429               	iorwf	___lldiv@divisor+1,w
  8462  0A87  0428               	iorwf	___lldiv@divisor,w
  8463  0A88  1903               	skipnz
  8464  0A89  2A8B               	goto	u2041
  8465  0A8A  2A8C               	goto	u2040
  8466  0A8B                     u2041:	
  8467  0A8B  2AD9               	goto	l2650
  8468  0A8C                     u2040:	
  8469  0A8C                     l2632:	
  8470  0A8C  01B5               	clrf	___lldiv@counter
  8471  0A8D  0AB5               	incf	___lldiv@counter,f
  8472  0A8E  2A9C               	goto	l2636
  8473  0A8F                     l2634:	
  8474  0A8F  3001               	movlw	1
  8475  0A90  00B0               	movwf	??___lldiv
  8476  0A91                     u2055:	
  8477  0A91  1003               	clrc
  8478  0A92  0DA8               	rlf	___lldiv@divisor,f
  8479  0A93  0DA9               	rlf	___lldiv@divisor+1,f
  8480  0A94  0DAA               	rlf	___lldiv@divisor+2,f
  8481  0A95  0DAB               	rlf	___lldiv@divisor+3,f
  8482  0A96  0BB0               	decfsz	??___lldiv,f
  8483  0A97  2A91               	goto	u2055
  8484  0A98  3001               	movlw	1
  8485  0A99  00B0               	movwf	??___lldiv
  8486  0A9A  0830               	movf	??___lldiv,w
  8487  0A9B  07B5               	addwf	___lldiv@counter,f
  8488  0A9C                     l2636:	
  8489  0A9C  1FAB               	btfss	___lldiv@divisor+3,7
  8490  0A9D  2A9F               	goto	u2061
  8491  0A9E  2AA0               	goto	u2060
  8492  0A9F                     u2061:	
  8493  0A9F  2A8F               	goto	l2634
  8494  0AA0                     u2060:	
  8495  0AA0                     l2638:	
  8496  0AA0  3001               	movlw	1
  8497  0AA1  00B0               	movwf	??___lldiv
  8498  0AA2                     u2075:	
  8499  0AA2  1003               	clrc
  8500  0AA3  0DB1               	rlf	___lldiv@quotient,f
  8501  0AA4  0DB2               	rlf	___lldiv@quotient+1,f
  8502  0AA5  0DB3               	rlf	___lldiv@quotient+2,f
  8503  0AA6  0DB4               	rlf	___lldiv@quotient+3,f
  8504  0AA7  0BB0               	decfsz	??___lldiv,f
  8505  0AA8  2AA2               	goto	u2075
  8506  0AA9                     l2640:	
  8507  0AA9  082B               	movf	___lldiv@divisor+3,w
  8508  0AAA  022F               	subwf	___lldiv@dividend+3,w
  8509  0AAB  1D03               	skipz
  8510  0AAC  2AB7               	goto	u2085
  8511  0AAD  082A               	movf	___lldiv@divisor+2,w
  8512  0AAE  022E               	subwf	___lldiv@dividend+2,w
  8513  0AAF  1D03               	skipz
  8514  0AB0  2AB7               	goto	u2085
  8515  0AB1  0829               	movf	___lldiv@divisor+1,w
  8516  0AB2  022D               	subwf	___lldiv@dividend+1,w
  8517  0AB3  1D03               	skipz
  8518  0AB4  2AB7               	goto	u2085
  8519  0AB5  0828               	movf	___lldiv@divisor,w
  8520  0AB6  022C               	subwf	___lldiv@dividend,w
  8521  0AB7                     u2085:	
  8522  0AB7  1C03               	skipc
  8523  0AB8  2ABA               	goto	u2081
  8524  0AB9  2ABB               	goto	u2080
  8525  0ABA                     u2081:	
  8526  0ABA  2ACA               	goto	l2646
  8527  0ABB                     u2080:	
  8528  0ABB                     l2642:	
  8529  0ABB  0828               	movf	___lldiv@divisor,w
  8530  0ABC  02AC               	subwf	___lldiv@dividend,f
  8531  0ABD  0829               	movf	___lldiv@divisor+1,w
  8532  0ABE  1C03               	skipc
  8533  0ABF  0F29               	incfsz	___lldiv@divisor+1,w
  8534  0AC0  02AD               	subwf	___lldiv@dividend+1,f
  8535  0AC1  082A               	movf	___lldiv@divisor+2,w
  8536  0AC2  1C03               	skipc
  8537  0AC3  0F2A               	incfsz	___lldiv@divisor+2,w
  8538  0AC4  02AE               	subwf	___lldiv@dividend+2,f
  8539  0AC5  082B               	movf	___lldiv@divisor+3,w
  8540  0AC6  1C03               	skipc
  8541  0AC7  0F2B               	incfsz	___lldiv@divisor+3,w
  8542  0AC8  02AF               	subwf	___lldiv@dividend+3,f
  8543  0AC9                     l2644:	
  8544  0AC9  1431               	bsf	___lldiv@quotient,0
  8545  0ACA                     l2646:	
  8546  0ACA  3001               	movlw	1
  8547  0ACB                     u2095:	
  8548  0ACB  1003               	clrc
  8549  0ACC  0CAB               	rrf	___lldiv@divisor+3,f
  8550  0ACD  0CAA               	rrf	___lldiv@divisor+2,f
  8551  0ACE  0CA9               	rrf	___lldiv@divisor+1,f
  8552  0ACF  0CA8               	rrf	___lldiv@divisor,f
  8553  0AD0  3EFF               	addlw	-1
  8554  0AD1  1D03               	skipz
  8555  0AD2  2ACB               	goto	u2095
  8556  0AD3                     l2648:	
  8557  0AD3  3001               	movlw	1
  8558  0AD4  02B5               	subwf	___lldiv@counter,f
  8559  0AD5  1D03               	btfss	3,2
  8560  0AD6  2AD8               	goto	u2101
  8561  0AD7  2AD9               	goto	u2100
  8562  0AD8                     u2101:	
  8563  0AD8  2AA0               	goto	l2638
  8564  0AD9                     u2100:	
  8565  0AD9                     l2650:	
  8566  0AD9  0834               	movf	___lldiv@quotient+3,w
  8567  0ADA  00AB               	movwf	?___lldiv+3
  8568  0ADB  0833               	movf	___lldiv@quotient+2,w
  8569  0ADC  00AA               	movwf	?___lldiv+2
  8570  0ADD  0832               	movf	___lldiv@quotient+1,w
  8571  0ADE  00A9               	movwf	?___lldiv+1
  8572  0ADF  0831               	movf	___lldiv@quotient,w
  8573  0AE0  00A8               	movwf	?___lldiv
  8574  0AE1                     l546:	
  8575  0AE1  0008               	return
  8576  0AE2                     __end_of___lldiv:	
  8577                           
  8578                           	psect	text44
  8579  06ED                     __ptext44:	
  8580 ;; *************** function _SCH_Update *****************
  8581 ;; Defined at:
  8582 ;;		line 35 in file "Sch_16f.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;		None
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  Index           1   10[COMMON] unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8596 ;;      Params:         0       0       0       0       0
  8597 ;;      Locals:         1       0       0       0       0
  8598 ;;      Temps:          0       8       0       0       0
  8599 ;;      Totals:         1       8       0       0       0
  8600 ;;Total ram usage:        9 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:    2
  8603 ;; This function calls:
  8604 ;;		_SCH_Start
  8605 ;;		_SCH_Stop
  8606 ;;		i1___bmul
  8607 ;;		i1_ssd_turn_off
  8608 ;;		i1_temp_control_off
  8609 ;; This function is called by:
  8610 ;;		Interrupt level 1
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           
  8615                           ;psect for function _SCH_Update
  8616  06ED                     _SCH_Update:	
  8617  06ED                     i1l4700:	
  8618                           
  8619                           ;Sch_16f.c: 36:     if (PIR1 & (1 << 0)){
  8620  06ED  1C0C               	btfss	12,0	;volatile
  8621  06EE  2EF0               	goto	u519_21
  8622  06EF  2EF1               	goto	u519_20
  8623  06F0                     u519_21:	
  8624  06F0  2F9F               	goto	i1l372
  8625  06F1                     u519_20:	
  8626  06F1                     i1l4702:	
  8627                           
  8628                           ;Sch_16f.c: 38:         TMR1L = timer_value ;
  8629  06F1  087B               	movf	_timer_value,w
  8630  06F2  008E               	movwf	14	;volatile
  8631  06F3                     i1l4704:	
  8632                           
  8633                           ;Sch_16f.c: 39:         TMR1H = ( timer_value >> 8 ) ;
  8634  06F3  087C               	movf	_timer_value+1,w
  8635  06F4  008F               	movwf	15	;volatile
  8636  06F5                     i1l4706:	
  8637                           
  8638                           ;Sch_16f.c: 40:         PIR1 &= ~ (1 << 0) ;
  8639  06F5  30FE               	movlw	254
  8640  06F6  00A0               	movwf	??_SCH_Update
  8641  06F7  0820               	movf	??_SCH_Update,w
  8642  06F8  058C               	andwf	12,f	;volatile
  8643  06F9                     i1l4708:	
  8644                           
  8645                           ;Sch_16f.c: 41:         tByte Index;;Sch_16f.c: 43:         for (Index = 0; Index < (7);
      +                           Index++)
  8646  06F9  01FA               	clrf	SCH_Update@Index
  8647  06FA                     i1l4714:	
  8648                           
  8649                           ;Sch_16f.c: 44:         {;Sch_16f.c: 46:             if (SCH_tasks_G[Index].pTask)
  8650  06FA  3006               	movlw	6
  8651  06FB  00A0               	movwf	??_SCH_Update
  8652  06FC  0820               	movf	??_SCH_Update,w
  8653  06FD  00F0               	movwf	i1___bmul@multiplicand
  8654  06FE  087A               	movf	SCH_Update@Index,w
  8655  06FF  160A  118A  264E  120A  118A  	fcall	i1___bmul
  8656  0704  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  8657  0705  0084               	movwf	4
  8658  0706  1383               	bcf	3,7	;select IRP bank1
  8659  0707  0800               	movf	0,w
  8660  0708  1903               	btfsc	3,2
  8661  0709  2F0B               	goto	u520_21
  8662  070A  2F0C               	goto	u520_20
  8663  070B                     u520_21:	
  8664  070B  2F93               	goto	i1l4724
  8665  070C                     u520_20:	
  8666  070C                     i1l4716:	
  8667                           
  8668                           ;Sch_16f.c: 47:             {;Sch_16f.c: 48:                 if (SCH_tasks_G[Index].Dela
      +                          y == 0)
  8669  070C  3006               	movlw	6
  8670  070D  1283               	bcf	3,5	;RP0=0, select bank0
  8671  070E  1303               	bcf	3,6	;RP1=0, select bank0
  8672  070F  00A0               	movwf	??_SCH_Update
  8673  0710  0820               	movf	??_SCH_Update,w
  8674  0711  00F0               	movwf	i1___bmul@multiplicand
  8675  0712  087A               	movf	SCH_Update@Index,w
  8676  0713  160A  118A  264E  120A  118A  	fcall	i1___bmul
  8677  0718  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  8678  0719  0084               	movwf	4
  8679  071A  1383               	bcf	3,7	;select IRP bank1
  8680  071B  0800               	movf	0,w
  8681  071C  1283               	bcf	3,5	;RP0=0, select bank0
  8682  071D  1303               	bcf	3,6	;RP1=0, select bank0
  8683  071E  00A1               	movwf	??_SCH_Update+1
  8684  071F  0A84               	incf	4,f
  8685  0720  0800               	movf	0,w
  8686  0721  00A2               	movwf	??_SCH_Update+2
  8687  0722  0821               	movf	??_SCH_Update+1,w
  8688  0723  0422               	iorwf	??_SCH_Update+2,w
  8689  0724  1D03               	btfss	3,2
  8690  0725  2F27               	goto	u521_21
  8691  0726  2F28               	goto	u521_20
  8692  0727                     u521_21:	
  8693  0727  2F7E               	goto	i1l4722
  8694  0728                     u521_20:	
  8695  0728                     i1l4718:	
  8696                           
  8697                           ;Sch_16f.c: 49:                 {;Sch_16f.c: 51:                     SCH_tasks_G[Index].
      +                          RunMe += 1;
  8698  0728  3001               	movlw	1
  8699  0729  00A0               	movwf	??_SCH_Update
  8700  072A  3006               	movlw	6
  8701  072B  00A1               	movwf	??_SCH_Update+1
  8702  072C  0821               	movf	??_SCH_Update+1,w
  8703  072D  00F0               	movwf	i1___bmul@multiplicand
  8704  072E  087A               	movf	SCH_Update@Index,w
  8705  072F  160A  118A  264E  120A  118A  	fcall	i1___bmul
  8706  0734  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  8707  0735  0084               	movwf	4
  8708  0736  1283               	bcf	3,5	;RP0=0, select bank0
  8709  0737  1303               	bcf	3,6	;RP1=0, select bank0
  8710  0738  0820               	movf	??_SCH_Update,w
  8711  0739  1383               	bcf	3,7	;select IRP bank1
  8712  073A  0780               	addwf	0,f
  8713                           
  8714                           ;Sch_16f.c: 52:                     if (SCH_tasks_G[Index].Period)
  8715  073B  3006               	movlw	6
  8716  073C  00A0               	movwf	??_SCH_Update
  8717  073D  0820               	movf	??_SCH_Update,w
  8718  073E  00F0               	movwf	i1___bmul@multiplicand
  8719  073F  087A               	movf	SCH_Update@Index,w
  8720  0740  160A  118A  264E  120A  118A  	fcall	i1___bmul
  8721  0745  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  8722  0746  0084               	movwf	4
  8723  0747  1383               	bcf	3,7	;select IRP bank1
  8724  0748  0800               	movf	0,w
  8725  0749  1283               	bcf	3,5	;RP0=0, select bank0
  8726  074A  1303               	bcf	3,6	;RP1=0, select bank0
  8727  074B  00A1               	movwf	??_SCH_Update+1
  8728  074C  0A84               	incf	4,f
  8729  074D  0800               	movf	0,w
  8730  074E  00A2               	movwf	??_SCH_Update+2
  8731  074F  0821               	movf	??_SCH_Update+1,w
  8732  0750  0422               	iorwf	??_SCH_Update+2,w
  8733  0751  1903               	btfsc	3,2
  8734  0752  2F54               	goto	u522_21
  8735  0753  2F55               	goto	u522_20
  8736  0754                     u522_21:	
  8737  0754  2F93               	goto	i1l4724
  8738  0755                     u522_20:	
  8739  0755                     i1l4720:	
  8740                           
  8741                           ;Sch_16f.c: 53:                     {;Sch_16f.c: 55:                         SCH_tasks_G
      +                          [Index].Delay = SCH_tasks_G[Index].Period;
  8742  0755  3006               	movlw	6
  8743  0756  00A0               	movwf	??_SCH_Update
  8744  0757  0820               	movf	??_SCH_Update,w
  8745  0758  00F0               	movwf	i1___bmul@multiplicand
  8746  0759  087A               	movf	SCH_Update@Index,w
  8747  075A  160A  118A  264E  120A  118A  	fcall	i1___bmul
  8748  075F  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  8749  0760  0084               	movwf	4
  8750  0761  1383               	bcf	3,7	;select IRP bank1
  8751  0762  0800               	movf	0,w
  8752  0763  1283               	bcf	3,5	;RP0=0, select bank0
  8753  0764  1303               	bcf	3,6	;RP1=0, select bank0
  8754  0765  00A1               	movwf	??_SCH_Update+1
  8755  0766  0A84               	incf	4,f
  8756  0767  0800               	movf	0,w
  8757  0768  00A2               	movwf	??_SCH_Update+2
  8758  0769  3006               	movlw	6
  8759  076A  00A3               	movwf	??_SCH_Update+3
  8760  076B  0823               	movf	??_SCH_Update+3,w
  8761  076C  00F0               	movwf	i1___bmul@multiplicand
  8762  076D  087A               	movf	SCH_Update@Index,w
  8763  076E  160A  118A  264E  120A  118A  	fcall	i1___bmul
  8764  0773  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  8765  0774  0084               	movwf	4
  8766  0775  1283               	bcf	3,5	;RP0=0, select bank0
  8767  0776  1303               	bcf	3,6	;RP1=0, select bank0
  8768  0777  0821               	movf	??_SCH_Update+1,w
  8769  0778  1383               	bcf	3,7	;select IRP bank1
  8770  0779  0080               	movwf	0
  8771  077A  0A84               	incf	4,f
  8772  077B  0822               	movf	??_SCH_Update+2,w
  8773  077C  0080               	movwf	0
  8774  077D  2F93               	goto	i1l4724
  8775  077E                     i1l4722:	
  8776                           
  8777                           ;Sch_16f.c: 59:                 {;Sch_16f.c: 61:                     SCH_tasks_G[Index].
      +                          Delay -= (1);
  8778  077E  3006               	movlw	6
  8779  077F  00A0               	movwf	??_SCH_Update
  8780  0780  0820               	movf	??_SCH_Update,w
  8781  0781  00F0               	movwf	i1___bmul@multiplicand
  8782  0782  087A               	movf	SCH_Update@Index,w
  8783  0783  160A  118A  264E  120A  118A  	fcall	i1___bmul
  8784  0788  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  8785  0789  0084               	movwf	4
  8786  078A  3001               	movlw	1
  8787  078B  1383               	bcf	3,7	;select IRP bank1
  8788  078C  0280               	subwf	0,f
  8789  078D  0F84               	incfsz	4,f
  8790  078E  3000               	movlw	0
  8791  078F  1C03               	skipc
  8792  0790  0380               	decf	0,f
  8793  0791  0280               	subwf	0,f
  8794  0792  0384               	decf	4,f
  8795  0793                     i1l4724:	
  8796                           
  8797                           ;Sch_16f.c: 64:         }
  8798  0793  3001               	movlw	1
  8799  0794  1283               	bcf	3,5	;RP0=0, select bank0
  8800  0795  1303               	bcf	3,6	;RP1=0, select bank0
  8801  0796  00A0               	movwf	??_SCH_Update
  8802  0797  0820               	movf	??_SCH_Update,w
  8803  0798  07FA               	addwf	SCH_Update@Index,f
  8804  0799                     i1l4726:	
  8805  0799  3007               	movlw	7
  8806  079A  027A               	subwf	SCH_Update@Index,w
  8807  079B  1C03               	skipc
  8808  079C  2F9E               	goto	u523_21
  8809  079D  2F9F               	goto	u523_20
  8810  079E                     u523_21:	
  8811  079E  2EFA               	goto	i1l4714
  8812  079F                     u523_20:	
  8813  079F                     i1l372:	
  8814                           ;Sch_16f.c: 65:     }
  8815                           
  8816                           
  8817                           ;Sch_16f.c: 67:     if (INTCON & (1 << 1)){
  8818  079F  1C8B               	btfss	11,1	;volatile
  8819  07A0  2FA2               	goto	u524_21
  8820  07A1  2FA3               	goto	u524_20
  8821  07A2                     u524_21:	
  8822  07A2  2FD1               	goto	i1l384
  8823  07A3                     u524_20:	
  8824  07A3                     i1l4728:	
  8825                           
  8826                           ;Sch_16f.c: 68:         (INTCON &= ~(1 << 1));
  8827  07A3  30FD               	movlw	253
  8828  07A4  00A0               	movwf	??_SCH_Update
  8829  07A5  0820               	movf	??_SCH_Update,w
  8830  07A6  058B               	andwf	11,f	;volatile
  8831                           
  8832                           ;Sch_16f.c: 69:         switch (power_mode){
  8833  07A7  2FC1               	goto	i1l4740
  8834  07A8                     i1l381:	
  8835                           ;Sch_16f.c: 71:             case ON_STATE :
  8836                           
  8837                           
  8838                           ;Sch_16f.c: 72:                 power_mode = OFF_STATE ;
  8839  07A8  01FD               	clrf	_power_mode
  8840  07A9  0AFD               	incf	_power_mode,f
  8841  07AA                     i1l4730:	
  8842                           
  8843                           ;Sch_16f.c: 73:                 ssd_turn_off();
  8844  07AA  160A  118A  25DB  120A  118A  	fcall	i1_ssd_turn_off
  8845                           
  8846                           ;Sch_16f.c: 74:                 temp_control_off();
  8847  07AF  160A  118A  260E  120A  118A  	fcall	i1_temp_control_off
  8848  07B4                     i1l4732:	
  8849                           
  8850                           ;Sch_16f.c: 75:                 SCH_Stop();
  8851  07B4  120A  158A  2072  120A  118A  	fcall	_SCH_Stop
  8852                           
  8853                           ;Sch_16f.c: 76:                 break;
  8854  07B9  2FD1               	goto	i1l384
  8855  07BA                     i1l4734:	
  8856                           
  8857                           ;Sch_16f.c: 79:                 power_mode = ON_STATE ;
  8858  07BA  01FD               	clrf	_power_mode
  8859  07BB                     i1l4736:	
  8860                           
  8861                           ;Sch_16f.c: 80:                 SCH_Start();
  8862  07BB  160A  118A  25B4  120A  118A  	fcall	_SCH_Start
  8863                           
  8864                           ;Sch_16f.c: 81:                 break;
  8865  07C0  2FD1               	goto	i1l384
  8866  07C1                     i1l4740:	
  8867  07C1  087D               	movf	_power_mode,w
  8868  07C2  00A0               	movwf	??_SCH_Update
  8869  07C3  01A1               	clrf	??_SCH_Update+1
  8870                           
  8871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8872                           ; Switch size 1, requested type "simple"
  8873                           ; Number of cases is 1, Range of values is 0 to 0
  8874                           ; switch strategies available:
  8875                           ; Name         Instructions Cycles
  8876                           ; simple_byte            4     3 (average)
  8877                           ; direct_byte           11     8 (fixed)
  8878                           ; jumptable            260     6 (fixed)
  8879                           ;	Chosen strategy is simple_byte
  8880  07C4  0821               	movf	??_SCH_Update+1,w
  8881  07C5  3A00               	xorlw	0	; case 0
  8882  07C6  1903               	skipnz
  8883  07C7  2FC9               	goto	i1l4930
  8884  07C8  2FD1               	goto	i1l384
  8885  07C9                     i1l4930:	
  8886                           
  8887                           ; Switch size 1, requested type "simple"
  8888                           ; Number of cases is 2, Range of values is 0 to 1
  8889                           ; switch strategies available:
  8890                           ; Name         Instructions Cycles
  8891                           ; simple_byte            7     4 (average)
  8892                           ; direct_byte           14     8 (fixed)
  8893                           ; jumptable            260     6 (fixed)
  8894                           ;	Chosen strategy is simple_byte
  8895  07C9  0820               	movf	??_SCH_Update,w
  8896  07CA  3A00               	xorlw	0	; case 0
  8897  07CB  1903               	skipnz
  8898  07CC  2FA8               	goto	i1l381
  8899  07CD  3A01               	xorlw	1	; case 1
  8900  07CE  1903               	skipnz
  8901  07CF  2FBA               	goto	i1l4734
  8902  07D0  2FD1               	goto	i1l384
  8903  07D1                     i1l384:	
  8904  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  8905  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  8906  07D3  0827               	movf	??_SCH_Update+7,w
  8907  07D4  00FF               	movwf	btemp+1
  8908  07D5  0826               	movf	??_SCH_Update+6,w
  8909  07D6  008A               	movwf	10
  8910  07D7  0825               	movf	??_SCH_Update+5,w
  8911  07D8  0084               	movwf	4
  8912  07D9  0E24               	swapf	(??_SCH_Update+4)^0,w
  8913  07DA  0083               	movwf	3
  8914  07DB  0EFE               	swapf	btemp,f
  8915  07DC  0E7E               	swapf	btemp,w
  8916  07DD  0009               	retfie
  8917  07DE                     __end_of_SCH_Update:	
  8918                           
  8919                           	psect	intentry
  8920  0004                     __pintentry:	
  8921                           ;incstack = 0
  8922 ;; hardware stack exceeded
  8923                           ; Regs used in _SCH_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8924                           
  8925  0004                     interrupt_function:	
  8926  007E                     saved_w	set	btemp
  8927  0004  00FE               	movwf	btemp
  8928  0005  0E03               	swapf	3,w
  8929  0006  1283               	bcf	3,5	;RP0=0, select bank0
  8930  0007  1303               	bcf	3,6	;RP1=0, select bank0
  8931  0008  00A4               	movwf	??_SCH_Update+4
  8932  0009  0804               	movf	4,w
  8933  000A  00A5               	movwf	??_SCH_Update+5
  8934  000B  080A               	movf	10,w
  8935  000C  00A6               	movwf	??_SCH_Update+6
  8936  000D  087F               	movf	btemp+1,w
  8937  000E  00A7               	movwf	??_SCH_Update+7
  8938  000F  120A  118A  2EED   	ljmp	_SCH_Update
  8939                           
  8940                           	psect	text45
  8941  160E                     __ptext45:	
  8942 ;; *************** function i1_temp_control_off *****************
  8943 ;; Defined at:
  8944 ;;		line 86 in file "temp_control.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;		None
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8958 ;;      Params:         0       0       0       0       0
  8959 ;;      Locals:         0       0       0       0       0
  8960 ;;      Temps:          1       0       0       0       0
  8961 ;;      Totals:         1       0       0       0       0
  8962 ;;Total ram usage:        1 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; This function calls:
  8965 ;;		Nothing
  8966 ;; This function is called by:
  8967 ;;		_SCH_Update
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           
  8972                           ;psect for function i1_temp_control_off
  8973  160E                     i1_temp_control_off:	
  8974  160E                     i1l3428:	
  8975                           ;incstack = 0
  8976                           ; Regs used in i1_temp_control_off: [wreg+status,2+status,0]
  8977                           
  8978                           
  8979                           ;temp_control.c: 87:     (PORTC &= ~(1 << 5));
  8980  160E  30DF               	movlw	223
  8981  160F  00F0               	movwf	??i1_temp_control_off
  8982  1610  0870               	movf	??i1_temp_control_off,w
  8983  1611  1283               	bcf	3,5	;RP0=0, select bank0
  8984  1612  1303               	bcf	3,6	;RP1=0, select bank0
  8985  1613  0587               	andwf	7,f	;volatile
  8986                           
  8987                           ;temp_control.c: 88:     (PORTC &= ~(1 << 2));
  8988  1614  30FB               	movlw	251
  8989  1615  00F0               	movwf	??i1_temp_control_off
  8990  1616  0870               	movf	??i1_temp_control_off,w
  8991  1617  0587               	andwf	7,f	;volatile
  8992                           
  8993                           ;temp_control.c: 89:     (PORTB &= ~(1 << 4));
  8994  1618  30EF               	movlw	239
  8995  1619  00F0               	movwf	??i1_temp_control_off
  8996  161A  0870               	movf	??i1_temp_control_off,w
  8997  161B  0586               	andwf	6,f	;volatile
  8998  161C                     i1l304:	
  8999  161C  0008               	return
  9000  161D                     __end_ofi1_temp_control_off:	
  9001                           
  9002                           	psect	text46
  9003  15DB                     __ptext46:	
  9004 ;; *************** function i1_ssd_turn_off *****************
  9005 ;; Defined at:
  9006 ;;		line 138 in file "SSD.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, status,2, status,0
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9020 ;;      Params:         0       0       0       0       0
  9021 ;;      Locals:         0       0       0       0       0
  9022 ;;      Temps:          1       0       0       0       0
  9023 ;;      Totals:         1       0       0       0       0
  9024 ;;Total ram usage:        1 bytes
  9025 ;; Hardware stack levels used:    1
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_SCH_Update
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           
  9034                           ;psect for function i1_ssd_turn_off
  9035  15DB                     i1_ssd_turn_off:	
  9036  15DB                     i1l3422:	
  9037                           ;incstack = 0
  9038                           ; Regs used in i1_ssd_turn_off: [wreg+status,2+status,0]
  9039                           
  9040                           
  9041                           ;SSD.c: 139:     (PORTD &= ~(255 << 0));
  9042  15DB  1283               	bcf	3,5	;RP0=0, select bank0
  9043  15DC  1303               	bcf	3,6	;RP1=0, select bank0
  9044  15DD  0188               	clrf	8	;volatile
  9045  15DE                     i1l3424:	
  9046                           
  9047                           ;SSD.c: 140:     (PORTA &= ~(1 << 4));
  9048  15DE  30EF               	movlw	239
  9049  15DF  00F0               	movwf	??i1_ssd_turn_off
  9050  15E0  0870               	movf	??i1_ssd_turn_off,w
  9051  15E1  0585               	andwf	5,f	;volatile
  9052  15E2                     i1l3426:	
  9053                           
  9054                           ;SSD.c: 141:     (PORTA &= ~(1 << 5));
  9055  15E2  30DF               	movlw	223
  9056  15E3  00F0               	movwf	??i1_ssd_turn_off
  9057  15E4  0870               	movf	??i1_ssd_turn_off,w
  9058  15E5  0585               	andwf	5,f	;volatile
  9059  15E6                     i1l192:	
  9060  15E6  0008               	return
  9061  15E7                     __end_ofi1_ssd_turn_off:	
  9062                           
  9063                           	psect	text47
  9064  0872                     __ptext47:	
  9065 ;; *************** function _SCH_Stop *****************
  9066 ;; Defined at:
  9067 ;;		line 131 in file "Sch_16f.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;  i               2    8[COMMON] int 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9081 ;;      Params:         0       0       0       0       0
  9082 ;;      Locals:         2       0       0       0       0
  9083 ;;      Temps:          4       0       0       0       0
  9084 ;;      Totals:         6       0       0       0       0
  9085 ;;Total ram usage:        6 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    1
  9088 ;; This function calls:
  9089 ;;		i1___bmul
  9090 ;; This function is called by:
  9091 ;;		_SCH_Update
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           
  9096                           ;psect for function _SCH_Stop
  9097  0872                     _SCH_Stop:	
  9098  0872                     i1l4658:	
  9099                           ;incstack = 0
  9100 ;; hardware stack exceeded
  9101                           ; Regs used in _SCH_Stop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9102                           
  9103                           
  9104                           ;Sch_16f.c: 133:     (T1CON &= ~(1 << 0));
  9105  0872  30FE               	movlw	254
  9106  0873  00F4               	movwf	??_SCH_Stop
  9107  0874  0874               	movf	??_SCH_Stop,w
  9108  0875  1283               	bcf	3,5	;RP0=0, select bank0
  9109  0876  1303               	bcf	3,6	;RP1=0, select bank0
  9110  0877  0590               	andwf	16,f	;volatile
  9111  0878                     i1l4660:	
  9112  0878                     i1l4662:	
  9113                           
  9114                           ;Sch_16f.c: 135:     for (i = 0 ; i < (7) ; i++){
  9115  0878  01F8               	clrf	SCH_Stop@i
  9116  0879  01F9               	clrf	SCH_Stop@i+1
  9117  087A                     i1l4668:	
  9118                           
  9119                           ;Sch_16f.c: 136:         SCH_tasks_G[i].Delay = SCH_tasks_G[i].Period;
  9120  087A  3006               	movlw	6
  9121  087B  00F4               	movwf	??_SCH_Stop
  9122  087C  0874               	movf	??_SCH_Stop,w
  9123  087D  00F0               	movwf	i1___bmul@multiplicand
  9124  087E  0878               	movf	SCH_Stop@i,w
  9125  087F  160A  118A  264E  120A  158A  	fcall	i1___bmul
  9126  0884  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  9127  0885  0084               	movwf	4
  9128  0886  1383               	bcf	3,7	;select IRP bank1
  9129  0887  0800               	movf	0,w
  9130  0888  00F5               	movwf	??_SCH_Stop+1
  9131  0889  0A84               	incf	4,f
  9132  088A  0800               	movf	0,w
  9133  088B  00F6               	movwf	??_SCH_Stop+2
  9134  088C  3006               	movlw	6
  9135  088D  00F7               	movwf	??_SCH_Stop+3
  9136  088E  0877               	movf	??_SCH_Stop+3,w
  9137  088F  00F0               	movwf	i1___bmul@multiplicand
  9138  0890  0878               	movf	SCH_Stop@i,w
  9139  0891  160A  118A  264E  120A  158A  	fcall	i1___bmul
  9140  0896  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  9141  0897  0084               	movwf	4
  9142  0898  0875               	movf	??_SCH_Stop+1,w
  9143  0899  1383               	bcf	3,7	;select IRP bank1
  9144  089A  0080               	movwf	0
  9145  089B  0A84               	incf	4,f
  9146  089C  0876               	movf	??_SCH_Stop+2,w
  9147  089D  0080               	movwf	0
  9148  089E                     i1l4670:	
  9149                           
  9150                           ;Sch_16f.c: 137:     }
  9151  089E  3001               	movlw	1
  9152  089F  07F8               	addwf	SCH_Stop@i,f
  9153  08A0  1803               	skipnc
  9154  08A1  0AF9               	incf	SCH_Stop@i+1,f
  9155  08A2  3000               	movlw	0
  9156  08A3  07F9               	addwf	SCH_Stop@i+1,f
  9157  08A4                     i1l4672:	
  9158  08A4  0879               	movf	SCH_Stop@i+1,w
  9159  08A5  3A80               	xorlw	128
  9160  08A6  00FF               	movwf	btemp+1
  9161  08A7  3080               	movlw	128
  9162  08A8  027F               	subwf	btemp+1,w
  9163  08A9  1D03               	skipz
  9164  08AA  28AD               	goto	u518_25
  9165  08AB  3007               	movlw	7
  9166  08AC  0278               	subwf	SCH_Stop@i,w
  9167  08AD                     u518_25:	
  9168  08AD  1C03               	skipc
  9169  08AE  28B0               	goto	u518_21
  9170  08AF  28B1               	goto	u518_20
  9171  08B0                     u518_21:	
  9172  08B0  287A               	goto	i1l4668
  9173  08B1                     u518_20:	
  9174  08B1                     i1l397:	
  9175  08B1  0008               	return
  9176  08B2                     __end_of_SCH_Stop:	
  9177                           
  9178                           	psect	text48
  9179  164E                     __ptext48:	
  9180 ;; *************** function i1___bmul *****************
  9181 ;; Defined at:
  9182 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  multiplier      1    wreg     unsigned char 
  9185 ;;  multiplicand    1    0[COMMON] unsigned char 
  9186 ;; Auto vars:     Size  Location     Type
  9187 ;;  multiplier      1    2[COMMON] unsigned char 
  9188 ;;  __bmul          1    3[COMMON] unsigned char 
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      unsigned char 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, status,0
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9198 ;;      Params:         1       0       0       0       0
  9199 ;;      Locals:         2       0       0       0       0
  9200 ;;      Temps:          1       0       0       0       0
  9201 ;;      Totals:         4       0       0       0       0
  9202 ;;Total ram usage:        4 bytes
  9203 ;; Hardware stack levels used:    1
  9204 ;; This function calls:
  9205 ;;		Nothing
  9206 ;; This function is called by:
  9207 ;;		_SCH_Update
  9208 ;;		_SCH_Stop
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           
  9213                           ;psect for function i1___bmul
  9214  164E                     i1___bmul:	
  9215                           
  9216                           ;incstack = 0
  9217                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  9218                           ;i1___bmul@multiplier stored from wreg
  9219  164E  00F2               	movwf	i1___bmul@multiplier
  9220  164F                     i1l3298:	
  9221  164F  01F3               	clrf	i1___bmul@product
  9222  1650                     i1l3300:	
  9223  1650  1C72               	btfss	i1___bmul@multiplier,0
  9224  1651  2E53               	goto	u341_21
  9225  1652  2E54               	goto	u341_20
  9226  1653                     u341_21:	
  9227  1653  2E58               	goto	i1l3304
  9228  1654                     u341_20:	
  9229  1654                     i1l3302:	
  9230  1654  0870               	movf	i1___bmul@multiplicand,w
  9231  1655  00F1               	movwf	??i1___bmul
  9232  1656  0871               	movf	??i1___bmul,w
  9233  1657  07F3               	addwf	i1___bmul@product,f
  9234  1658                     i1l3304:	
  9235  1658  1003               	clrc
  9236  1659  0DF0               	rlf	i1___bmul@multiplicand,f
  9237  165A                     i1l3306:	
  9238  165A  1003               	clrc
  9239  165B  0CF2               	rrf	i1___bmul@multiplier,f
  9240  165C  0872               	movf	i1___bmul@multiplier,w
  9241  165D  1D03               	btfss	3,2
  9242  165E  2E60               	goto	u342_21
  9243  165F  2E61               	goto	u342_20
  9244  1660                     u342_21:	
  9245  1660  2E50               	goto	i1l3300
  9246  1661                     u342_20:	
  9247  1661                     i1l3308:	
  9248  1661  0873               	movf	i1___bmul@product,w
  9249  1662                     i1l536:	
  9250  1662  0008               	return
  9251  1663                     __end_ofi1___bmul:	
  9252                           
  9253                           	psect	text49
  9254  15B4                     __ptext49:	
  9255 ;; *************** function _SCH_Start *****************
  9256 ;; Defined at:
  9257 ;;		line 122 in file "Sch_16f.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;		None
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		None
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9271 ;;      Params:         0       0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0
  9274 ;;      Totals:         0       0       0       0       0
  9275 ;;Total ram usage:        0 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		_SCH_Update
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function _SCH_Start
  9286  15B4                     _SCH_Start:	
  9287  15B4                     i1l3420:	
  9288                           ;incstack = 0
  9289                           ; Regs used in _SCH_Start: []
  9290                           
  9291                           
  9292                           ;Sch_16f.c: 124:     (T1CON |= (1 << 0));
  9293  15B4  1283               	bcf	3,5	;RP0=0, select bank0
  9294  15B5  1303               	bcf	3,6	;RP1=0, select bank0
  9295  15B6  1410               	bsf	16,0	;volatile
  9296  15B7                     i1l392:	
  9297  15B7  0008               	return
  9298  15B8                     __end_of_SCH_Start:	
  9299  000E                     
  9300                           	psect	functab
  9301  0032                     __pfunctab:	
  9302  0032                     __fptable:	
  9303  0032                     fptable:	
  9304  0032  00FF               	movwf	(btemp+1)& (0+127)
  9305  0033  3000               	movlw	high fptable
  9306  0034  008A               	movwf	10
  9307  0035  087F               	movf	(btemp+1)& (0+127),w
  9308  0036  0782               	addwf	2,f
  9309  0037                     fpbase:	
  9310  0037  2837               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  9311  0038                     fp__temp_set:	
  9312  0038  120A  158A  2A17   	ljmp	_temp_set
  9313  003B                     fp__get_set_temp:	
  9314  003B  160A  118A  2EF8   	ljmp	_get_set_temp
  9315  003E                     fp__temp_sensor_read:	
  9316  003E  120A  158A  2F21   	ljmp	_temp_sensor_read
  9317  0041                     fp__ssd_update:	
  9318  0041  120A  158A  2CBC   	ljmp	_ssd_update
  9319  0044                     fp__led:	
  9320  0044  160A  118A  2E63   	ljmp	_led
  9321  0047                     fp__switch_scan:	
  9322  0047  120A  118A  2D8B   	ljmp	_switch_scan
  9323  004A                     fp__ssd_blink:	
  9324  004A  160A  118A  2EAE   	ljmp	_ssd_blink
  9325  004D                     __end_of__fptable:	
  9326  007E                     btemp	set	126	;btemp
  9327  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     64      72
    BANK1            80      3      79
    BANK3            96      7       7
    BANK2            96      0       0

Pointer List with Targets:

    SCH_Dispatch_Tasks$978	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), ssd_blink(), switch_scan(), temp_set(), 
		 -> led(), ssd_update(), temp_sensor_read(), get_set_temp(), 

    SCH_Dispatch_Tasks$962	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), ssd_blink(), switch_scan(), temp_set(), 
		 -> led(), ssd_update(), temp_sensor_read(), get_set_temp(), 

    SCH_Add_Task@pFunction	PTR FTN()void  size(1) Largest target is 1
		 -> ssd_blink(), switch_scan(), temp_set(), led(), 
		 -> ssd_update(), temp_sensor_read(), get_set_temp(), 

    S251$pTask	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), ssd_blink(), switch_scan(), temp_set(), 
		 -> led(), ssd_update(), temp_sensor_read(), get_set_temp(), 

    SCH_tasks_G.pTask	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), ssd_blink(), switch_scan(), temp_set(), 
		 -> led(), ssd_update(), temp_sensor_read(), get_set_temp(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SCH_Update in COMMON

    _SCH_Update->_SCH_Stop
    _SCH_Stop->i1___bmul

Critical Paths under _main in BANK0

    _temp_sensor_init->_ADC_Init
    _SCH_Init->_SCH_Delete_Task
    _temp_set->_temp_control_off
    _temp_sensor_read->___fltol
    _average->___lwdiv
    ___xxtofl->_ADC_Read
    ___fltol->___fldiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _switch_scan->_sw_action
    _sw_action->_EEPROM_write
    _EEPROM_write->_I2C1_Wr
    _ssd_update->___awdiv
    _ssd_blink->_ssd_turn_off
    _get_set_temp->_EEPROM_read
    _EEPROM_read->_I2C1_Wr
    _SCH_Delete_Task->___bmul
    _SCH_Add_Task->___bmul
    _EEPROM_init->_I2C1_Init
    _I2C1_Init->___lldiv

Critical Paths under _SCH_Update in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SCH_Dispatch_Tasks

Critical Paths under _SCH_Update in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_SCH_Dispatch_Tasks
    _SCH_Dispatch_Tasks->_temp_sensor_read

Critical Paths under _SCH_Update in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SCH_Update in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18201
                        _EEPROM_init
                       _SCH_Add_Task
                 _SCH_Dispatch_Tasks
                           _SCH_Init
                           _ssd_init
                        _switch_init
                  _temp_control_init
                   _temp_sensor_init
 ---------------------------------------------------------------------------------
 (1) _temp_sensor_init                                     0     0      0       0
                           _ADC_Init
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _temp_control_init                                    1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _switch_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssd_init                                             1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SCH_Init                                             2     2      0    1490
                                             15 BANK0      2     2      0
                    _SCH_Delete_Task
 ---------------------------------------------------------------------------------
 (1) _SCH_Dispatch_Tasks                                   5     5      0   13493
                                              0 BANK1      3     3      0
                                              5 BANK3      2     2      0
                   Absolute function *
                    _SCH_Delete_Task
                    _SCH_Go_To_Sleep
                  _SCH_Report_Status
                             ___bmul
                       _get_set_temp *
                                _led *
                          _ssd_blink *
                         _ssd_update *
                        _switch_scan *
                   _temp_sensor_read *
                           _temp_set *
 ---------------------------------------------------------------------------------
 (2) _temp_set                                             3     3      0       0
                                              9 BANK0      3     3      0
                   _temp_control_off
 ---------------------------------------------------------------------------------
 (3) _temp_control_off                                     1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _temp_sensor_read                                     5     5      0    7011
                                              0 BANK3      5     5      0
                           _ADC_Read
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _average
 ---------------------------------------------------------------------------------
 (3) _average                                              6     6      0     591
                                             16 BANK0      6     6      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     421
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     656
                                             13 BANK0     14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     517
                                             53 BANK0     11     7      4
                           _ADC_Read (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3353
                                             27 BANK0     26    18      8
                           _ADC_Read (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              8 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1863
                                             27 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      31
                                              8 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _switch_scan                                          4     4      0    2063
                                             14 BANK0      4     4      0
                             ___bmul
                          _sw_action
 ---------------------------------------------------------------------------------
 (3) _sw_action                                            2     2      0     273
                                             12 BANK0      2     2      0
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (4) _EEPROM_write                                         3     0      3     273
                                              9 BANK0      3     0      3
                         _I2C1_Start
                          _I2C1_Stop
                            _I2C1_Wr
 ---------------------------------------------------------------------------------
 (2) _ssd_update                                           3     3      0    1269
                                             17 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                          _display7s
 ---------------------------------------------------------------------------------
 (3) _display7s                                            3     3      0      31
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _ssd_blink                                            2     2      0       0
                                              9 BANK0      2     2      0
                       _ssd_turn_off
 ---------------------------------------------------------------------------------
 (3) _ssd_turn_off                                         1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _led                                                  1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_set_temp                                         1     1      0     279
                                             13 BANK0      1     1      0
                        _EEPROM_read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_read                                          4     2      2     279
                                              9 BANK0      4     2      2
                            _I2C1_Rd
                         _I2C1_Start
                          _I2C1_Stop
                            _I2C1_Wr
 ---------------------------------------------------------------------------------
 (5) _I2C1_Wr                                              1     1      0      31
                                              8 BANK0      1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C1_Stop                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C1_Start                                           0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_Rd                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SCH_Report_Status                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SCH_Go_To_Sleep                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SCH_Delete_Task                                      3     3      0    1391
                                             12 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCH_Add_Task                                         8     4      4    2806
                                             12 BANK0      8     4      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1    1223
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_init                                          0     0      0     412
                          _I2C1_Init
 ---------------------------------------------------------------------------------
 (2) _I2C1_Init                                            8     4      4     412
                                             22 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              8 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SCH_Update                                           9     9      0     896
                                             10 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _SCH_Start
                           _SCH_Stop
                           i1___bmul
                     i1_ssd_turn_off
                 i1_temp_control_off
 ---------------------------------------------------------------------------------
 (8) i1_temp_control_off                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_ssd_turn_off                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _SCH_Stop                                             6     6      0     372
                                              4 COMMON     6     6      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             4     3      1     239
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) _SCH_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_init
     _I2C1_Init
       ___lldiv
   _SCH_Add_Task
     ___bmul
   _SCH_Dispatch_Tasks
     Absolute function(Fake) *
     _SCH_Delete_Task *
       ___bmul
     _SCH_Go_To_Sleep *
     _SCH_Report_Status *
     ___bmul *
     _get_set_temp *
       _EEPROM_read
         _I2C1_Rd
         _I2C1_Start
           _I2C_Wait
         _I2C1_Stop
           _I2C_Wait
         _I2C1_Wr
           _I2C_Wait
     _led *
     _ssd_blink *
       _ssd_turn_off
     _ssd_update *
       ___awdiv
       ___awmod
       _display7s
     _switch_scan *
       ___bmul
       _sw_action
         _EEPROM_write
           _I2C1_Start
             _I2C_Wait
           _I2C1_Stop
             _I2C_Wait
           _I2C1_Wr
             _I2C_Wait
     _temp_sensor_read *
       _ADC_Read
       ___fldiv
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___flmul
         _ADC_Read (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___fltol
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
         ___flmul (ARG)
           _ADC_Read (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl
         _ADC_Read (ARG)
       _average
         ___lwdiv
     _temp_set *
       _temp_control_off
   _SCH_Init
     _SCH_Delete_Task
       ___bmul
   _ssd_init
   _switch_init
   _temp_control_init
   _temp_sensor_init
     _ADC_Init

 _SCH_Update (ROOT)
   _SCH_Start
   _SCH_Stop
     i1___bmul
   i1___bmul
   i1_ssd_turn_off
   i1_temp_control_off

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      7       7       9        7.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AC      12        0.0%
ABS                  0      0      AC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jul 12 20:43:33 2020

               _ssd_turn_off 15E7                 ___fldiv@aexp 0054                 ___fldiv@bexp 0053  
                          _i 0060              _SCH_Delete_Task 09B4                            pc 0002  
               ___fldiv@sign 004C               ___bmul@product 002A                  __CFG_CP$OFF 0000  
              ?_get_set_temp 0070                           l60 1766                           l63 1772  
                         l80 15F3                           l57 179E                           l83 15FF  
                         l92 15D1                           l86 083D                           l95 164D  
                         l89 15C8                           l98 1606                 ___awdiv@sign 002E  
                         fsr 0004    switch_scan@current_button 0031           EEPROM_read@address 0029  
        __Umul8_16@word_mpld 002E                  __CFG_LVP$ON 0000              __end_of_I2C1_Rd 160E  
                        l100 160B                          l101 160D                          l201 16D0  
                        l122 17FF                          l116 163B                          l301 1677  
            __end_of_I2C1_Wr 164E                          l119 07FE                          l127 171F  
                        l304 162B                          l224 15DA                          l321 0809  
                        l154 16AD                          l331 0FFF                          l252 0C4C  
                        l421 0A16                          l245 06EC                          l406 0BC0  
                        l326 0871                          l159 09B3                          l263 0CBB  
                fp__temp_set 0038                          l424 0003                          l192 15F2  
                        l416 0E64                          l409 15B3                          l284 16F7  
                        l189 0D43                          l197 16B6                          l703 0C27  
                        l295 0A79                          l536 168E                          l289 0A73  
                        l546 0AE1                          l706 0C3C                          l389 17CE  
                        l663 0B4A                          l911 03A1                          l905 0319  
                        l676 0952                          l861 058A                          l950 0EEA  
                        l782 08F7                          l951 0EF6                          l943 0ECE  
                        l696 0C3C                          l881 056E                          l937 0E89  
                        l883 057E                          l875 04FC                          l859 040A  
                        l939 0F20                          l956 1736                          l958 1748  
                        l899 03AD                 __CFG_CPD$OFF 0000                          _led 1663  
                        fsr0 0004                          indf 0000                 ___awmod@sign 002E  
  __size_of_temp_control_off 000F                 ___flmul@aexp 0049                 ___flmul@bexp 004E  
               ___flmul@sign 0048                 ___flmul@temp 0053                 ___flmul@prod 004F  
               ___fltol@exp1 005F                         l3100 177B                         l3110 083C  
                       l3102 179B                         l3104 080A                         l3106 080E  
                       l4010 0906                         l4002 08F8                         l3108 083B  
                       l4020 091F                         l4012 090A                         l4004 08FB  
                       l4100 03E8                         l4030 093E                         l4022 0923  
                       l4014 090F                         l4006 08FF                         l4110 03FF  
                       l4102 03EC                         l4024 0927                         l4016 0915  
                       l4032 0944                         l4008 0904                         l4200 0552  
                       l4120 0422                         l4112 0400                         l4104 03ED  
                       l4040 0BC1                         l3320 15D8                         l3312 0801  
            _SCH_Go_To_Sleep 15B2                         l4034 0949                         l4026 0931  
                       l4018 0918                         l4210 0578                         l4202 0561  
                       l4130 0439                         l4106 03F2                         l4114 0402  
                       l4050 0BED                         l4042 0BCE                         l3330 16A7  
                       l3322 168F                         l3314 0806                         l3332 162C  
                       l4036 094E                         l4028 0937                         l4212 057A  
                       l4204 0565                         l4140 0465                         l4132 044B  
                       l4116 0412                         l4124 042B                         l4108 03F7  
                       l4300 02C5                         l4220 0054                         l4052 0BF5  
                       l3324 1695                         l3316 16D1                         l2630 0A7A  
                       l4206 056D                         l4142 046A                         l4150 048A  
                       l4134 0453                         l4126 0430                         l4118 041E  
                       l4310 02EA                         l4302 02CE                         l4230 0069  
                       l4222 005A                         l4070 0C1C                         l4062 0C03  
                       l4054 0BF7                         l4046 0BD7                         l3326 169B  
                       l3318 15D2                         l2640 0AA9                         l2632 0A8C  
                       l4208 0574                         l4160 04B5                         l4152 049C  
                       l4144 047C                         l4136 045B                         l4080 03BB  
                       l4320 0302                         l4312 02F3                         l4304 02DC  
                       l4240 0086                         l4232 0071                         l4224 005E  
                       l4072 0C2C                         l4056 0BFB                         l4064 0C15  
                       l4048 0BEC                         l3328 16A1                         l2642 0ABB  
                       l2634 0A8F                         l2650 0AD9                         l4170 04CD  
                       l4162 04BD                         l4154 049D                         l4146 0480  
                       l4138 0463                         l4090 03D2                         l4082 03BF  
                       l4330 0331                         l4322 0316                         l4306 02E5  
                       l4314 02F9                         l4250 009D                         l4242 008A  
                       l4234 0073                         l4226 005F                         l4218 004D  
                       l4074 0C31                         l4402 16F8                         l3098 1773  
                       l2644 0AC9                         l2636 0A9C                         l4180 04E5  
                       l4172 04D6                         l4164 04BF                         l4156 04AB  
                       l4148 0481                         l4092 03D3                         l4084 03C0  
                       l4076 03AE                         l4340 036C                         l4332 0335  
                       l4316 02FD                         l4308 02E9                         l4252 009F  
                       l4244 008B                         l4236 007B                         l4228 0064  
                       l3700 08B6                         l4404 170C                         l4420 0CDE  
                       l4412 0CC4                         l4500 0693                         l2646 0ACA  
                       l2638 0AA0                         l4190 0514                         l4182 04F9  
                       l4166 04C8                         l4174 04DC                         l4158 04AF  
                       l4086 03C5                         l4094 03D5                         l4078 03B5  
                       l4350 0399                         l4342 037B                         l4334 034E  
                       l4326 031E                         l4318 02FE                         l4270 0110  
                       l4262 00BA                         l4254 00A7                         l4246 0090  
                       l4238 0080                         l3710 08CE                         l3702 08BC  
                       l4406 1711                         l4430 0D07                         l4422 0CF4  
                       l4414 0CC9                         l4510 06E1                         l4502 06A5  
                       ?_led 0070                         l2648 0AD3                         l4192 0518  
                       l4176 04E0                         l4168 04CC                         l4096 03DD  
                       l4088 03CA                         l4352 039A                         l4344 0385  
                       l4328 0323                         l4336 0354                         l4280 018D  
                       l4272 013C                         l4264 00CA                         l4256 00AC  
                       l4248 0095                         l4360 0E6D                         l3712 08DF  
                       l3704 08BF                         l3720 08F3                         l4432 0D1D  
                       l4424 0CF5                         l4408 0CBC                         l4512 06E7  
                       l4600 17B4                         l3810 0965                         l4194 0531  
                       l4186 0501                         l4178 04E1                         l4098 03E2  
                       l3730 1730                         l4354 03A5                         l4346 0387  
                       l4338 0361                         l4290 020D                         l4282 01AA  
                       l4274 0158                         l4266 00D7                         l4258 00B1  
                       l4370 0E9A                         l4362 0E71                         l3714 08E5  
                       l3706 08C6                         l4530 0A37                         l4522 0A17  
                       l4434 0D1E                         l4426 0CF9                         l4442 0D2F  
                       l4418 0CCE                         l4506 06B6                         l4610 17C3  
                       l4602 17B7                         l4620 0B50                         l3804 0963  
                       l3900 0C6E                         l3740 1765                         l4188 0506  
                       l4196 0537                         l3732 173F                         l3724 1723  
                       l4348 0395                         l4292 023A                         l4284 01BA  
                       l4276 0174                         l4268 00F4                         l4380 0EC5  
                       l4372 0E9F                         l4364 0E81                         l3716 08E6  
                       l3708 08CA                         l4540 0A59                         l4532 0A3B  
                       l4524 0A1E                         l4436 0D22                         l4428 0D02  
                       l4508 06DB                         l4452 16AE                         l4612 17C4  
                       l4604 17BB                         l4630 0B77                         l4622 0B54  
                       l3750 17D4                         l3822 0969                         l3910 0C86  
                       l3902 0C73                         l3742 176A                         l4198 0544  
                       l3734 1744                         l3726 1725                         l4294 024A  
                       l4286 01D7                         l4278 017D                         l4390 0EF8  
                       l4382 0ED5                         l4374 0EAC                         l4366 0E91  
                       l4358 0E68                         l3718 08ED                         l4534 0A51  
                       l4542 0A5E                         l4526 0A30                         l4438 0D2B  
                       l4550 1663                         l4462 16C0                         l4614 17C8  
                       l4606 17BF                         l4624 0B66                         l3672 15F3  
                       l3680 15C9                         l3760 17F7                         l3752 17DA  
                       l3840 096F                         l3816 0967                         l3904 0C7B  
                       l3912 0C8F                         l3920 0CA9                         l3728 172C  
                       l4296 0277                         l4288 01F0                         l4392 0F0E  
                       l4384 0EE0                         l4376 0EB3                         l4544 0A66  
                       l4536 0A54                         l4528 0A33                         l4560 0FE4  
                       l4552 166A                         l4456 16B8                         l4640 0DD6  
                       l4616 17CC                         l4608 17C2                         l4626 0B6E  
                       l4618 0B4E                         l4570 09C9                         l3690 1600  
                       l3674 15F9                         l3682 15CE                         l3762 17FC  
                       l3754 17E2                         l3746 17CF                         l3834 096D  
                       l3914 0C96                         l3906 0C83                         l3738 174C  
                       l4298 029D                         l4394 0F13                         l4386 0EE4  
                       l4378 0EB7                         l4538 0A58                         l4562 0FEC  
                       l4554 1671                         l4490 062F                         l4482 05E7  
                       l4474 058F                         l4458 16BE                         l4650 0E44  
                       l4642 0DEE                         l4634 0DD3                         l4580 09F4  
                       l4572 09D1                         l3692 160C                         l3676 15C0  
                       l3684 163F                         l3756 17E7                         l3748 17CF  
                       l3852 0973                         l3828 096B                         l3780 095B  
                       l3916 0CA5                         l4396 0F17                         l4388 0EEE  
                       l3940 0861                         l4548 0A74                         l4564 0FF2  
                       l4556 0F21                         l4492 0641                         l4484 05F7  
                       l4476 05B2                         l4468 058B                         l4644 0E09  
                       l4652 0E4C                         l3950 1684                         l4582 0A06  
                       l4574 09D2                         l3678 15C5                         l3686 1644  
                       l3758 17ED                         l3846 0971                         l3774 0959  
                       l3766 0956                         l4398 0F18                         l3934 0844  
                       l3926 161D                         l4566 0FF3                         l4558 0F28  
                       l4494 0657                         l4486 0609                         l4478 05CF  
                       l4654 0E54                         l4646 0E0F                         l3952 1686  
                       l3944 167B                         l4576 09D2                         l4568 09B7  
                       l3688 1648                         l3880 15E7                         l3960 0AE5  
                       l3864 0977                         l3792 095F                         l3768 0957  
                       l3872 0979                         l3696 07DE                         l3936 0857  
                       l3928 083E                         l4920 06CD                         l4496 0669  
                       l4488 061D                         l4656 0E5A                         l4648 0E24  
                       l4680 0D58                         l3954 168D                         l3946 167C  
                       l4578 09E2                         l4586 15B2                         l3882 15EA  
                       l3970 0AF9                         l3962 0AE9                         l3858 0975  
                       l3786 095D                         l3890 0C46                         l3698 08B2  
                       l3938 085B                         l4922 0CD6                         l4498 067D  
                       l4594 17A2                         l4690 0D8E                         l4682 0D5D  
                       l4674 0D44                         l3948 1680                         l3884 15EE  
                       l3980 0B0F                         l3972 0AFD                         l3964 0AEE  
                       l3892 0C51                         l4924 0D3B                         l4916 16C8  
                       l4596 17A8                         l4588 179F                         l4692 0D9D  
                       l4684 0D62                         l4676 0D4E                         l3990 0B2F  
                       l3982 0B13                         l3974 0AFF                         l3966 0AF0  
                       l3958 0AE2                         l3798 0961                         l4926 0CB3  
                       l3894 0C5C                         l3886 0C3D                         l4918 05EF  
                       l4598 17AE                         l4694 0DAC                         l4686 0D70  
                       l4678 0D53                         l3992 0B36                         l3984 0B17  
                       l3976 0B05                         l3968 0AF4                         l4928 0981  
                       l3896 0C62                         l3888 0C3E                         l4696 0DBB  
                       l4688 0D7F                         l3986 0B28                         l3978 0B08  
                       l3994 0B3C                         l3898 0C6A                         l4698 0DCA  
                       l3996 0B41                         l3988 0B2E                         l3998 0B46  
                       u2100 0AD9                         u2101 0AD8                         u2040 0A8C  
                       u2041 0A8B                         u2060 0AA0                         u2061 0A9F  
                       u2055 0A91                         u2080 0ABB                         u3200 081C  
                       u4000 0949                         u2081 0ABA                         u4001 0948  
                       u4010 0BCE                         u2075 0AA2                         u4011 0BCD  
                       u4100 0C31                         u4020 0BE5                         u2085 0AB7  
                       u3205 0817                         u4101 0C30                         u4110 03BF  
                       u4030 0BFB                         u2095 0ACB                         u4111 03BE  
                       u4031 0BFA                         u4120 03C5                         u4040 0C02  
                       u5000 06A5                         u4121 03C4                         u4041 0C01  
                       u4025 0BE0                         u5001 06A4                         u4130 03CA  
                       u5010 06E7                         u4131 03C9                         u5011 06E6  
                       u5100 09C9                         u4300 04E0                         u4220 0480  
                       u4140 03EC                         u4060 0C14                         u5020 0A1E  
                       u5101 09C8                         u4301 04DF                         u4221 047F  
                       u4205 046C                         u4141 03EB                         u4061 0C13  
                       u5021 0A1D                         u4310 04E5                         u4150 03F2  
                       u4070 0C1B                         u5030 0A30                         u5110 17B4  
                       u4311 04E4                         u4215 0475                         u4151 03F1  
                       u4071 0C1A                         u4055 0C04                         u5031 0A2F  
                       u5111 17B3                         _PIE1 008C                         u5120 0B66  
                       u4320 04F9                         u4240 049C                         u4160 03F7  
                       u4400 005E                         u3600 08BC                         u5040 0A51  
                       u5121 0B65                         u4321 04F8                         u4241 049B  
                       u4161 03F6                         u4401 005D                         u3601 08BB  
                       u5041 0A50                         u5130 0B6E                         u4330 0500  
                       u4250 04B5                         u4170 0412                         u4410 0064  
                       u4090 0C2C                         u5050 0A66                         u5131 0B6D  
                       u4331 04FF                         u4251 04B4                         u4235 0483  
                       u4171 0411                         u4411 0063                         u4091 0C2B  
                       u5051 0A65                         u5035 0A2C                         u5140 0B76  
                       u4340 0506                         u4260 04BD                         u4180 0430  
                       u4420 0069                         u3620 08CE                         u5060 166A  
                       u5141 0B75                         u4341 0505                         u4261 04BC  
                       u4245 0498                         u4181 042F                         u4501 014A  
                       u4421 0068                         u4085 0C1E                         u3621 08CD  
                       u5045 0A4D                         u5061 1669                         u3710 176A  
                       u4350 0518                         u4190 046A                         u4502 0151  
                       u4430 008A                         u5070 1671                         u5150 0DEE  
                       u3711 1769                         u4351 0517                         u4191 0469  
                       u4511 0166                         u4503 0158                         u4431 0089  
                       u3615 08C0                         u5071 1670                         u5151 0DED  
                       u3800 1680                         u3720 0C46                         u4360 0527  
                       u4280 04CC                         u4512 016D                         u4440 0090  
                       u3640 08DF                         u5080 0F28                         u5160 0E44  
                       u3801 167F                         u3721 0C45                         u3705 175B  
                       u4281 04CB                         u4601 028F                         u4513 0174  
                       u4441 008F                         u3641 08DE                         u5081 0F27  
                       u5161 0E43                         u3810 168D                         u3570 15F9  
                       u3730 0C4C                         u4370 0544                         u4610 02AB  
                       u4602 0296                         u4450 0095                         u5090 0FF2  
                       u5170 0E5A                         u3811 168C                         u3571 15F8  
                       u3731 0C4B                         u4371 0543                         u4275 04C1  
                       u4603 029D                         u4531 019C                         u4451 0094  
                       u3635 08CF                         u5091 0FF1                         u5171 0E59  
                       u3580 15FF                         u3900 0B3C                         u3820 0AE9  
                       u3740 0C5C                         u4380 0561                         u4700 031D  
                       u4532 01A3                         u4460 00AC                         u3660 08F3  
                       u3581 15FE                         u3901 0B3B                         u3821 0AE8  
                       u3741 0C5B                         u4381 0560                         u4365 0522  
                       u4701 031C                         u4621 02B7                         u4541 01C9  
                       u4533 01AA                         u4525 0176                         u4461 00AB  
                       u3661 08F2                         u3645 08DB                         u3590 160B  
                       u3910 0B41                         u3830 0AF4                         u3750 0C62  
                       u4390 0578                         u3670 1730                         u4710 0323  
                       u4622 02BE                         u4542 01D0                         u4470 00B1  
                       u3591 160A                         u3911 0B40                         u3831 0AF3  
                       u3751 0C61                         u4391 0577                         u4375 0540  
                       u4295 04CF                         u3671 172F                         u4711 0322  
                       u4623 02C5                         u4615 02A6                         u4543 01D7  
                       u4471 00B0                         u3655 08E7                         u3840 0B05  
                       u3920 08FF                         u3760 0C6A                         u4720 0335  
                       u3841 0B04                         u3921 08FE                         u3761 0C69  
                       u4385 055D                         u4721 0334                         u4561 01FF  
                       u4481 0102                         u3930 090A                         u3770 0C7B  
                       u3690 1744                         u4730 0344                         u4650 02E9  
                       u4562 0206                         u4482 0109                         u4810 0EB2  
                       u3931 0909                         u3771 0C7A                         u3691 1743  
                       u4651 02E8                         u4635 02C7                         u4571 022C  
                       u4563 020D                         u4555 01D9                         u4491 011E  
                       u4483 0110                         u4811 0EB1                         u3860 0B17  
                       u3940 0915                         u3780 0C83                         u4740 0361  
                       u4572 0233                         u4492 0125                         u4900 0F17  
                       u3861 0B16                         u3941 0914                         u3781 0C82  
                       u3685 1737                         u4741 0360                         u4645 02DE  
                       u4581 0259                         u4573 023A                         u4493 012C  
                       u4901 0F16                         u4805 0EA4                         u4750 037B  
                       u4670 02FD                         u4590 0283                         u4582 0260  
                       u4830 0ED4                         u3790 0861                         u4910 170C  
                       u3855 0B09                         u4751 037A                         u4735 033F  
                       u4671 02FC                         u4583 0267                         u4831 0ED3  
                       u3791 0860                         u4911 170B                         u3880 0B28  
                       u3960 0927                         u4760 0399                         u4680 0302  
                       u4920 0CC3                         u3881 0B27                         u3961 0926  
                       u4761 0398                         u4745 035D                         u4681 0301  
                       u4665 02EC                         u4825 0EC6                         u4921 0CC2  
                       _PIR1 000C                         u3970 0931                         u4690 0316  
                       u4850 0EE4                         u4770 0E6D                         u4930 16B5  
                       u3875 0B18                         u3971 0930                         u3955 0919  
                       u4755 0377                         u4691 0315                         u4595 027E  
                       u4851 0EE3                         u4771 0E6C                         u4931 16B4  
                       u4860 0EEA                         u4780 0E71                         u3885 0B24  
                       u4861 0EE9                         u4845 0ED9                         u4781 0E70  
                       u3990 0944                         u4870 0EEE                         u4790 0E91  
                       u4950 0609                         u3895 0B30                         u3991 0943  
                       u3975 092D                         u4871 0EED                         u4791 0E90  
                       u4951 0608                         u4880 0F03                         u4960 061D  
                       u3985 0938                         u4961 061C                         u4945 05B5  
                       u4890 0F13                         u4970 0641                         u4891 0F12  
                       u4971 0640                         u4980 0669                         u4885 0EFE  
                       u4981 0668                         u4990 067D                         u4991 067C  
               __CFG_WRT$OFF 0000                 fp__ssd_blink 004A                         _main 0D44  
                       _mode 0065                         _ones 0063                         _temp 0062  
                       _tens 0064                         btemp 007E             __end_of_I2C_Wait 1600  
  SCH_Delete_Task@TASK_INDEX 002E  __size_of_SCH_Dispatch_Tasks 0092             __end_of_ADC_Init 179F  
           __end_of_ADC_Read 1773                         start 0012              ___fldiv@new_exp 004D  
          ___bmul@multiplier 002B                  _switch_init 15D2                  _switch_scan 058B  
             ??_get_set_temp 002D                  _switch_wait 00E6                        ??_led 0028  
             i1_ssd_turn_off 15DB                  ?_SCH_Update 0070         __end_of_EEPROM_write 07FF  
          __end_of_I2C1_Init 083E                ___fltol@sign1 005E                        ?_main 0070  
            __end_of___fldiv 058B              __end_of___awdiv 0B4B            __end_of_I2C1_Stop 15D2  
              __CFG_WDTE$OFF 0000              __end_of___awmod 0953              __end_of___flmul 03AE  
            __end_of___fltol 0C3D              __end_of___lldiv 0AE2              ___awdiv@divisor 0028  
                      _T1CON 0010              __end_of___lwdiv 08F8                        i1l304 161C  
                      i1l192 15E6                        i1l372 079F                        i1l381 07A8  
                      i1l392 15B7                        i1l536 1662                        i1l384 07D1  
                      i1l397 08B1              ___awdiv@counter 002D                        _TMR1H 000F  
                      _TMR1L 000E                        _PORTA 0005                        _PORTB 0006  
                      _PORTC 0007                        _PORTD 0008           __size_of_SCH_Start 0004  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        _SSPIF 0063             __end_of_SCH_Init 17CF  
           __end_of_SCH_Stop 08B2               EEPROM_write@_x 002B              __end_of_average 0872  
                      _blink 0061                        _state 00EA                        fpbase 0037  
              fp__ssd_update 0041             __end_ofi1___bmul 1663               __CFG_BOREN$OFF 0000  
                      pclath 000A                        status 0003                        wtemp0 007E  
 __end_ofi1_temp_control_off 161D      __end_of_SCH_Delete_Task 0A17              _temp_hold_array 00CA  
               ??_I2C1_Start 0028         __size_of_EEPROM_init 0010         __size_of_EEPROM_read 0031  
            __initialization 0015                 __end_of_main 0DD3       __end_ofi1_ssd_turn_off 15E7  
                  ??_I2C1_Rd 0028                    ??_I2C1_Wr 0028                       ??_main 0060  
          _SCH_Report_Status 0003      __end_of_SCH_Go_To_Sleep 15B4           ?_SCH_Report_Status 0070  
        EEPROM_write@address 0029                       _ADCON0 001F                       _ADCON1 009F  
         __end_of_I2C1_Start 15C9                       _ADRESH 001E                       _ADRESL 009E  
           ___awdiv@dividend 002A          ??_SCH_Report_Status 0028                       i1l3300 1650  
                     i1l3302 1654                       i1l3304 1658                       i1l3306 165A  
                     i1l3420 15B4                       i1l3308 1661                       i1l3422 15DB  
                     i1l3424 15DE                       i1l3426 15E2                       i1l3428 160E  
                     i1l3298 164F                       i1l4700 06ED                       i1l4702 06F1  
                     i1l4720 0755                       i1l4704 06F3                       i1l4730 07AA  
                     i1l4722 077E                       i1l4714 06FA                       i1l4706 06F5  
                     i1l4660 0878                       i1l4732 07B4                       i1l4740 07C1  
                     i1l4716 070C                       i1l4724 0793                       i1l4708 06F9  
                     i1l4670 089E                       i1l4662 0878                       i1l4734 07BA  
                     i1l4726 0799                       i1l4718 0728                       i1l4672 08A4  
                     i1l4736 07BB                       i1l4728 07A3                       i1l4658 0872  
                     i1l4930 07C9                       i1l4668 087A                       _INTCON 000B  
                     u341_20 1654                       u341_21 1653                       u342_20 1661  
                     u342_21 1660                       u520_20 070C                       u520_21 070B  
                     u521_20 0728                       u521_21 0727                       u522_20 0755  
                     u522_21 0754                       u523_20 079F                       u523_21 079E  
                     u524_20 07A3                       u524_21 07A2                       u518_20 08B1  
                     u518_21 08B0                       u518_25 08AD                       u519_20 06F1  
                     u519_21 06F0          __size_of_SCH_Update 00F1                       _SSPADD 0093  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of__fptable 004D  
           __end_of___xxtofl 0F21               __CFG_PWRTE$OFF 0000            __end_of_SCH_Start 15B8  
                     ___bmul 1678              ?i1_ssd_turn_off 0070                    ??___fldiv 0043  
                  ??___awdiv 002C                    ??___awmod 002C                    ??___flmul 0043  
                  ??___fltol 0059                    ??___lldiv 0030                    ??___lwdiv 002C  
            ADC_Read@channel 002C    __size_of_temp_sensor_init 0009    __size_of_temp_sensor_read 00DF  
  __end_of_SCH_Report_Status 0004             ___awdiv@quotient 002F              ___awmod@divisor 0028  
            ___awmod@counter 002D                       fp__led 0044                    ??_average 0030  
                     fptable 0032                 __pdataCOMMON 007D                       fptotal 000E  
                  ?_I2C_Wait 0070           __size_of__Umul8_16 0029             __end_of_temp_set 0A7A  
                  ?_ADC_Init 0070                    ?_ADC_Read 0028                _measured_temp 0066  
                     saved_w 007E             _temp_control_off 161D             __end_of_ssd_init 16AE  
          _Last_error_code_G 00E9         __end_of_get_set_temp 1720                 ___xxtofl@arg 0037  
            __CFG_FOSC$EXTRC 0000                 ___xxtofl@exp 0036                 ___xxtofl@val 002D  
    __end_of__initialization 002E             ?_SCH_Delete_Task 0070                   ___fltol@f1 0055  
        ___bmul@multiplicand 0028                ?_SCH_Add_Task 002C               __pcstackCOMMON 0070  
                  ?_SCH_Init 0070        __size_of_EEPROM_write 0021                    ?_SCH_Stop 0070  
          SCH_Add_Task@DELAY 002C            SCH_Add_Task@Index 0033                    ?i1___bmul 0070  
                 ??_I2C_Wait 0028             ?_SCH_Go_To_Sleep 0070                   ??_ADC_Init 0028  
                 ??_ADC_Read 002A               fp__switch_scan 0047           __size_of_display7s 0061  
           i1___bmul@product 0073                   __pbssBANK0 0060                   __pbssBANK1 00A0  
               _EEPROM_write 07DE               ??_SCH_Add_Task 0030            __end_of__Umul8_16 1749  
                 __pmaintext 0D44                    SCH_Init@i 0030                   ??_SCH_Init 002F  
                    ?___bmul 0028                   ??_SCH_Stop 0074                 ?_switch_init 0070  
               ?_switch_scan 0070                    SCH_Stop@i 0078                      _I2C1_Rd 1600  
                    _I2C1_Wr 163C                   __pintentry 0004   __size_of_SCH_Report_Status 0001  
               ??_SCH_Update 0020                   ??i1___bmul 0071                    ?___xxtofl 002D  
         __size_of_ssd_blink 0023                    _I2C1_Init 080A                    _I2C1_Stop 15C9  
         __size_of_sw_action 007F                      _SSPCON2 0091                      _SSPSTAT 0094  
 __end_of_SCH_Dispatch_Tasks 0E65           __end_of_SCH_Update 07DE                    ?_temp_set 0070  
          __end_of_display7s 09B4              __size_of___bmul 0017                    ?_ssd_init 0070  
                    ___fldiv 03AE                      ___awdiv 0AE2                      ___awmod 08F8  
                    ___flmul 004D                      ___fltol 0BC1                      ___lldiv 0A7A  
                    ___lwdiv 08B2             _temp_sensor_init 0801             _temp_sensor_read 0F21  
         i1_temp_control_off 160E                      __ptext1 0801                      __ptext2 1773  
                    __ptext3 16D1                      __ptext4 15D2                      __ptext5 168F  
                    __ptext6 179F                      __ptext7 0DD3                      __ptext8 16AE  
                    __ptext9 058B                      _average 083E                 __size_of_led 0015  
                 ??___xxtofl 0031             ___awmod@dividend 002A        __size_of_get_set_temp 0028  
        ?i1_temp_control_off 0070                   ?_I2C1_Init 0036          i1___bmul@multiplier 0072  
                 ?_I2C1_Stop 0070                      _sw_info 00DE                      clrloop0 15B9  
       end_of_initialization 002E                ??_EEPROM_init 003E                ??_EEPROM_read 002B  
           ??i1_ssd_turn_off 0070              ___lldiv@divisor 0028         ??i1_temp_control_off 0070  
          _temp_control_init 16D1              ___lldiv@counter 0035            __end_of_ssd_blink 16D1  
   __end_of_temp_control_off 162C                   ??_temp_set 0029            __end_of_sw_action 0CBC  
         ?_temp_control_init 0070                   ??_ssd_init 0028                    _SCH_Start 15B4  
               _get_set_temp 16F8          ??_temp_control_init 0028                   _ssd_select 00EB  
              ___xxtofl@sign 0035                   _power_mode 007D                   _ssd_update 0CBC  
       __end_of_SCH_Add_Task 0BC1                  ___fldiv@grs 004F                  ___fldiv@rem 0048  
          __size_of_I2C_Wait 000D            __size_of_ADC_Init 002C            __size_of_ADC_Read 002A  
                 average@sum 0033                  ___flmul@grs 004A    __end_of_temp_control_init 16F8  
                 display7s@v 002A                EEPROM_read@_x 002C                ?_ssd_turn_off 0070  
        __end_of_EEPROM_init 163C          __end_of_EEPROM_read 1800                   ?_SCH_Start 0070  
             __end_of___bmul 168F            __size_of_SCH_Init 0030            __size_of_SCH_Stop 0040  
       __size_of_switch_init 0009         __size_of_switch_scan 0162                __pidataCOMMON 07FF  
         SCH_Add_Task@PERIOD 002E            __size_ofi1___bmul 0015          start_initialization 0015  
                ??_I2C1_Init 003A                  ??_I2C1_Stop 0028                  __end_of_led 1678  
               _Error_code_G 00E8      SCH_Dispatch_Tasks@Index 0196               ??_ssd_turn_off 0028  
      SCH_Add_Task@pFunction 0032                     ??___bmul 0029                     ?_I2C1_Rd 0070  
                   ?_I2C1_Wr 0070                    __Umul8_16 1720     __size_of_SCH_Delete_Task 0063  
        fp__temp_sensor_read 003E                    ___fldiv@a 003B                    ___fldiv@b 003F  
                  ___flmul@a 003F                    ___flmul@b 003B                  __pbssCOMMON 007B  
                  ___latbits 0002                  ?_ssd_update 0070                __pcstackBANK0 0020  
              __pcstackBANK1 00EC                __pcstackBANK3 0190            __size_of__fptable 001B  
          __size_of___xxtofl 00BC     __end_of_temp_sensor_init 080A     __end_of_temp_sensor_read 1000  
   __size_of_SCH_Go_To_Sleep 0002   __size_of_temp_control_init 0027                  _EEPROM_init 162C  
                _EEPROM_read 17CF             ___lwdiv@dividend 002A                    __pfunctab 0032  
         _SCH_Dispatch_Tasks 0DD3                     ?___fldiv 003B                     ?___awdiv 0028  
                ??_SCH_Start 0070                     ?___awmod 0028                     ?___flmul 003B  
                   ?___fltol 0055                     ?___lldiv 0028                   ?__Umul8_16 0028  
                   ?___lwdiv 0028            __size_of_temp_set 0063            __size_of_ssd_init 001F  
      __size_of_SCH_Add_Task 0076                    _display7s 0953                     ?_average 0070  
        ?_SCH_Dispatch_Tasks 0070                     _I2C_Wait 15F3                     _ADC_Init 1773  
                   _ADC_Read 1749             ___lwdiv@quotient 002E            interrupt_function 0004  
       ??_SCH_Dispatch_Tasks 00EC                    clear_ram0 15B8        i1___bmul@multiplicand 0070  
                 _I2C1_Start 15C0                 _SCH_Add_Task 0B4B            ?_temp_control_off 0070  
                   _SCH_Init 179F          __size_of_ssd_update 0088                     _SCH_Stop 0872  
         ??_temp_control_off 0028                    _ssd_blink 16AE             __size_of_I2C1_Rd 000E  
           __size_of_I2C1_Wr 0012       _SCH_Dispatch_Tasks$978 0195                    _sw_action 0C3D  
                   i1___bmul 164E                   ?_display7s 0070              SCH_Update@Index 007A  
          ??_SCH_Delete_Task 002C         __end_of_ssd_turn_off 15F3           _Error_tick_count_G 00E4  
__size_ofi1_temp_control_off 000F            ??_SCH_Go_To_Sleep 0028                  ??__Umul8_16 002A  
                 ?_ssd_blink 0070             __size_of___fldiv 01DD             __size_of___awdiv 0069  
           __size_of___awmod 005B             __size_of___flmul 0361             __size_of___fltol 007C  
           __size_of___lldiv 0068             __size_of___lwdiv 0046                   ?_sw_action 0070  
           __size_of_average 0034                     __fptable 0032                     ___xxtofl 0E65  
            ___lwdiv@divisor 0028              ___lwdiv@counter 002D                     __ptext10 1663  
                   __ptext11 0CBC                     __ptext20 004D                     __ptext12 0F21  
                   __ptext21 1720                     __ptext13 16F8                     __ptext30 17CF  
                   __ptext22 03AE                     __ptext14 0A17                     __ptext31 163C  
                   __ptext23 1749                     __ptext15 161D                     __ptext40 1678  
                   __ptext32 15C9                     __ptext24 0C3D                     __ptext16 083E  
                   __ptext41 162C                     __ptext33 15C0                     __ptext25 07DE  
                   __ptext17 08B2                     __ptext42 080A                     __ptext34 15F3  
                   __ptext26 0953                     __ptext18 0E65                     __ptext43 0A7A  
                   __ptext35 1600                     __ptext27 08F8                     __ptext19 0BC1  
                   __ptext44 06ED                     __ptext36 0003                     __ptext28 0AE2  
                   __ptext45 160E                     __ptext37 15B2                     __ptext29 15E7  
                   __ptext46 15DB                     __ptext38 09B4                     __ptext47 0872  
                   __ptext39 0B4B                     __ptext48 164E                     __ptext49 15B4  
              ?_EEPROM_write 0029                __size_of_main 008F                  ?_I2C1_Start 0070  
                   _set_temp 0067                     _temp_set 0A17                ??_switch_init 0028  
              ??_switch_scan 002E                     _ssd_init 168F                     average@i 0035  
    __size_ofi1_ssd_turn_off 000C                  ??_display7s 0028                 ??_ssd_update 0031  
                   intlevel1 0032               ??_EEPROM_write 002C            ?_temp_sensor_init 0070  
          ?_temp_sensor_read 0070             ___lldiv@dividend 002C                 ?_EEPROM_init 0070  
               ?_EEPROM_read 0029           ??_temp_sensor_init 0029           ??_temp_sensor_read 0190  
                _SCH_tasks_G 00A0              fp__get_set_temp 003B                I2C1_Init@freq 0036  
         __end_of_ssd_update 0D44                  ??_ssd_blink 0029                   _SCH_Update 06ED  
                ??_sw_action 002C       __Umul8_16@multiplicand 0028          __end_of_switch_init 15DB  
        __end_of_switch_scan 06ED        __size_of_ssd_turn_off 000C             ___lldiv@quotient 0031  
        __size_of_I2C1_Start 0009                  _timer_value 007B                 I2C1_Wr@_data 0028  
         __size_of_I2C1_Init 0034           __size_of_I2C1_Stop 0009         __Umul8_16@multiplier 0030  
          __Umul8_16@product 002C  
