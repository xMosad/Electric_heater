

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jul 12 01:55:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	functab,global,class=ENTRY,delta=2
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 2.10
    72                           ; Generated 31/07/2019 GMT
    73                           ; 
    74                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F877A Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0094                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  009F                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  010F                     	;# 
   343  018C                     	;# 
   344  018D                     	;# 
   345  0000                     	;# 
   346  0001                     	;# 
   347  0002                     	;# 
   348  0003                     	;# 
   349  0004                     	;# 
   350  0005                     	;# 
   351  0006                     	;# 
   352  0007                     	;# 
   353  0008                     	;# 
   354  0009                     	;# 
   355  000A                     	;# 
   356  000B                     	;# 
   357  000C                     	;# 
   358  000D                     	;# 
   359  000E                     	;# 
   360  000E                     	;# 
   361  000F                     	;# 
   362  0010                     	;# 
   363  0011                     	;# 
   364  0012                     	;# 
   365  0013                     	;# 
   366  0014                     	;# 
   367  0015                     	;# 
   368  0015                     	;# 
   369  0016                     	;# 
   370  0017                     	;# 
   371  0018                     	;# 
   372  0019                     	;# 
   373  001A                     	;# 
   374  001B                     	;# 
   375  001B                     	;# 
   376  001C                     	;# 
   377  001D                     	;# 
   378  001E                     	;# 
   379  001F                     	;# 
   380  0081                     	;# 
   381  0085                     	;# 
   382  0086                     	;# 
   383  0087                     	;# 
   384  0088                     	;# 
   385  0089                     	;# 
   386  008C                     	;# 
   387  008D                     	;# 
   388  008E                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  009F                     	;# 
   399  010C                     	;# 
   400  010D                     	;# 
   401  010E                     	;# 
   402  010F                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009C                     	;# 
   456  009D                     	;# 
   457  009E                     	;# 
   458  009F                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000D                     	;# 
   479  000E                     	;# 
   480  000E                     	;# 
   481  000F                     	;# 
   482  0010                     	;# 
   483  0011                     	;# 
   484  0012                     	;# 
   485  0013                     	;# 
   486  0014                     	;# 
   487  0015                     	;# 
   488  0015                     	;# 
   489  0016                     	;# 
   490  0017                     	;# 
   491  0018                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  001B                     	;# 
   495  001B                     	;# 
   496  001C                     	;# 
   497  001D                     	;# 
   498  001E                     	;# 
   499  001F                     	;# 
   500  0081                     	;# 
   501  0085                     	;# 
   502  0086                     	;# 
   503  0087                     	;# 
   504  0088                     	;# 
   505  0089                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  008E                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0093                     	;# 
   512  0094                     	;# 
   513  0098                     	;# 
   514  0099                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  018C                     	;# 
   524  018D                     	;# 
   525  0000                     	;# 
   526  0001                     	;# 
   527  0002                     	;# 
   528  0003                     	;# 
   529  0004                     	;# 
   530  0005                     	;# 
   531  0006                     	;# 
   532  0007                     	;# 
   533  0008                     	;# 
   534  0009                     	;# 
   535  000A                     	;# 
   536  000B                     	;# 
   537  000C                     	;# 
   538  000D                     	;# 
   539  000E                     	;# 
   540  000E                     	;# 
   541  000F                     	;# 
   542  0010                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0013                     	;# 
   546  0014                     	;# 
   547  0015                     	;# 
   548  0015                     	;# 
   549  0016                     	;# 
   550  0017                     	;# 
   551  0018                     	;# 
   552  0019                     	;# 
   553  001A                     	;# 
   554  001B                     	;# 
   555  001B                     	;# 
   556  001C                     	;# 
   557  001D                     	;# 
   558  001E                     	;# 
   559  001F                     	;# 
   560  0081                     	;# 
   561  0085                     	;# 
   562  0086                     	;# 
   563  0087                     	;# 
   564  0088                     	;# 
   565  0089                     	;# 
   566  008C                     	;# 
   567  008D                     	;# 
   568  008E                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0094                     	;# 
   573  0098                     	;# 
   574  0099                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009E                     	;# 
   578  009F                     	;# 
   579  010C                     	;# 
   580  010D                     	;# 
   581  010E                     	;# 
   582  010F                     	;# 
   583  018C                     	;# 
   584  018D                     	;# 
   585  0000                     	;# 
   586  0001                     	;# 
   587  0002                     	;# 
   588  0003                     	;# 
   589  0004                     	;# 
   590  0005                     	;# 
   591  0006                     	;# 
   592  0007                     	;# 
   593  0008                     	;# 
   594  0009                     	;# 
   595  000A                     	;# 
   596  000B                     	;# 
   597  000C                     	;# 
   598  000D                     	;# 
   599  000E                     	;# 
   600  000E                     	;# 
   601  000F                     	;# 
   602  0010                     	;# 
   603  0011                     	;# 
   604  0012                     	;# 
   605  0013                     	;# 
   606  0014                     	;# 
   607  0015                     	;# 
   608  0015                     	;# 
   609  0016                     	;# 
   610  0017                     	;# 
   611  0018                     	;# 
   612  0019                     	;# 
   613  001A                     	;# 
   614  001B                     	;# 
   615  001B                     	;# 
   616  001C                     	;# 
   617  001D                     	;# 
   618  001E                     	;# 
   619  001F                     	;# 
   620  0081                     	;# 
   621  0085                     	;# 
   622  0086                     	;# 
   623  0087                     	;# 
   624  0088                     	;# 
   625  0089                     	;# 
   626  008C                     	;# 
   627  008D                     	;# 
   628  008E                     	;# 
   629  0091                     	;# 
   630  0092                     	;# 
   631  0093                     	;# 
   632  0094                     	;# 
   633  0098                     	;# 
   634  0099                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  009F                     	;# 
   639  010C                     	;# 
   640  010D                     	;# 
   641  010E                     	;# 
   642  010F                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  000E                     	;# 
   661  000F                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001B                     	;# 
   676  001C                     	;# 
   677  001D                     	;# 
   678  001E                     	;# 
   679  001F                     	;# 
   680  0081                     	;# 
   681  0085                     	;# 
   682  0086                     	;# 
   683  0087                     	;# 
   684  0088                     	;# 
   685  0089                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0098                     	;# 
   694  0099                     	;# 
   695  009C                     	;# 
   696  009D                     	;# 
   697  009E                     	;# 
   698  009F                     	;# 
   699  010C                     	;# 
   700  010D                     	;# 
   701  010E                     	;# 
   702  010F                     	;# 
   703  018C                     	;# 
   704  018D                     	;# 
   705                           
   706                           	psect	idataCOMMON
   707  07FF                     __pidataCOMMON:	
   708                           
   709                           ;initializer for _power_mode
   710  07FF  3401               	retlw	1
   711                           
   712                           	psect	idataBANK0
   713  07FD                     __pidataBANK0:	
   714                           
   715                           ;initializer for _down_sw
   716  07FD  3403               	retlw	3
   717                           
   718                           ;initializer for _up_sw
   719  07FE  3403               	retlw	3
   720  0010                     _T1CON	set	16
   721  000F                     _TMR1H	set	15
   722  000E                     _TMR1L	set	14
   723  000C                     _PIR1	set	12
   724  0007                     _PORTC	set	7
   725  0006                     _PORTB	set	6
   726  000B                     _INTCON	set	11
   727  0005                     _PORTA	set	5
   728  0008                     _PORTD	set	8
   729  0013                     _SSPBUF	set	19
   730  0014                     _SSPCON	set	20
   731  001E                     _ADRESH	set	30
   732  001F                     _ADCON0	set	31
   733  0063                     _SSPIF	set	99
   734  008C                     _PIE1	set	140
   735  0086                     _TRISB	set	134
   736  0085                     _TRISA	set	133
   737  0088                     _TRISD	set	136
   738  0087                     _TRISC	set	135
   739  0093                     _SSPADD	set	147
   740  0091                     _SSPCON2	set	145
   741  0094                     _SSPSTAT	set	148
   742  009E                     _ADRESL	set	158
   743  009F                     _ADCON1	set	159
   744                           
   745                           ; #config settings
   746  0000                     
   747                           	psect	cinit
   748  0015                     start_initialization:	
   749  0015                     __initialization:	
   750                           
   751                           ; Initialize objects allocated to BANK0
   752  0015  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   753  001A  00E6               	movwf	__pdataBANK0& (0+127)
   754  001B  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   755  0020  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   756                           
   757                           ; Initialize objects allocated to COMMON
   758  0021  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   759  0026  00FD               	movwf	__pdataCOMMON& (0+127)
   760                           
   761                           ; Clear objects allocated to BANK3
   762  0027  1783               	bsf	3,7	;select IRP bank2
   763  0028  3090               	movlw	low __pbssBANK3
   764  0029  0084               	movwf	4
   765  002A  30A4               	movlw	low (__pbssBANK3+20)
   766  002B  160A  118A  26EB  120A  118A  	fcall	clear_ram0
   767                           
   768                           ; Clear objects allocated to BANK1
   769  0030  1383               	bcf	3,7	;select IRP bank0
   770  0031  30A0               	movlw	low __pbssBANK1
   771  0032  0084               	movwf	4
   772  0033  30DC               	movlw	low (__pbssBANK1+60)
   773  0034  160A  118A  26EB  120A  118A  	fcall	clear_ram0
   774                           
   775                           ; Clear objects allocated to BANK0
   776  0039  01E0               	clrf	__pbssBANK0& (0+127)
   777  003A  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   778  003B  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   779  003C  01E3               	clrf	(__pbssBANK0+3)& (0+127)
   780  003D  01E4               	clrf	(__pbssBANK0+4)& (0+127)
   781  003E  01E5               	clrf	(__pbssBANK0+5)& (0+127)
   782                           
   783                           ; Clear objects allocated to COMMON
   784  003F  01FB               	clrf	__pbssCOMMON& (0+127)
   785  0040  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   786  0041                     end_of_initialization:	
   787                           ;End of C runtime variable initialization code
   788                           
   789  0041                     __end_of__initialization:	
   790  0041  0183               	clrf	3
   791  0042  120A  118A  2F6E   	ljmp	_main	;jump to C main() function
   792                           
   793                           	psect	bssCOMMON
   794  007B                     __pbssCOMMON:	
   795  007B                     _timer_value:	
   796  007B                     	ds	2
   797                           
   798                           	psect	dataCOMMON
   799  007D                     __pdataCOMMON:	
   800  007D                     _power_mode:	
   801  007D                     	ds	1
   802                           
   803                           	psect	bssBANK0
   804  0060                     __pbssBANK0:	
   805  0060                     _i:	
   806  0060                     	ds	1
   807  0061                     _blink:	
   808  0061                     	ds	1
   809  0062                     _temp:	
   810  0062                     	ds	1
   811  0063                     _mode:	
   812  0063                     	ds	1
   813  0064                     _measured_temp:	
   814  0064                     	ds	1
   815  0065                     _set_temp:	
   816  0065                     	ds	1
   817                           
   818                           	psect	dataBANK0
   819  0066                     __pdataBANK0:	
   820  0066                     _down_sw:	
   821  0066                     	ds	1
   822  0067                     _up_sw:	
   823  0067                     	ds	1
   824                           
   825                           	psect	bssBANK1
   826  00A0                     __pbssBANK1:	
   827  00A0                     _SCH_tasks_G:	
   828  00A0                     	ds	48
   829  00D0                     _Error_tick_count_G:	
   830  00D0                     	ds	2
   831  00D2                     _samples:	
   832  00D2                     	ds	2
   833  00D4                     _switch_wait:	
   834  00D4                     	ds	2
   835  00D6                     _Error_code_G:	
   836  00D6                     	ds	1
   837  00D7                     _Last_error_code_G:	
   838  00D7                     	ds	1
   839  00D8                     _state:	
   840  00D8                     	ds	1
   841  00D9                     _ssd_select:	
   842  00D9                     	ds	1
   843  00DA                     _ones:	
   844  00DA                     	ds	1
   845  00DB                     _tens:	
   846  00DB                     	ds	1
   847                           
   848                           	psect	bssBANK3
   849  0190                     __pbssBANK3:	
   850  0190                     _temp_hold_array:	
   851  0190                     	ds	20
   852                           
   853                           	psect	clrtext
   854  16EB                     clear_ram0:	
   855                           ;	Called with FSR containing the base address, and
   856                           ;	W with the last address+1
   857                           
   858  16EB  0064               	clrwdt	;clear the watchdog before getting into this loop
   859  16EC                     clrloop0:	
   860  16EC  0180               	clrf	0	;clear RAM location pointed to by FSR
   861  16ED  0A84               	incf	4,f	;increment pointer
   862  16EE  0604               	xorwf	4,w	;XOR with final address
   863  16EF  1903               	btfsc	3,2	;have we reached the end yet?
   864  16F0  3400               	retlw	0	;all done for this memory range, return
   865  16F1  0604               	xorwf	4,w	;XOR again to restore value
   866  16F2  2EEC               	goto	clrloop0	;do the next byte
   867                           
   868                           	psect	cstackBANK1
   869  00DC                     __pcstackBANK1:	
   870  00DC                     ??_temp_sensor_read:	
   871                           
   872                           ; 1 bytes @ 0x0
   873  00DC                     	ds	5
   874  00E1                     ??_SCH_Dispatch_Tasks:	
   875                           
   876                           ; 1 bytes @ 0x5
   877  00E1                     	ds	3
   878  00E4                     SCH_Dispatch_Tasks@Index:	
   879                           
   880                           ; 1 bytes @ 0x8
   881  00E4                     	ds	1
   882                           
   883                           	psect	cstackCOMMON
   884  0070                     __pcstackCOMMON:	
   885  0070                     ?_temp_sensor_init:	
   886  0070                     ?_temp_control_init:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_switch_init:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_ssd_init:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_EEPROM_init:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_SCH_Init:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_get_set_temp:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_temp_sensor_read:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_ssd_update:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_led:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_temp_set:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_switch_scan:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_ssd_blink:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ?_SCH_Dispatch_Tasks:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ?_sw_action:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ?_temp_control_off:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_SCH_Stop:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_SCH_Start:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ??_SCH_Start:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_SCH_Delete_Task:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_SCH_Report_Status:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_main:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_ADC_Init:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_I2C_Wait:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ?_I2C1_Start:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_I2C1_Stop:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_I2C1_Wr:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_I2C1_Rd:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ?_display7s:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ?_ssd_turn_off:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     ?_average:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_SCH_Update:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ?_SCH_Go_To_Sleep:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ?i1_ssd_turn_off:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ??i1_ssd_turn_off:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?i1_temp_control_off:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ??i1_temp_control_off:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?i1___bmul:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     i1___bmul@multiplicand:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x0
  1002  0070                     	ds	1
  1003  0071                     ??i1___bmul:	
  1004                           
  1005                           ; 1 bytes @ 0x1
  1006  0071                     	ds	1
  1007  0072                     i1___bmul@multiplier:	
  1008                           
  1009                           ; 1 bytes @ 0x2
  1010  0072                     	ds	1
  1011  0073                     i1___bmul@product:	
  1012                           
  1013                           ; 1 bytes @ 0x3
  1014  0073                     	ds	1
  1015  0074                     ??_SCH_Stop:	
  1016                           
  1017                           ; 1 bytes @ 0x4
  1018  0074                     	ds	4
  1019  0078                     SCH_Stop@i:	
  1020                           
  1021                           ; 2 bytes @ 0x8
  1022  0078                     	ds	2
  1023  007A                     SCH_Update@Index:	
  1024                           
  1025                           ; 1 bytes @ 0xA
  1026  007A                     	ds	1
  1027                           
  1028                           	psect	cstackBANK0
  1029  0020                     __pcstackBANK0:	
  1030  0020                     ??_SCH_Update:	
  1031                           
  1032                           ; 1 bytes @ 0x0
  1033  0020                     	ds	8
  1034  0028                     ??_temp_control_init:	
  1035  0028                     ??_switch_init:	
  1036                           ; 1 bytes @ 0x8
  1037                           
  1038  0028                     ??_ssd_init:	
  1039                           ; 1 bytes @ 0x8
  1040                           
  1041  0028                     ??_led:	
  1042                           ; 1 bytes @ 0x8
  1043                           
  1044  0028                     ??_temp_control_off:	
  1045                           ; 1 bytes @ 0x8
  1046                           
  1047  0028                     ??_SCH_Report_Status:	
  1048                           ; 1 bytes @ 0x8
  1049                           
  1050  0028                     ??_ADC_Init:	
  1051                           ; 1 bytes @ 0x8
  1052                           
  1053  0028                     ??_I2C_Wait:	
  1054                           ; 1 bytes @ 0x8
  1055                           
  1056  0028                     ??_I2C1_Start:	
  1057                           ; 1 bytes @ 0x8
  1058                           
  1059  0028                     ??_I2C1_Stop:	
  1060                           ; 1 bytes @ 0x8
  1061                           
  1062  0028                     ??_I2C1_Wr:	
  1063                           ; 1 bytes @ 0x8
  1064                           
  1065  0028                     ??_I2C1_Rd:	
  1066                           ; 1 bytes @ 0x8
  1067                           
  1068  0028                     ??_display7s:	
  1069                           ; 1 bytes @ 0x8
  1070                           
  1071  0028                     ??_ssd_turn_off:	
  1072                           ; 1 bytes @ 0x8
  1073                           
  1074  0028                     ??_SCH_Go_To_Sleep:	
  1075                           ; 1 bytes @ 0x8
  1076                           
  1077  0028                     ?___bmul:	
  1078                           ; 1 bytes @ 0x8
  1079                           
  1080  0028                     ?__Umul8_16:	
  1081                           ; 1 bytes @ 0x8
  1082                           
  1083  0028                     ?_ADC_Read:	
  1084                           ; 2 bytes @ 0x8
  1085                           
  1086  0028                     ?___awdiv:	
  1087                           ; 2 bytes @ 0x8
  1088                           
  1089  0028                     ?___awmod:	
  1090                           ; 2 bytes @ 0x8
  1091                           
  1092  0028                     ?___lwdiv:	
  1093                           ; 2 bytes @ 0x8
  1094                           
  1095  0028                     ?___lldiv:	
  1096                           ; 2 bytes @ 0x8
  1097                           
  1098  0028                     I2C1_Wr@_data:	
  1099                           ; 4 bytes @ 0x8
  1100                           
  1101  0028                     ___bmul@multiplicand:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104  0028                     __Umul8_16@multiplicand:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107  0028                     ___awdiv@divisor:	
  1108                           ; 1 bytes @ 0x8
  1109                           
  1110  0028                     ___awmod@divisor:	
  1111                           ; 2 bytes @ 0x8
  1112                           
  1113  0028                     ___lwdiv@divisor:	
  1114                           ; 2 bytes @ 0x8
  1115                           
  1116  0028                     ___lldiv@divisor:	
  1117                           ; 2 bytes @ 0x8
  1118                           
  1119                           
  1120                           ; 4 bytes @ 0x8
  1121  0028                     	ds	1
  1122  0029                     ??_temp_sensor_init:	
  1123  0029                     ??_temp_set:	
  1124                           ; 1 bytes @ 0x9
  1125                           
  1126  0029                     ??_ssd_blink:	
  1127                           ; 1 bytes @ 0x9
  1128                           
  1129  0029                     ?_EEPROM_write:	
  1130                           ; 1 bytes @ 0x9
  1131                           
  1132  0029                     ?_EEPROM_read:	
  1133                           ; 1 bytes @ 0x9
  1134                           
  1135  0029                     ??___bmul:	
  1136                           ; 1 bytes @ 0x9
  1137                           
  1138  0029                     EEPROM_write@address:	
  1139                           ; 1 bytes @ 0x9
  1140                           
  1141  0029                     EEPROM_read@address:	
  1142                           ; 2 bytes @ 0x9
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x9
  1146  0029                     	ds	1
  1147  002A                     ??__Umul8_16:	
  1148  002A                     ??_ADC_Read:	
  1149                           ; 1 bytes @ 0xA
  1150                           
  1151  002A                     display7s@v:	
  1152                           ; 1 bytes @ 0xA
  1153                           
  1154  002A                     ___bmul@product:	
  1155                           ; 1 bytes @ 0xA
  1156                           
  1157  002A                     ___awdiv@dividend:	
  1158                           ; 1 bytes @ 0xA
  1159                           
  1160  002A                     ___awmod@dividend:	
  1161                           ; 2 bytes @ 0xA
  1162                           
  1163  002A                     ___lwdiv@dividend:	
  1164                           ; 2 bytes @ 0xA
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0xA
  1168  002A                     	ds	1
  1169  002B                     ??_EEPROM_read:	
  1170  002B                     EEPROM_write@_x:	
  1171                           ; 1 bytes @ 0xB
  1172                           
  1173  002B                     ___bmul@multiplier:	
  1174                           ; 1 bytes @ 0xB
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0xB
  1178  002B                     	ds	1
  1179  002C                     ?_SCH_Add_Task:	
  1180  002C                     ??_sw_action:	
  1181                           ; 1 bytes @ 0xC
  1182                           
  1183  002C                     ??_SCH_Delete_Task:	
  1184                           ; 1 bytes @ 0xC
  1185                           
  1186  002C                     ??_EEPROM_write:	
  1187                           ; 1 bytes @ 0xC
  1188                           
  1189  002C                     ??___awdiv:	
  1190                           ; 1 bytes @ 0xC
  1191                           
  1192  002C                     ??___awmod:	
  1193                           ; 1 bytes @ 0xC
  1194                           
  1195  002C                     ??___lwdiv:	
  1196                           ; 1 bytes @ 0xC
  1197                           
  1198  002C                     ADC_Read@channel:	
  1199                           ; 1 bytes @ 0xC
  1200                           
  1201  002C                     EEPROM_read@_x:	
  1202                           ; 1 bytes @ 0xC
  1203                           
  1204  002C                     SCH_Add_Task@DELAY:	
  1205                           ; 1 bytes @ 0xC
  1206                           
  1207  002C                     __Umul8_16@product:	
  1208                           ; 2 bytes @ 0xC
  1209                           
  1210  002C                     ___lldiv@dividend:	
  1211                           ; 2 bytes @ 0xC
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0xC
  1215  002C                     	ds	1
  1216  002D                     ??_get_set_temp:	
  1217  002D                     ?___xxtofl:	
  1218                           ; 1 bytes @ 0xD
  1219                           
  1220  002D                     ___awdiv@counter:	
  1221                           ; 4 bytes @ 0xD
  1222                           
  1223  002D                     ___awmod@counter:	
  1224                           ; 1 bytes @ 0xD
  1225                           
  1226  002D                     ___lwdiv@quotient:	
  1227                           ; 1 bytes @ 0xD
  1228                           
  1229  002D                     ___xxtofl@val:	
  1230                           ; 2 bytes @ 0xD
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0xD
  1234  002D                     	ds	1
  1235  002E                     ??_switch_scan:	
  1236  002E                     SCH_Delete_Task@TASK_INDEX:	
  1237                           ; 1 bytes @ 0xE
  1238                           
  1239  002E                     ___awdiv@sign:	
  1240                           ; 1 bytes @ 0xE
  1241                           
  1242  002E                     ___awmod@sign:	
  1243                           ; 1 bytes @ 0xE
  1244                           
  1245  002E                     SCH_Add_Task@PERIOD:	
  1246                           ; 1 bytes @ 0xE
  1247                           
  1248  002E                     __Umul8_16@word_mpld:	
  1249                           ; 2 bytes @ 0xE
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0xE
  1253  002E                     	ds	1
  1254  002F                     ??_SCH_Init:	
  1255  002F                     ___lwdiv@counter:	
  1256                           ; 1 bytes @ 0xF
  1257                           
  1258  002F                     ___awdiv@quotient:	
  1259                           ; 1 bytes @ 0xF
  1260                           
  1261                           
  1262                           ; 2 bytes @ 0xF
  1263  002F                     	ds	1
  1264  0030                     ??_SCH_Add_Task:	
  1265  0030                     ??_average:	
  1266                           ; 1 bytes @ 0x10
  1267                           
  1268  0030                     ??___lldiv:	
  1269                           ; 1 bytes @ 0x10
  1270                           
  1271  0030                     SCH_Init@i:	
  1272                           ; 1 bytes @ 0x10
  1273                           
  1274  0030                     __Umul8_16@multiplier:	
  1275                           ; 1 bytes @ 0x10
  1276                           
  1277                           
  1278                           ; 1 bytes @ 0x10
  1279  0030                     	ds	1
  1280  0031                     ??_ssd_update:	
  1281  0031                     ??___xxtofl:	
  1282                           ; 1 bytes @ 0x11
  1283                           
  1284  0031                     ___lldiv@quotient:	
  1285                           ; 1 bytes @ 0x11
  1286                           
  1287                           
  1288                           ; 4 bytes @ 0x11
  1289  0031                     	ds	1
  1290  0032                     SCH_Add_Task@pFunction:	
  1291                           
  1292                           ; 1 bytes @ 0x12
  1293  0032                     	ds	1
  1294  0033                     SCH_Add_Task@Index:	
  1295  0033                     average@sum:	
  1296                           ; 1 bytes @ 0x13
  1297                           
  1298                           
  1299                           ; 2 bytes @ 0x13
  1300  0033                     	ds	2
  1301  0035                     average@i:	
  1302  0035                     ___lldiv@counter:	
  1303                           ; 1 bytes @ 0x15
  1304                           
  1305  0035                     ___xxtofl@sign:	
  1306                           ; 1 bytes @ 0x15
  1307                           
  1308                           
  1309                           ; 1 bytes @ 0x15
  1310  0035                     	ds	1
  1311  0036                     ?_I2C1_Init:	
  1312  0036                     ___xxtofl@exp:	
  1313                           ; 1 bytes @ 0x16
  1314                           
  1315  0036                     I2C1_Init@freq:	
  1316                           ; 1 bytes @ 0x16
  1317                           
  1318                           
  1319                           ; 4 bytes @ 0x16
  1320  0036                     	ds	1
  1321  0037                     ___xxtofl@arg:	
  1322                           
  1323                           ; 4 bytes @ 0x17
  1324  0037                     	ds	3
  1325  003A                     ??_I2C1_Init:	
  1326                           
  1327                           ; 1 bytes @ 0x1A
  1328  003A                     	ds	1
  1329  003B                     ?___fldiv:	
  1330  003B                     ?___flmul:	
  1331                           ; 4 bytes @ 0x1B
  1332                           
  1333  003B                     ___fldiv@a:	
  1334                           ; 4 bytes @ 0x1B
  1335                           
  1336  003B                     ___flmul@b:	
  1337                           ; 4 bytes @ 0x1B
  1338                           
  1339                           
  1340                           ; 4 bytes @ 0x1B
  1341  003B                     	ds	3
  1342  003E                     ??_EEPROM_init:	
  1343                           
  1344                           ; 1 bytes @ 0x1E
  1345  003E                     	ds	1
  1346  003F                     ___fldiv@b:	
  1347  003F                     ___flmul@a:	
  1348                           ; 4 bytes @ 0x1F
  1349                           
  1350                           
  1351                           ; 4 bytes @ 0x1F
  1352  003F                     	ds	4
  1353  0043                     ??___fldiv:	
  1354  0043                     ??___flmul:	
  1355                           ; 1 bytes @ 0x23
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x23
  1359  0043                     	ds	5
  1360  0048                     ___flmul@sign:	
  1361  0048                     ___fldiv@rem:	
  1362                           ; 1 bytes @ 0x28
  1363                           
  1364                           
  1365                           ; 4 bytes @ 0x28
  1366  0048                     	ds	1
  1367  0049                     ___flmul@grs:	
  1368                           
  1369                           ; 4 bytes @ 0x29
  1370  0049                     	ds	3
  1371  004C                     ___fldiv@sign:	
  1372                           
  1373                           ; 1 bytes @ 0x2C
  1374  004C                     	ds	1
  1375  004D                     ___flmul@aexp:	
  1376  004D                     ___fldiv@new_exp:	
  1377                           ; 1 bytes @ 0x2D
  1378                           
  1379                           
  1380                           ; 2 bytes @ 0x2D
  1381  004D                     	ds	1
  1382  004E                     ___flmul@bexp:	
  1383                           
  1384                           ; 1 bytes @ 0x2E
  1385  004E                     	ds	1
  1386  004F                     ___fldiv@grs:	
  1387  004F                     ___flmul@prod:	
  1388                           ; 4 bytes @ 0x2F
  1389                           
  1390                           
  1391                           ; 4 bytes @ 0x2F
  1392  004F                     	ds	4
  1393  0053                     ___fldiv@bexp:	
  1394  0053                     ___flmul@temp:	
  1395                           ; 1 bytes @ 0x33
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x33
  1399  0053                     	ds	1
  1400  0054                     ___fldiv@aexp:	
  1401                           
  1402                           ; 1 bytes @ 0x34
  1403  0054                     	ds	1
  1404  0055                     ?___fltol:	
  1405  0055                     ___fltol@f1:	
  1406                           ; 4 bytes @ 0x35
  1407                           
  1408                           
  1409                           ; 4 bytes @ 0x35
  1410  0055                     	ds	4
  1411  0059                     ??___fltol:	
  1412                           
  1413                           ; 1 bytes @ 0x39
  1414  0059                     	ds	5
  1415  005E                     ___fltol@sign1:	
  1416                           
  1417                           ; 1 bytes @ 0x3E
  1418  005E                     	ds	1
  1419  005F                     ___fltol@exp1:	
  1420                           
  1421                           ; 1 bytes @ 0x3F
  1422  005F                     	ds	1
  1423  0060                     ??_main:	
  1424                           
  1425                           	psect	maintext
  1426  076E                     __pmaintext:	
  1427                           ; 1 bytes @ 0x40
  1428 ;;
  1429 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1430 ;;
  1431 ;; *************** function _main *****************
  1432 ;; Defined at:
  1433 ;;		line 31 in file "main_app.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : B00/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels required when called:    9
  1453 ;; This function calls:
  1454 ;;		_EEPROM_init
  1455 ;;		_SCH_Add_Task
  1456 ;;		_SCH_Dispatch_Tasks
  1457 ;;		_SCH_Init
  1458 ;;		_ssd_init
  1459 ;;		_switch_init
  1460 ;;		_temp_control_init
  1461 ;;		_temp_sensor_init
  1462 ;; This function is called by:
  1463 ;;		Startup code after reset
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _main
  1469  076E                     _main:	
  1470  076E                     l3528:	
  1471                           ;incstack = 0
  1472 ;; hardware stack exceeded
  1473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1474                           
  1475                           
  1476                           ;main_app.c: 33:     temp_sensor_init();
  1477  076E  160A  118A  2705  120A  118A  	fcall	_temp_sensor_init
  1478                           
  1479                           ;main_app.c: 34:     temp_control_init();
  1480  0773  120A  158A  203F  120A  118A  	fcall	_temp_control_init
  1481  0778                     l3530:	
  1482                           
  1483                           ;main_app.c: 35:     switch_init();
  1484  0778  160A  118A  26E4  120A  118A  	fcall	_switch_init
  1485  077D                     l3532:	
  1486                           
  1487                           ;main_app.c: 36:     ssd_init();
  1488  077D  160A  118A  27C0  120A  118A  	fcall	_ssd_init
  1489  0782                     l3534:	
  1490                           
  1491                           ;main_app.c: 37:     EEPROM_init();
  1492  0782  160A  118A  275F  120A  118A  	fcall	_EEPROM_init
  1493  0787                     l3536:	
  1494                           
  1495                           ;main_app.c: 38:     SCH_Init();
  1496  0787  120A  158A  210D  120A  118A  	fcall	_SCH_Init
  1497  078C                     l3538:	
  1498                           
  1499                           ;main_app.c: 67:     SCH_Add_Task(get_set_temp , 0 , 0);
  1500  078C  3000               	movlw	0
  1501  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1502  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1503  078F  00AC               	movwf	SCH_Add_Task@DELAY
  1504  0790  00AD               	movwf	SCH_Add_Task@DELAY+1
  1505  0791  3000               	movlw	0
  1506  0792  00AE               	movwf	SCH_Add_Task@PERIOD
  1507  0793  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1508  0794  3004               	movlw	(low (fp__get_set_temp-fpbase))& (0+255)
  1509  0795  120A  158A  24AF  120A  118A  	fcall	_SCH_Add_Task
  1510  079A                     l3540:	
  1511                           
  1512                           ;main_app.c: 68:     SCH_Add_Task(temp_sensor_read , 0 , (100));
  1513  079A  3000               	movlw	0
  1514  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1515  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1516  079D  00AC               	movwf	SCH_Add_Task@DELAY
  1517  079E  00AD               	movwf	SCH_Add_Task@DELAY+1
  1518  079F  3064               	movlw	100
  1519  07A0  00AE               	movwf	SCH_Add_Task@PERIOD
  1520  07A1  3000               	movlw	0
  1521  07A2  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1522  07A3  3007               	movlw	(low (fp__temp_sensor_read-fpbase))& (0+255)
  1523  07A4  120A  158A  24AF  120A  118A  	fcall	_SCH_Add_Task
  1524  07A9                     l3542:	
  1525                           
  1526                           ;main_app.c: 69:     SCH_Add_Task(ssd_update , 0 , (20));
  1527  07A9  3000               	movlw	0
  1528  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1529  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1530  07AC  00AC               	movwf	SCH_Add_Task@DELAY
  1531  07AD  00AD               	movwf	SCH_Add_Task@DELAY+1
  1532  07AE  3014               	movlw	20
  1533  07AF  00AE               	movwf	SCH_Add_Task@PERIOD
  1534  07B0  3000               	movlw	0
  1535  07B1  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1536  07B2  300A               	movlw	(low (fp__ssd_update-fpbase))& (0+255)
  1537  07B3  120A  158A  24AF  120A  118A  	fcall	_SCH_Add_Task
  1538  07B8                     l3544:	
  1539                           
  1540                           ;main_app.c: 70:     SCH_Add_Task(led , 0 , (1000));
  1541  07B8  3000               	movlw	0
  1542  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1543  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1544  07BB  00AC               	movwf	SCH_Add_Task@DELAY
  1545  07BC  00AD               	movwf	SCH_Add_Task@DELAY+1
  1546  07BD  30E8               	movlw	232
  1547  07BE  00AE               	movwf	SCH_Add_Task@PERIOD
  1548  07BF  3003               	movlw	3
  1549  07C0  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1550  07C1  300D               	movlw	(low (fp__led-fpbase))& (0+255)
  1551  07C2  120A  158A  24AF  120A  118A  	fcall	_SCH_Add_Task
  1552  07C7                     l3546:	
  1553                           
  1554                           ;main_app.c: 71:     SCH_Add_Task(temp_set , 0 , (100));
  1555  07C7  3000               	movlw	0
  1556  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1557  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1558  07CA  00AC               	movwf	SCH_Add_Task@DELAY
  1559  07CB  00AD               	movwf	SCH_Add_Task@DELAY+1
  1560  07CC  3064               	movlw	100
  1561  07CD  00AE               	movwf	SCH_Add_Task@PERIOD
  1562  07CE  3000               	movlw	0
  1563  07CF  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1564  07D0  3001               	movlw	(low (fp__temp_set-fpbase))& (0+255)
  1565  07D1  120A  158A  24AF  120A  118A  	fcall	_SCH_Add_Task
  1566  07D6                     l3548:	
  1567                           
  1568                           ;main_app.c: 72:     SCH_Add_Task(switch_scan , 0 , (200));
  1569  07D6  3000               	movlw	0
  1570  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1571  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1572  07D9  00AC               	movwf	SCH_Add_Task@DELAY
  1573  07DA  00AD               	movwf	SCH_Add_Task@DELAY+1
  1574  07DB  30C8               	movlw	200
  1575  07DC  00AE               	movwf	SCH_Add_Task@PERIOD
  1576  07DD  3000               	movlw	0
  1577  07DE  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1578  07DF  3010               	movlw	(low (fp__switch_scan-fpbase))& (0+255)
  1579  07E0  120A  158A  24AF  120A  118A  	fcall	_SCH_Add_Task
  1580  07E5                     l3550:	
  1581                           
  1582                           ;main_app.c: 73:     SCH_Add_Task(ssd_blink , 0 , (1000));
  1583  07E5  3000               	movlw	0
  1584  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1585  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1586  07E8  00AC               	movwf	SCH_Add_Task@DELAY
  1587  07E9  00AD               	movwf	SCH_Add_Task@DELAY+1
  1588  07EA  30E8               	movlw	232
  1589  07EB  00AE               	movwf	SCH_Add_Task@PERIOD
  1590  07EC  3003               	movlw	3
  1591  07ED  00AF               	movwf	SCH_Add_Task@PERIOD+1
  1592  07EE  3013               	movlw	(low (fp__ssd_blink-fpbase))& (0+255)
  1593  07EF  120A  158A  24AF  120A  118A  	fcall	_SCH_Add_Task
  1594  07F4                     l3552:	
  1595                           
  1596                           ;main_app.c: 78:         SCH_Dispatch_Tasks();
  1597  07F4  120A  158A  25A1  120A  118A  	fcall	_SCH_Dispatch_Tasks
  1598  07F9  2FF4               	goto	l3552
  1599  07FA  120A  118A  2812   	ljmp	start
  1600  07FD                     __end_of_main:	
  1601                           
  1602                           	psect	text1
  1603  1705                     __ptext1:	
  1604 ;; *************** function _temp_sensor_init *****************
  1605 ;; Defined at:
  1606 ;;		line 17 in file "temp_sensor.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    4
  1627 ;; This function calls:
  1628 ;;		_ADC_Init
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _temp_sensor_init
  1636  1705                     _temp_sensor_init:	
  1637  1705                     l3178:	
  1638                           ;incstack = 0
  1639                           ; Regs used in _temp_sensor_init: [wreg+status,2+status,0+pclath+cstack]
  1640                           
  1641                           
  1642                           ;temp_sensor.c: 18:     ADC_Init();
  1643  1705  120A  158A  20E1  160A  118A  	fcall	_ADC_Init
  1644  170A                     l3180:	
  1645                           
  1646                           ;temp_sensor.c: 19:     (TRISA |= (1 << 2));
  1647  170A  1683               	bsf	3,5	;RP0=1, select bank1
  1648  170B  1303               	bcf	3,6	;RP1=0, select bank1
  1649  170C  1505               	bsf	5,2	;volatile
  1650  170D                     l311:	
  1651  170D  0008               	return
  1652  170E                     __end_of_temp_sensor_init:	
  1653                           
  1654                           	psect	text2
  1655  08E1                     __ptext2:	
  1656 ;; *************** function _ADC_Init *****************
  1657 ;; Defined at:
  1658 ;;		line 8 in file "adc_drive.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0
  1674 ;;      Temps:          0       1       0       0       0
  1675 ;;      Totals:         0       1       0       0       0
  1676 ;;Total ram usage:        1 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    3
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_temp_sensor_init
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           
  1687                           ;psect for function _ADC_Init
  1688  08E1                     _ADC_Init:	
  1689  08E1                     l3010:	
  1690                           ;incstack = 0
  1691                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  1692                           
  1693                           
  1694                           ;adc_drive.c: 10:     (ADCON0 |= (1 << 7));
  1695  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  1696  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  1697  08E3  179F               	bsf	31,7	;volatile
  1698                           
  1699                           ;adc_drive.c: 11:     (ADCON0 |= (1 << 6));
  1700  08E4  171F               	bsf	31,6	;volatile
  1701                           
  1702                           ;adc_drive.c: 12:     (ADCON1 |= (1 << 6));
  1703  08E5  1683               	bsf	3,5	;RP0=1, select bank1
  1704  08E6  1303               	bcf	3,6	;RP1=0, select bank1
  1705  08E7  171F               	bsf	31,6	;volatile
  1706                           
  1707                           ;adc_drive.c: 14:     (ADCON1 |= (1 << 7));
  1708  08E8  179F               	bsf	31,7	;volatile
  1709  08E9                     l3012:	
  1710                           
  1711                           ;adc_drive.c: 16:     (ADCON1 &= ~(1 << 0));
  1712  08E9  30FE               	movlw	254
  1713  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  1714  08EB  1303               	bcf	3,6	;RP1=0, select bank0
  1715  08EC  00A8               	movwf	??_ADC_Init
  1716  08ED  0828               	movf	??_ADC_Init,w
  1717  08EE  1683               	bsf	3,5	;RP0=1, select bank1
  1718  08EF  1303               	bcf	3,6	;RP1=0, select bank1
  1719  08F0  059F               	andwf	31,f	;volatile
  1720                           
  1721                           ;adc_drive.c: 17:     (ADCON1 &= ~(1 << 1));
  1722  08F1  30FD               	movlw	253
  1723  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1724  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1725  08F4  00A8               	movwf	??_ADC_Init
  1726  08F5  0828               	movf	??_ADC_Init,w
  1727  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  1728  08F7  1303               	bcf	3,6	;RP1=0, select bank1
  1729  08F8  059F               	andwf	31,f	;volatile
  1730                           
  1731                           ;adc_drive.c: 18:     (ADCON1 &= ~(1 << 2));
  1732  08F9  30FB               	movlw	251
  1733  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  1734  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  1735  08FC  00A8               	movwf	??_ADC_Init
  1736  08FD  0828               	movf	??_ADC_Init,w
  1737  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  1738  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  1739  0900  059F               	andwf	31,f	;volatile
  1740                           
  1741                           ;adc_drive.c: 19:     (ADCON1 &= ~(1 << 3));
  1742  0901  30F7               	movlw	247
  1743  0902  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0903  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0904  00A8               	movwf	??_ADC_Init
  1746  0905  0828               	movf	??_ADC_Init,w
  1747  0906  1683               	bsf	3,5	;RP0=1, select bank1
  1748  0907  1303               	bcf	3,6	;RP1=0, select bank1
  1749  0908  059F               	andwf	31,f	;volatile
  1750  0909                     l3014:	
  1751                           
  1752                           ;adc_drive.c: 21:     (ADCON0 |= (1 << 0));
  1753  0909  1283               	bcf	3,5	;RP0=0, select bank0
  1754  090A  1303               	bcf	3,6	;RP1=0, select bank0
  1755  090B  141F               	bsf	31,0	;volatile
  1756  090C                     l57:	
  1757  090C  0008               	return
  1758  090D                     __end_of_ADC_Init:	
  1759                           
  1760                           	psect	text3
  1761  083F                     __ptext3:	
  1762 ;; *************** function _temp_control_init *****************
  1763 ;; Defined at:
  1764 ;;		line 17 in file "temp_control.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       1       0       0       0
  1781 ;;      Totals:         0       1       0       0       0
  1782 ;;Total ram usage:        1 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    3
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function _temp_control_init
  1794  083F                     _temp_control_init:	
  1795  083F                     l3182:	
  1796                           ;incstack = 0
  1797                           ; Regs used in _temp_control_init: [wreg+status,2+status,0]
  1798                           
  1799                           
  1800                           ;temp_control.c: 19:      (TRISC &= ~(1 << 5));
  1801  083F  30DF               	movlw	223
  1802  0840  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0841  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0842  00A8               	movwf	??_temp_control_init
  1805  0843  0828               	movf	??_temp_control_init,w
  1806  0844  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0845  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0846  0587               	andwf	7,f	;volatile
  1809                           
  1810                           ;temp_control.c: 20:      (PORTC &= ~(1 << 5));
  1811  0847  30DF               	movlw	223
  1812  0848  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0849  1303               	bcf	3,6	;RP1=0, select bank0
  1814  084A  00A8               	movwf	??_temp_control_init
  1815  084B  0828               	movf	??_temp_control_init,w
  1816  084C  0587               	andwf	7,f	;volatile
  1817                           
  1818                           ;temp_control.c: 23:      (TRISC &= ~(1 << 2));
  1819  084D  30FB               	movlw	251
  1820  084E  00A8               	movwf	??_temp_control_init
  1821  084F  0828               	movf	??_temp_control_init,w
  1822  0850  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0851  1303               	bcf	3,6	;RP1=0, select bank1
  1824  0852  0587               	andwf	7,f	;volatile
  1825                           
  1826                           ;temp_control.c: 24:      (PORTC &= ~(1 << 2));
  1827  0853  30FB               	movlw	251
  1828  0854  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0855  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0856  00A8               	movwf	??_temp_control_init
  1831  0857  0828               	movf	??_temp_control_init,w
  1832  0858  0587               	andwf	7,f	;volatile
  1833                           
  1834                           ;temp_control.c: 27:      (TRISB &= ~(1 << 4));
  1835  0859  30EF               	movlw	239
  1836  085A  00A8               	movwf	??_temp_control_init
  1837  085B  0828               	movf	??_temp_control_init,w
  1838  085C  1683               	bsf	3,5	;RP0=1, select bank1
  1839  085D  1303               	bcf	3,6	;RP1=0, select bank1
  1840  085E  0586               	andwf	6,f	;volatile
  1841                           
  1842                           ;temp_control.c: 28:      (PORTB &= ~(1 << 4));
  1843  085F  30EF               	movlw	239
  1844  0860  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0861  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0862  00A8               	movwf	??_temp_control_init
  1847  0863  0828               	movf	??_temp_control_init,w
  1848  0864  0586               	andwf	6,f	;volatile
  1849  0865                     l274:	
  1850  0865  0008               	return
  1851  0866                     __end_of_temp_control_init:	
  1852                           
  1853                           	psect	text4
  1854  16E4                     __ptext4:	
  1855 ;; *************** function _switch_init *****************
  1856 ;; Defined at:
  1857 ;;		line 21 in file "switchs.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		None
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1871 ;;      Params:         0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0
  1874 ;;      Totals:         0       0       0       0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    3
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           
  1886                           ;psect for function _switch_init
  1887  16E4                     _switch_init:	
  1888  16E4                     l3184:	
  1889                           ;incstack = 0
  1890                           ; Regs used in _switch_init: []
  1891                           
  1892                           
  1893                           ;switchs.c: 23:      (TRISB |= (1 << 2));
  1894  16E4  1683               	bsf	3,5	;RP0=1, select bank1
  1895  16E5  1303               	bcf	3,6	;RP1=0, select bank1
  1896  16E6  1506               	bsf	6,2	;volatile
  1897                           
  1898                           ;switchs.c: 24:      (TRISB |= (1 << 1));
  1899  16E7  1486               	bsf	6,1	;volatile
  1900                           
  1901                           ;switchs.c: 25:      (TRISB |= (1 << 0));
  1902  16E8  1406               	bsf	6,0	;volatile
  1903                           
  1904                           ;switchs.c: 26:      (INTCON |= (1 << 4));
  1905  16E9  160B               	bsf	11,4	;volatile
  1906  16EA                     l228:	
  1907  16EA  0008               	return
  1908  16EB                     __end_of_switch_init:	
  1909                           
  1910                           	psect	text5
  1911  17C0                     __ptext5:	
  1912 ;; *************** function _ssd_init *****************
  1913 ;; Defined at:
  1914 ;;		line 20 in file "SSD.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0
  1930 ;;      Temps:          0       1       0       0       0
  1931 ;;      Totals:         0       1       0       0       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    3
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _ssd_init
  1944  17C0                     _ssd_init:	
  1945  17C0                     l3186:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _ssd_init: [wreg+status,2+status,0]
  1948                           
  1949                           
  1950                           ;SSD.c: 22:      (TRISD &= ~(255 << 0));
  1951  17C0  1683               	bsf	3,5	;RP0=1, select bank1
  1952  17C1  1303               	bcf	3,6	;RP1=0, select bank1
  1953  17C2  0188               	clrf	8	;volatile
  1954                           
  1955                           ;SSD.c: 23:      (PORTD &= ~(255 << 0));
  1956  17C3  1283               	bcf	3,5	;RP0=0, select bank0
  1957  17C4  1303               	bcf	3,6	;RP1=0, select bank0
  1958  17C5  0188               	clrf	8	;volatile
  1959  17C6                     l3188:	
  1960                           
  1961                           ;SSD.c: 25:      (TRISA &= ~(1 << 4));
  1962  17C6  30EF               	movlw	239
  1963  17C7  00A8               	movwf	??_ssd_init
  1964  17C8  0828               	movf	??_ssd_init,w
  1965  17C9  1683               	bsf	3,5	;RP0=1, select bank1
  1966  17CA  1303               	bcf	3,6	;RP1=0, select bank1
  1967  17CB  0585               	andwf	5,f	;volatile
  1968  17CC                     l3190:	
  1969                           
  1970                           ;SSD.c: 26:      (PORTA &= ~(1 << 4));
  1971  17CC  30EF               	movlw	239
  1972  17CD  1283               	bcf	3,5	;RP0=0, select bank0
  1973  17CE  1303               	bcf	3,6	;RP1=0, select bank0
  1974  17CF  00A8               	movwf	??_ssd_init
  1975  17D0  0828               	movf	??_ssd_init,w
  1976  17D1  0585               	andwf	5,f	;volatile
  1977  17D2                     l3192:	
  1978                           
  1979                           ;SSD.c: 27:      (TRISA &= ~(1 << 5));
  1980  17D2  30DF               	movlw	223
  1981  17D3  00A8               	movwf	??_ssd_init
  1982  17D4  0828               	movf	??_ssd_init,w
  1983  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  1984  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  1985  17D7  0585               	andwf	5,f	;volatile
  1986  17D8                     l3194:	
  1987                           
  1988                           ;SSD.c: 28:      (PORTA &= ~(1 << 5));
  1989  17D8  30DF               	movlw	223
  1990  17D9  1283               	bcf	3,5	;RP0=0, select bank0
  1991  17DA  1303               	bcf	3,6	;RP1=0, select bank0
  1992  17DB  00A8               	movwf	??_ssd_init
  1993  17DC  0828               	movf	??_ssd_init,w
  1994  17DD  0585               	andwf	5,f	;volatile
  1995  17DE                     l154:	
  1996  17DE  0008               	return
  1997  17DF                     __end_of_ssd_init:	
  1998                           
  1999                           	psect	text6
  2000  090D                     __ptext6:	
  2001 ;; *************** function _SCH_Init *****************
  2002 ;; Defined at:
  2003 ;;		line 93 in file "Sch_16f.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  i               1   16[BANK0 ] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       0       0       0       0
  2018 ;;      Locals:         0       1       0       0       0
  2019 ;;      Temps:          0       1       0       0       0
  2020 ;;      Totals:         0       2       0       0       0
  2021 ;;Total ram usage:        2 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    5
  2024 ;; This function calls:
  2025 ;;		_SCH_Delete_Task
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _SCH_Init
  2033  090D                     _SCH_Init:	
  2034  090D                     l3198:	
  2035                           ;incstack = 0
  2036                           ; Regs used in _SCH_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2037                           
  2038                           
  2039                           ;Sch_16f.c: 95:     tByte i;;Sch_16f.c: 96:     for (i = 0; i < (8); i++)
  2040  090D  1283               	bcf	3,5	;RP0=0, select bank0
  2041  090E  1303               	bcf	3,6	;RP1=0, select bank0
  2042  090F  01B0               	clrf	SCH_Init@i
  2043  0910                     l3204:	
  2044                           
  2045                           ;Sch_16f.c: 97:     {;Sch_16f.c: 98:         SCH_Delete_Task(i);
  2046  0910  0830               	movf	SCH_Init@i,w
  2047  0911  120A  158A  2318  120A  158A  	fcall	_SCH_Delete_Task
  2048  0916                     l3206:	
  2049                           
  2050                           ;Sch_16f.c: 99:     }
  2051  0916  3001               	movlw	1
  2052  0917  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0918  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0919  00AF               	movwf	??_SCH_Init
  2055  091A  082F               	movf	??_SCH_Init,w
  2056  091B  07B0               	addwf	SCH_Init@i,f
  2057  091C                     l3208:	
  2058  091C  3008               	movlw	8
  2059  091D  0230               	subwf	SCH_Init@i,w
  2060  091E  1C03               	skipc
  2061  091F  2921               	goto	u3311
  2062  0920  2922               	goto	u3310
  2063  0921                     u3311:	
  2064  0921  2910               	goto	l3204
  2065  0922                     u3310:	
  2066  0922                     l3210:	
  2067                           
  2068                           ;Sch_16f.c: 103:     Error_code_G = 0;
  2069  0922  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0923  1303               	bcf	3,6	;RP1=0, select bank1
  2071  0924  01D6               	clrf	_Error_code_G^(0+128)
  2072  0925                     l3212:	
  2073                           
  2074                           ;Sch_16f.c: 106:     T1CON = 0X30;
  2075  0925  3030               	movlw	48
  2076  0926  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0927  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0928  0090               	movwf	16	;volatile
  2079  0929                     l3214:	
  2080                           
  2081                           ;Sch_16f.c: 107:     PIR1 &= ~ (1 << 0) ;
  2082  0929  30FE               	movlw	254
  2083  092A  00AF               	movwf	??_SCH_Init
  2084  092B  082F               	movf	??_SCH_Init,w
  2085  092C  058C               	andwf	12,f	;volatile
  2086  092D                     l3216:	
  2087                           
  2088                           ;Sch_16f.c: 108:     PIE1 |= (1 << 0);
  2089  092D  1683               	bsf	3,5	;RP0=1, select bank1
  2090  092E  1303               	bcf	3,6	;RP1=0, select bank1
  2091  092F  140C               	bsf	12,0	;volatile
  2092  0930                     l3218:	
  2093                           
  2094                           ;Sch_16f.c: 109:     INTCON |= (1 << 7);
  2095  0930  178B               	bsf	11,7	;volatile
  2096  0931                     l3220:	
  2097                           
  2098                           ;Sch_16f.c: 110:     INTCON |= (1 << 6);
  2099  0931  170B               	bsf	11,6	;volatile
  2100  0932                     l3222:	
  2101                           
  2102                           ;Sch_16f.c: 112:     timer_value = 65536 - ( ((10) * (8000000) ) / (1000 * 4 * 8 ) );
  2103  0932  303C               	movlw	60
  2104  0933  00FB               	movwf	_timer_value
  2105  0934  30F6               	movlw	246
  2106  0935  00FC               	movwf	_timer_value+1
  2107  0936                     l3224:	
  2108                           
  2109                           ;Sch_16f.c: 113:     TMR1L = timer_value ;
  2110  0936  087B               	movf	_timer_value,w
  2111  0937  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0938  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0939  008E               	movwf	14	;volatile
  2114  093A                     l3226:	
  2115                           
  2116                           ;Sch_16f.c: 114:     TMR1H = ( timer_value >> 8 ) ;
  2117  093A  087C               	movf	_timer_value+1,w
  2118  093B  008F               	movwf	15	;volatile
  2119  093C                     l379:	
  2120  093C  0008               	return
  2121  093D                     __end_of_SCH_Init:	
  2122                           
  2123                           	psect	text7
  2124  0DA1                     __ptext7:	
  2125 ;; *************** function _SCH_Dispatch_Tasks *****************
  2126 ;; Defined at:
  2127 ;;		line 191 in file "Sch_16f.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  Index           1    8[BANK1 ] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       0       0       0
  2142 ;;      Locals:         0       0       1       0       0
  2143 ;;      Temps:          0       0       3       0       0
  2144 ;;      Totals:         0       0       4       0       0
  2145 ;;Total ram usage:        4 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    8
  2148 ;; This function calls:
  2149 ;;		Absolute function
  2150 ;;		_SCH_Delete_Task
  2151 ;;		_SCH_Go_To_Sleep
  2152 ;;		_SCH_Report_Status
  2153 ;;		___bmul
  2154 ;;		_get_set_temp
  2155 ;;		_led
  2156 ;;		_ssd_blink
  2157 ;;		_ssd_update
  2158 ;;		_switch_scan
  2159 ;;		_temp_sensor_read
  2160 ;;		_temp_set
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function _SCH_Dispatch_Tasks
  2168  0DA1                     _SCH_Dispatch_Tasks:	
  2169  0DA1                     l3506:	
  2170                           ;incstack = 0
  2171 ;; hardware stack exceeded
  2172                           ; Regs used in _SCH_Dispatch_Tasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2173                           
  2174                           
  2175                           ;Sch_16f.c: 193:     tByte Index;;Sch_16f.c: 195:     for (Index = 0; Index < (8); Index
      +                          ++)
  2176  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  2177  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  2178  0DA3  01E4               	clrf	SCH_Dispatch_Tasks@Index^(0+128)
  2179  0DA4                     l3512:	
  2180                           
  2181                           ;Sch_16f.c: 196:     {;Sch_16f.c: 197:         if (SCH_tasks_G[Index].RunMe > 0)
  2182  0DA4  3006               	movlw	6
  2183  0DA5  00E1               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2184  0DA6  0861               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2185  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0DA9  00A8               	movwf	___bmul@multiplicand
  2188  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0DAB  1303               	bcf	3,6	;RP1=0, select bank1
  2190  0DAC  0864               	movf	SCH_Dispatch_Tasks@Index^(0+128),w
  2191  0DAD  120A  158A  2005  120A  158A  	fcall	___bmul
  2192  0DB2  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  2193  0DB3  0084               	movwf	4
  2194  0DB4  1383               	bcf	3,7	;select IRP bank1
  2195  0DB5  0800               	movf	0,w
  2196  0DB6  1903               	btfsc	3,2
  2197  0DB7  2DB9               	goto	u3471
  2198  0DB8  2DBA               	goto	u3470
  2199  0DB9                     u3471:	
  2200  0DB9  2E0E               	goto	l3522
  2201  0DBA                     u3470:	
  2202  0DBA                     l3514:	
  2203                           
  2204                           ;Sch_16f.c: 198:         {;Sch_16f.c: 199:             (*SCH_tasks_G[Index].pTask)();
  2205  0DBA  3006               	movlw	6
  2206  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  2207  0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  2208  0DBD  00E1               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2209  0DBE  0861               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2210  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0DC1  00A8               	movwf	___bmul@multiplicand
  2213  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  2214  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  2215  0DC4  0864               	movf	SCH_Dispatch_Tasks@Index^(0+128),w
  2216  0DC5  120A  158A  2005  120A  158A  	fcall	___bmul
  2217  0DCA  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  2218  0DCB  0084               	movwf	4
  2219  0DCC  1383               	bcf	3,7	;select IRP bank1
  2220  0DCD  0800               	movf	0,w
  2221  0DCE  120A  118A  2045  120A  158A  	fcall	fptable
  2222  0DD3                     l3516:	
  2223                           
  2224                           ;Sch_16f.c: 200:             SCH_tasks_G[Index].RunMe -= 1;
  2225  0DD3  3006               	movlw	6
  2226  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0DD6  00E1               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2229  0DD7  0861               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2230  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0DDA  00A8               	movwf	___bmul@multiplicand
  2233  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  2234  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  2235  0DDD  0864               	movf	SCH_Dispatch_Tasks@Index^(0+128),w
  2236  0DDE  120A  158A  2005  120A  158A  	fcall	___bmul
  2237  0DE3  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  2238  0DE4  0084               	movwf	4
  2239  0DE5  3001               	movlw	1
  2240  0DE6  1383               	bcf	3,7	;select IRP bank1
  2241  0DE7  0280               	subwf	0,f
  2242  0DE8                     l3518:	
  2243                           
  2244                           ;Sch_16f.c: 203:             if (SCH_tasks_G[Index].Period == 0)
  2245  0DE8  3006               	movlw	6
  2246  0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  2247  0DEA  1303               	bcf	3,6	;RP1=0, select bank1
  2248  0DEB  00E1               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2249  0DEC  0861               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2250  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0DEF  00A8               	movwf	___bmul@multiplicand
  2253  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0DF2  0864               	movf	SCH_Dispatch_Tasks@Index^(0+128),w
  2256  0DF3  120A  158A  2005  120A  158A  	fcall	___bmul
  2257  0DF8  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  2258  0DF9  0084               	movwf	4
  2259  0DFA  1383               	bcf	3,7	;select IRP bank1
  2260  0DFB  0800               	movf	0,w
  2261  0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0DFD  1303               	bcf	3,6	;RP1=0, select bank1
  2263  0DFE  00E2               	movwf	(??_SCH_Dispatch_Tasks+1)^(0+128)
  2264  0DFF  0A84               	incf	4,f
  2265  0E00  0800               	movf	0,w
  2266  0E01  00E3               	movwf	((??_SCH_Dispatch_Tasks+1)^(0+128)+1)
  2267  0E02  0862               	movf	(??_SCH_Dispatch_Tasks+1)^(0+128),w
  2268  0E03  0463               	iorwf	((??_SCH_Dispatch_Tasks+1)^(0+128)+1),w
  2269  0E04  1D03               	btfss	3,2
  2270  0E05  2E07               	goto	u3481
  2271  0E06  2E08               	goto	u3480
  2272  0E07                     u3481:	
  2273  0E07  2E0E               	goto	l3522
  2274  0E08                     u3480:	
  2275  0E08                     l3520:	
  2276                           
  2277                           ;Sch_16f.c: 204:             {;Sch_16f.c: 205:                 SCH_Delete_Task(Index);
  2278  0E08  0864               	movf	SCH_Dispatch_Tasks@Index^(0+128),w
  2279  0E09  120A  158A  2318  120A  158A  	fcall	_SCH_Delete_Task
  2280  0E0E                     l3522:	
  2281                           
  2282                           ;Sch_16f.c: 208:     }
  2283  0E0E  3001               	movlw	1
  2284  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0E10  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0E11  00E1               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  2287  0E12  0861               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  2288  0E13  07E4               	addwf	SCH_Dispatch_Tasks@Index^(0+128),f
  2289  0E14                     l3524:	
  2290  0E14  3008               	movlw	8
  2291  0E15  0264               	subwf	SCH_Dispatch_Tasks@Index^(0+128),w
  2292  0E16  1C03               	skipc
  2293  0E17  2E19               	goto	u3491
  2294  0E18  2E1A               	goto	u3490
  2295  0E19                     u3491:	
  2296  0E19  2DA4               	goto	l3512
  2297  0E1A                     u3490:	
  2298  0E1A                     l3526:	
  2299                           
  2300                           ;Sch_16f.c: 210:     SCH_Report_Status();
  2301  0E1A  120A  118A  2003  120A  158A  	fcall	_SCH_Report_Status
  2302                           
  2303                           ;Sch_16f.c: 212:     SCH_Go_To_Sleep();
  2304  0E1F  160A  118A  26E2  120A  158A  	fcall	_SCH_Go_To_Sleep
  2305  0E24                     l406:	
  2306  0E24  0008               	return
  2307  0E25                     __end_of_SCH_Dispatch_Tasks:	
  2308                           
  2309                           	psect	text8
  2310  081C                     __ptext8:	
  2311 ;; *************** function _ssd_blink *****************
  2312 ;; Defined at:
  2313 ;;		line 150 in file "SSD.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0
  2329 ;;      Temps:          0       2       0       0       0
  2330 ;;      Totals:         0       2       0       0       0
  2331 ;;Total ram usage:        2 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    4
  2334 ;; This function calls:
  2335 ;;		_ssd_turn_off
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;;		_SCH_Dispatch_Tasks
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _ssd_blink
  2344  081C                     _ssd_blink:	
  2345  081C                     l3074:	
  2346                           ;incstack = 0
  2347                           ; Regs used in _ssd_blink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2348                           
  2349                           
  2350                           ;SSD.c: 151:     if (mode == SETTING_MODE){
  2351  081C  1283               	bcf	3,5	;RP0=0, select bank0
  2352  081D  1303               	bcf	3,6	;RP1=0, select bank0
  2353  081E  0363               	decf	_mode,w
  2354  081F  1D03               	btfss	3,2
  2355  0820  2822               	goto	u3171
  2356  0821  2823               	goto	u3170
  2357  0822                     u3171:	
  2358  0822  283E               	goto	l201
  2359  0823                     u3170:	
  2360  0823  282E               	goto	l3084
  2361  0824                     l197:	
  2362                           ;SSD.c: 155:            case SSD_ON :
  2363                           
  2364                           
  2365                           ;SSD.c: 156:                blink = SSD_OFF ;
  2366  0824  01E1               	clrf	_blink
  2367  0825  0AE1               	incf	_blink,f
  2368  0826                     l3078:	
  2369                           
  2370                           ;SSD.c: 157:                ssd_turn_off();
  2371  0826  160A  118A  271A  120A  158A  	fcall	_ssd_turn_off
  2372                           
  2373                           ;SSD.c: 158:                break ;
  2374  082B  283E               	goto	l201
  2375  082C                     l3080:	
  2376                           
  2377                           ;SSD.c: 161:                blink = SSD_ON ;
  2378  082C  01E1               	clrf	_blink
  2379                           
  2380                           ;SSD.c: 162:                break;
  2381  082D  283E               	goto	l201
  2382  082E                     l3084:	
  2383  082E  0861               	movf	_blink,w
  2384  082F  00A9               	movwf	??_ssd_blink
  2385  0830  01AA               	clrf	??_ssd_blink+1
  2386                           
  2387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2388                           ; Switch size 1, requested type "simple"
  2389                           ; Number of cases is 1, Range of values is 0 to 0
  2390                           ; switch strategies available:
  2391                           ; Name         Instructions Cycles
  2392                           ; simple_byte            4     3 (average)
  2393                           ; direct_byte           11     8 (fixed)
  2394                           ; jumptable            260     6 (fixed)
  2395                           ;	Chosen strategy is simple_byte
  2396  0831  082A               	movf	??_ssd_blink+1,w
  2397  0832  3A00               	xorlw	0	; case 0
  2398  0833  1903               	skipnz
  2399  0834  2836               	goto	l3684
  2400  0835  283E               	goto	l201
  2401  0836                     l3684:	
  2402                           
  2403                           ; Switch size 1, requested type "simple"
  2404                           ; Number of cases is 2, Range of values is 0 to 1
  2405                           ; switch strategies available:
  2406                           ; Name         Instructions Cycles
  2407                           ; simple_byte            7     4 (average)
  2408                           ; direct_byte           14     8 (fixed)
  2409                           ; jumptable            260     6 (fixed)
  2410                           ;	Chosen strategy is simple_byte
  2411  0836  0829               	movf	??_ssd_blink,w
  2412  0837  3A00               	xorlw	0	; case 0
  2413  0838  1903               	skipnz
  2414  0839  2824               	goto	l197
  2415  083A  3A01               	xorlw	1	; case 1
  2416  083B  1903               	skipnz
  2417  083C  282C               	goto	l3080
  2418  083D  283E               	goto	l201
  2419  083E                     l201:	
  2420  083E  0008               	return
  2421  083F                     __end_of_ssd_blink:	
  2422                           
  2423                           	psect	text9
  2424  17AB                     __ptext9:	
  2425 ;; *************** function _switch_scan *****************
  2426 ;; Defined at:
  2427 ;;		line 34 in file "switchs.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2441 ;;      Params:         0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    7
  2448 ;; This function calls:
  2449 ;;		_sw_action
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;;		_SCH_Dispatch_Tasks
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _switch_scan
  2458  17AB                     _switch_scan:	
  2459  17AB                     l3090:	
  2460                           ;incstack = 0
  2461 ;; hardware stack exceeded
  2462                           ; Regs used in _switch_scan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2463                           
  2464                           
  2465                           ;switchs.c: 37:        if ( !((PORTB & (1<<2)))){
  2466  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2467  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2468  17AD  1906               	btfsc	6,2	;volatile
  2469  17AE  2FB0               	goto	u3181
  2470  17AF  2FB1               	goto	u3180
  2471  17B0                     u3181:	
  2472  17B0  2FB4               	goto	l231
  2473  17B1                     u3180:	
  2474  17B1                     l3092:	
  2475                           
  2476                           ;switchs.c: 38:           up_sw = PRESSED ;
  2477  17B1  01E7               	clrf	_up_sw
  2478  17B2  0AE7               	incf	_up_sw,f
  2479                           
  2480                           ;switchs.c: 39:        }
  2481  17B3  2FBA               	goto	l3096
  2482  17B4                     l231:	
  2483                           ;switchs.c: 40:        else if ( !((PORTB & (1<<1)))){
  2484                           
  2485  17B4  1886               	btfsc	6,1	;volatile
  2486  17B5  2FB7               	goto	u3191
  2487  17B6  2FB8               	goto	u3190
  2488  17B7                     u3191:	
  2489  17B7  2FBA               	goto	l3096
  2490  17B8                     u3190:	
  2491  17B8                     l3094:	
  2492                           
  2493                           ;switchs.c: 41:           down_sw = PRESSED ;
  2494  17B8  01E6               	clrf	_down_sw
  2495  17B9  0AE6               	incf	_down_sw,f
  2496  17BA                     l3096:	
  2497                           ;switchs.c: 42:        }
  2498                           
  2499                           
  2500                           ;switchs.c: 46:        sw_action();
  2501  17BA  120A  158A  2625  160A  118A  	fcall	_sw_action
  2502  17BF                     l235:	
  2503  17BF  0008               	return
  2504  17C0                     __end_of_switch_scan:	
  2505                           
  2506                           	psect	text10
  2507  1796                     __ptext10:	
  2508 ;; *************** function _led *****************
  2509 ;; Defined at:
  2510 ;;		line 70 in file "temp_control.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          0       1       0       0       0
  2527 ;;      Totals:         0       1       0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    3
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;;		_SCH_Dispatch_Tasks
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _led
  2541  1796                     _led:	
  2542  1796                     l3126:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _led: [wreg+status,2+status,0]
  2545                           
  2546                           
  2547                           ;temp_control.c: 71:     if (mode == NORMAL_MODE){
  2548  1796  1283               	bcf	3,5	;RP0=0, select bank0
  2549  1797  1303               	bcf	3,6	;RP1=0, select bank0
  2550  1798  0863               	movf	_mode,w
  2551  1799  1D03               	btfss	3,2
  2552  179A  2F9C               	goto	u3241
  2553  179B  2F9D               	goto	u3240
  2554  179C                     u3241:	
  2555  179C  2FAA               	goto	l291
  2556  179D                     u3240:	
  2557  179D                     l3128:	
  2558                           
  2559                           ;temp_control.c: 72:         if (state == HEATER_ON){
  2560  179D  1683               	bsf	3,5	;RP0=1, select bank1
  2561  179E  1303               	bcf	3,6	;RP1=0, select bank1
  2562  179F  0858               	movf	_state^(0+128),w
  2563  17A0  1D03               	btfss	3,2
  2564  17A1  2FA3               	goto	u3251
  2565  17A2  2FA4               	goto	u3250
  2566  17A3                     u3251:	
  2567  17A3  2FAA               	goto	l291
  2568  17A4                     u3250:	
  2569  17A4                     l3130:	
  2570                           
  2571                           ;temp_control.c: 73:             (PORTB ^= ( 1 << 4));
  2572  17A4  3010               	movlw	16
  2573  17A5  1283               	bcf	3,5	;RP0=0, select bank0
  2574  17A6  1303               	bcf	3,6	;RP1=0, select bank0
  2575  17A7  00A8               	movwf	??_led
  2576  17A8  0828               	movf	??_led,w
  2577  17A9  0686               	xorwf	6,f	;volatile
  2578  17AA                     l291:	
  2579                           ;temp_control.c: 74:         }
  2580                           
  2581  17AA  0008               	return
  2582  17AB                     __end_of_led:	
  2583                           
  2584                           	psect	text11
  2585  0EB0                     __ptext11:	
  2586 ;; *************** function _ssd_update *****************
  2587 ;; Defined at:
  2588 ;;		line 100 in file "SSD.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0
  2604 ;;      Temps:          0       3       0       0       0
  2605 ;;      Totals:         0       3       0       0       0
  2606 ;;Total ram usage:        3 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    4
  2609 ;; This function calls:
  2610 ;;		___awdiv
  2611 ;;		___awmod
  2612 ;;		_display7s
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;;		_SCH_Dispatch_Tasks
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _ssd_update
  2621  0EB0                     _ssd_update:	
  2622  0EB0                     l3030:	
  2623                           ;incstack = 0
  2624                           ; Regs used in _ssd_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2625                           
  2626                           
  2627                           ;SSD.c: 101:     if (blink == SSD_ON){
  2628  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0EB2  0861               	movf	_blink,w
  2631  0EB3  1D03               	btfss	3,2
  2632  0EB4  2EB6               	goto	u3161
  2633  0EB5  2EB7               	goto	u3160
  2634  0EB6                     u3161:	
  2635  0EB6  2F43               	goto	l189
  2636  0EB7                     u3160:	
  2637  0EB7  2EC2               	goto	l3040
  2638  0EB8                     l3034:	
  2639                           
  2640                           ;SSD.c: 104:                 temp = measured_temp ;
  2641  0EB8  0864               	movf	_measured_temp,w
  2642  0EB9  00B1               	movwf	??_ssd_update
  2643  0EBA  0831               	movf	??_ssd_update,w
  2644  0EBB  00E2               	movwf	_temp
  2645                           
  2646                           ;SSD.c: 105:                 break ;
  2647  0EBC  2F2F               	goto	l3064
  2648  0EBD                     l3036:	
  2649                           
  2650                           ;SSD.c: 107:                 temp = set_temp;
  2651  0EBD  0865               	movf	_set_temp,w
  2652  0EBE  00B1               	movwf	??_ssd_update
  2653  0EBF  0831               	movf	??_ssd_update,w
  2654  0EC0  00E2               	movwf	_temp
  2655                           
  2656                           ;SSD.c: 108:                 break ;
  2657  0EC1  2F2F               	goto	l3064
  2658  0EC2                     l3040:	
  2659  0EC2  0863               	movf	_mode,w
  2660  0EC3  00B1               	movwf	??_ssd_update
  2661  0EC4  01B2               	clrf	??_ssd_update+1
  2662                           
  2663                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2664                           ; Switch size 1, requested type "simple"
  2665                           ; Number of cases is 1, Range of values is 0 to 0
  2666                           ; switch strategies available:
  2667                           ; Name         Instructions Cycles
  2668                           ; simple_byte            4     3 (average)
  2669                           ; direct_byte           11     8 (fixed)
  2670                           ; jumptable            260     6 (fixed)
  2671                           ;	Chosen strategy is simple_byte
  2672  0EC5  0832               	movf	??_ssd_update+1,w
  2673  0EC6  3A00               	xorlw	0	; case 0
  2674  0EC7  1903               	skipnz
  2675  0EC8  2ECA               	goto	l3686
  2676  0EC9  2F2F               	goto	l3064
  2677  0ECA                     l3686:	
  2678                           
  2679                           ; Switch size 1, requested type "simple"
  2680                           ; Number of cases is 2, Range of values is 0 to 1
  2681                           ; switch strategies available:
  2682                           ; Name         Instructions Cycles
  2683                           ; simple_byte            7     4 (average)
  2684                           ; direct_byte           14     8 (fixed)
  2685                           ; jumptable            260     6 (fixed)
  2686                           ;	Chosen strategy is simple_byte
  2687  0ECA  0831               	movf	??_ssd_update,w
  2688  0ECB  3A00               	xorlw	0	; case 0
  2689  0ECC  1903               	skipnz
  2690  0ECD  2EB8               	goto	l3034
  2691  0ECE  3A01               	xorlw	1	; case 1
  2692  0ECF  1903               	skipnz
  2693  0ED0  2EBD               	goto	l3036
  2694  0ED1  2F2F               	goto	l3064
  2695  0ED2                     l3042:	
  2696                           
  2697                           ;SSD.c: 113:                 tens = temp / 10 ;
  2698  0ED2  300A               	movlw	10
  2699  0ED3  00A8               	movwf	___awdiv@divisor
  2700  0ED4  3000               	movlw	0
  2701  0ED5  00A9               	movwf	___awdiv@divisor+1
  2702  0ED6  0862               	movf	_temp,w
  2703  0ED7  00B1               	movwf	??_ssd_update
  2704  0ED8  01B2               	clrf	??_ssd_update+1
  2705  0ED9  0831               	movf	??_ssd_update,w
  2706  0EDA  00AA               	movwf	___awdiv@dividend
  2707  0EDB  0832               	movf	??_ssd_update+1,w
  2708  0EDC  00AB               	movwf	___awdiv@dividend+1
  2709  0EDD  120A  158A  2446  120A  158A  	fcall	___awdiv
  2710  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0EE4  0828               	movf	?___awdiv,w
  2713  0EE5  00B3               	movwf	??_ssd_update+2
  2714  0EE6  0833               	movf	??_ssd_update+2,w
  2715  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0EE9  00DB               	movwf	_tens^(0+128)
  2718  0EEA                     l3044:	
  2719                           
  2720                           ;SSD.c: 114:                 (PORTA |= (1 << 4));
  2721  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0EEC  1605               	bsf	5,4	;volatile
  2724  0EED                     l3046:	
  2725                           
  2726                           ;SSD.c: 115:                 (PORTA &= ~(1 << 5));
  2727  0EED  30DF               	movlw	223
  2728  0EEE  00B1               	movwf	??_ssd_update
  2729  0EEF  0831               	movf	??_ssd_update,w
  2730  0EF0  0585               	andwf	5,f	;volatile
  2731  0EF1                     l3048:	
  2732                           
  2733                           ;SSD.c: 116:                 PORTD = display7s(tens);
  2734  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  2736  0EF3  085B               	movf	_tens^(0+128),w
  2737  0EF4  120A  158A  22B7  120A  158A  	fcall	_display7s
  2738  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0EFB  0088               	movwf	8	;volatile
  2741  0EFC                     l3050:	
  2742                           
  2743                           ;SSD.c: 117:                 ssd_select = SSD_RIGHT ;
  2744  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0EFD  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0EFE  01D9               	clrf	_ssd_select^(0+128)
  2747  0EFF  0AD9               	incf	_ssd_select^(0+128),f
  2748                           
  2749                           ;SSD.c: 118:                 break ;
  2750  0F00  2F43               	goto	l189
  2751  0F01                     l3052:	
  2752                           
  2753                           ;SSD.c: 120:                  ones = temp % 10 ;
  2754  0F01  300A               	movlw	10
  2755  0F02  00A8               	movwf	___awmod@divisor
  2756  0F03  3000               	movlw	0
  2757  0F04  00A9               	movwf	___awmod@divisor+1
  2758  0F05  0862               	movf	_temp,w
  2759  0F06  00B1               	movwf	??_ssd_update
  2760  0F07  01B2               	clrf	??_ssd_update+1
  2761  0F08  0831               	movf	??_ssd_update,w
  2762  0F09  00AA               	movwf	___awmod@dividend
  2763  0F0A  0832               	movf	??_ssd_update+1,w
  2764  0F0B  00AB               	movwf	___awmod@dividend+1
  2765  0F0C  120A  158A  225C  120A  158A  	fcall	___awmod
  2766  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0F13  0828               	movf	?___awmod,w
  2769  0F14  00B3               	movwf	??_ssd_update+2
  2770  0F15  0833               	movf	??_ssd_update+2,w
  2771  0F16  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0F17  1303               	bcf	3,6	;RP1=0, select bank1
  2773  0F18  00DA               	movwf	_ones^(0+128)
  2774  0F19                     l3054:	
  2775                           
  2776                           ;SSD.c: 121:                  (PORTA |= (1 << 5));
  2777  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0F1B  1685               	bsf	5,5	;volatile
  2780  0F1C                     l3056:	
  2781                           
  2782                           ;SSD.c: 122:                  (PORTA &= ~(1 << 4));
  2783  0F1C  30EF               	movlw	239
  2784  0F1D  00B1               	movwf	??_ssd_update
  2785  0F1E  0831               	movf	??_ssd_update,w
  2786  0F1F  0585               	andwf	5,f	;volatile
  2787  0F20                     l3058:	
  2788                           
  2789                           ;SSD.c: 123:                  PORTD = display7s(ones);
  2790  0F20  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0F21  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0F22  085A               	movf	_ones^(0+128),w
  2793  0F23  120A  158A  22B7  120A  158A  	fcall	_display7s
  2794  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0F2A  0088               	movwf	8	;volatile
  2797  0F2B                     l3060:	
  2798                           
  2799                           ;SSD.c: 124:                  ssd_select = SSD_LEFT ;
  2800  0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  2801  0F2C  1303               	bcf	3,6	;RP1=0, select bank1
  2802  0F2D  01D9               	clrf	_ssd_select^(0+128)
  2803                           
  2804                           ;SSD.c: 125:                  break;
  2805  0F2E  2F43               	goto	l189
  2806  0F2F                     l3064:	
  2807  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  2808  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  2809  0F31  0859               	movf	_ssd_select^(0+128),w
  2810  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0F34  00B1               	movwf	??_ssd_update
  2813  0F35  01B2               	clrf	??_ssd_update+1
  2814                           
  2815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2816                           ; Switch size 1, requested type "simple"
  2817                           ; Number of cases is 1, Range of values is 0 to 0
  2818                           ; switch strategies available:
  2819                           ; Name         Instructions Cycles
  2820                           ; simple_byte            4     3 (average)
  2821                           ; direct_byte           11     8 (fixed)
  2822                           ; jumptable            260     6 (fixed)
  2823                           ;	Chosen strategy is simple_byte
  2824  0F36  0832               	movf	??_ssd_update+1,w
  2825  0F37  3A00               	xorlw	0	; case 0
  2826  0F38  1903               	skipnz
  2827  0F39  2F3B               	goto	l3688
  2828  0F3A  2F43               	goto	l189
  2829  0F3B                     l3688:	
  2830                           
  2831                           ; Switch size 1, requested type "simple"
  2832                           ; Number of cases is 2, Range of values is 0 to 1
  2833                           ; switch strategies available:
  2834                           ; Name         Instructions Cycles
  2835                           ; simple_byte            7     4 (average)
  2836                           ; direct_byte           14     8 (fixed)
  2837                           ; jumptable            260     6 (fixed)
  2838                           ;	Chosen strategy is simple_byte
  2839  0F3B  0831               	movf	??_ssd_update,w
  2840  0F3C  3A00               	xorlw	0	; case 0
  2841  0F3D  1903               	skipnz
  2842  0F3E  2ED2               	goto	l3042
  2843  0F3F  3A01               	xorlw	1	; case 1
  2844  0F40  1903               	skipnz
  2845  0F41  2F01               	goto	l3052
  2846  0F42  2F43               	goto	l189
  2847  0F43                     l189:	
  2848  0F43  0008               	return
  2849  0F44                     __end_of_ssd_update:	
  2850                           
  2851                           	psect	text12
  2852  068F                     __ptext12:	
  2853 ;; *************** function _temp_sensor_read *****************
  2854 ;; Defined at:
  2855 ;;		line 41 in file "temp_sensor.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0
  2871 ;;      Temps:          0       0       5       0       0
  2872 ;;      Totals:         0       0       5       0       0
  2873 ;;Total ram usage:        5 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    5
  2876 ;; This function calls:
  2877 ;;		_ADC_Read
  2878 ;;		___fldiv
  2879 ;;		___flmul
  2880 ;;		___fltol
  2881 ;;		___xxtofl
  2882 ;;		_average
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;;		_SCH_Dispatch_Tasks
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           
  2890                           ;psect for function _temp_sensor_read
  2891  068F                     _temp_sensor_read:	
  2892  068F                     l3494:	
  2893                           ;incstack = 0
  2894                           ; Regs used in _temp_sensor_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2895                           
  2896                           
  2897                           ;temp_sensor.c: 42:     if (mode == NORMAL_MODE){
  2898  068F  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0690  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0691  0863               	movf	_mode,w
  2901  0692  1D03               	btfss	3,2
  2902  0693  2E95               	goto	u3451
  2903  0694  2E96               	goto	u3450
  2904  0695                     u3451:	
  2905  0695  2F6D               	goto	l321
  2906  0696                     u3450:	
  2907  0696                     l3496:	
  2908                           
  2909                           ;temp_sensor.c: 44:         temp_hold_array[i] = (ADC_Read(2) * 4.89 ) ;
  2910  0696  3002               	movlw	2
  2911  0697  120A  158A  20B7  120A  118A  	fcall	_ADC_Read
  2912  069C  1283               	bcf	3,5	;RP0=0, select bank0
  2913  069D  1303               	bcf	3,6	;RP1=0, select bank0
  2914  069E  0828               	movf	?_ADC_Read,w
  2915  069F  1683               	bsf	3,5	;RP0=1, select bank1
  2916  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  2917  06A1  00DC               	movwf	??_temp_sensor_read^(0+128)
  2918  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2919  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2920  06A4  0829               	movf	?_ADC_Read+1,w
  2921  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  2922  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  2923  06A7  00DD               	movwf	(??_temp_sensor_read^(0+128)+1)
  2924  06A8  01DE               	clrf	(??_temp_sensor_read^(0+128)+2)
  2925  06A9  01DF               	clrf	(??_temp_sensor_read^(0+128)+3)
  2926  06AA  085F               	movf	(??_temp_sensor_read+3)^(0+128),w
  2927  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2928  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2929  06AD  00B0               	movwf	___xxtofl@val+3
  2930  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  2931  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  2932  06B0  085E               	movf	(??_temp_sensor_read+2)^(0+128),w
  2933  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2934  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2935  06B3  00AF               	movwf	___xxtofl@val+2
  2936  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  2937  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  2938  06B6  085D               	movf	(??_temp_sensor_read+1)^(0+128),w
  2939  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2940  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2941  06B9  00AE               	movwf	___xxtofl@val+1
  2942  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  2943  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  2944  06BC  085C               	movf	??_temp_sensor_read^(0+128),w
  2945  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2946  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2947  06BF  00AD               	movwf	___xxtofl@val
  2948  06C0  3000               	movlw	0
  2949  06C1  120A  158A  2744  120A  118A  	fcall	___xxtofl
  2950  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2951  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2952  06C8  0830               	movf	?___xxtofl+3,w
  2953  06C9  00C2               	movwf	___flmul@a+3
  2954  06CA  082F               	movf	?___xxtofl+2,w
  2955  06CB  00C1               	movwf	___flmul@a+2
  2956  06CC  082E               	movf	?___xxtofl+1,w
  2957  06CD  00C0               	movwf	___flmul@a+1
  2958  06CE  082D               	movf	?___xxtofl,w
  2959  06CF  00BF               	movwf	___flmul@a
  2960  06D0  3040               	movlw	64
  2961  06D1  00BE               	movwf	___flmul@b+3
  2962  06D2  309C               	movlw	156
  2963  06D3  00BD               	movwf	___flmul@b+2
  2964  06D4  307A               	movlw	122
  2965  06D5  00BC               	movwf	___flmul@b+1
  2966  06D6  30E1               	movlw	225
  2967  06D7  00BB               	movwf	___flmul@b
  2968  06D8  120A  118A  2060  120A  118A  	fcall	___flmul
  2969  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2970  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  2971  06DF  083E               	movf	?___flmul+3,w
  2972  06E0  00D8               	movwf	___fltol@f1+3
  2973  06E1  083D               	movf	?___flmul+2,w
  2974  06E2  00D7               	movwf	___fltol@f1+2
  2975  06E3  083C               	movf	?___flmul+1,w
  2976  06E4  00D6               	movwf	___fltol@f1+1
  2977  06E5  083B               	movf	?___flmul,w
  2978  06E6  00D5               	movwf	___fltol@f1
  2979  06E7  120A  158A  2525  120A  118A  	fcall	___fltol
  2980  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2981  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2982  06EE  0860               	movf	_i,w
  2983  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  2984  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  2985  06F1  00E0               	movwf	(??_temp_sensor_read+4)^(0+128)
  2986  06F2  0760               	addwf	(??_temp_sensor_read+4)^(0+128),w
  2987  06F3  3E90               	addlw	(low (_temp_hold_array| (0+256)))& (0+255)
  2988  06F4  0084               	movwf	4
  2989  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  2990  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  2991  06F7  0855               	movf	?___fltol,w
  2992  06F8  1783               	bsf	3,7	;select IRP bank3
  2993  06F9  0080               	movwf	0
  2994  06FA  0A84               	incf	4,f
  2995  06FB  0856               	movf	?___fltol+1,w
  2996  06FC  0080               	movwf	0
  2997                           
  2998                           ;temp_sensor.c: 45:         temp_hold_array[i] = temp_hold_array[i] / 10.0 ;
  2999  06FD  0860               	movf	_i,w
  3000  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  3001  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  3002  0700  00DC               	movwf	??_temp_sensor_read^(0+128)
  3003  0701  075C               	addwf	??_temp_sensor_read^(0+128),w
  3004  0702  3E90               	addlw	(low (_temp_hold_array| (0+256)))& (0+255)
  3005  0703  0084               	movwf	4
  3006  0704  0800               	movf	0,w
  3007  0705  00DD               	movwf	(??_temp_sensor_read+1)^(0+128)
  3008  0706  0A84               	incf	4,f
  3009  0707  0800               	movf	0,w
  3010  0708  00DE               	movwf	((??_temp_sensor_read+1)^(0+128)+1)
  3011  0709  085D               	movf	(??_temp_sensor_read+1)^(0+128),w
  3012  070A  1283               	bcf	3,5	;RP0=0, select bank0
  3013  070B  1303               	bcf	3,6	;RP1=0, select bank0
  3014  070C  00AD               	movwf	___xxtofl@val
  3015  070D  1683               	bsf	3,5	;RP0=1, select bank1
  3016  070E  1303               	bcf	3,6	;RP1=0, select bank1
  3017  070F  085E               	movf	(??_temp_sensor_read+2)^(0+128),w
  3018  0710  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0711  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0712  00AE               	movwf	___xxtofl@val+1
  3021  0713  01AF               	clrf	___xxtofl@val+2
  3022  0714  01B0               	clrf	___xxtofl@val+3
  3023  0715  3000               	movlw	0
  3024  0716  120A  158A  2744  120A  118A  	fcall	___xxtofl
  3025  071B  1283               	bcf	3,5	;RP0=0, select bank0
  3026  071C  1303               	bcf	3,6	;RP1=0, select bank0
  3027  071D  0830               	movf	?___xxtofl+3,w
  3028  071E  00C2               	movwf	___fldiv@b+3
  3029  071F  082F               	movf	?___xxtofl+2,w
  3030  0720  00C1               	movwf	___fldiv@b+2
  3031  0721  082E               	movf	?___xxtofl+1,w
  3032  0722  00C0               	movwf	___fldiv@b+1
  3033  0723  082D               	movf	?___xxtofl,w
  3034  0724  00BF               	movwf	___fldiv@b
  3035  0725  3041               	movlw	65
  3036  0726  00BE               	movwf	___fldiv@a+3
  3037  0727  3020               	movlw	32
  3038  0728  00BD               	movwf	___fldiv@a+2
  3039  0729  3000               	movlw	0
  3040  072A  00BC               	movwf	___fldiv@a+1
  3041  072B  3000               	movlw	0
  3042  072C  00BB               	movwf	___fldiv@a
  3043  072D  120A  118A  23C1  120A  118A  	fcall	___fldiv
  3044  0732  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0733  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0734  083E               	movf	?___fldiv+3,w
  3047  0735  00D8               	movwf	___fltol@f1+3
  3048  0736  083D               	movf	?___fldiv+2,w
  3049  0737  00D7               	movwf	___fltol@f1+2
  3050  0738  083C               	movf	?___fldiv+1,w
  3051  0739  00D6               	movwf	___fltol@f1+1
  3052  073A  083B               	movf	?___fldiv,w
  3053  073B  00D5               	movwf	___fltol@f1
  3054  073C  120A  158A  2525  120A  118A  	fcall	___fltol
  3055  0741  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0742  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0743  0860               	movf	_i,w
  3058  0744  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0745  1303               	bcf	3,6	;RP1=0, select bank1
  3060  0746  00DF               	movwf	(??_temp_sensor_read+3)^(0+128)
  3061  0747  075F               	addwf	(??_temp_sensor_read+3)^(0+128),w
  3062  0748  3E90               	addlw	(low (_temp_hold_array| (0+256)))& (0+255)
  3063  0749  0084               	movwf	4
  3064  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3065  074B  1303               	bcf	3,6	;RP1=0, select bank0
  3066  074C  0855               	movf	?___fltol,w
  3067  074D  1783               	bsf	3,7	;select IRP bank3
  3068  074E  0080               	movwf	0
  3069  074F  0A84               	incf	4,f
  3070  0750  0856               	movf	?___fltol+1,w
  3071  0751  0080               	movwf	0
  3072  0752                     l3498:	
  3073                           
  3074                           ;temp_sensor.c: 46:         i++ ;
  3075  0752  3001               	movlw	1
  3076  0753  1683               	bsf	3,5	;RP0=1, select bank1
  3077  0754  1303               	bcf	3,6	;RP1=0, select bank1
  3078  0755  00DC               	movwf	??_temp_sensor_read^(0+128)
  3079  0756  085C               	movf	??_temp_sensor_read^(0+128),w
  3080  0757  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0758  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0759  07E0               	addwf	_i,f
  3083  075A                     l3500:	
  3084                           
  3085                           ;temp_sensor.c: 47:         if (i == 10){i = 0 ;}
  3086  075A  300A               	movlw	10
  3087  075B  0660               	xorwf	_i,w
  3088  075C  1D03               	btfss	3,2
  3089  075D  2F5F               	goto	u3461
  3090  075E  2F60               	goto	u3460
  3091  075F                     u3461:	
  3092  075F  2F61               	goto	l3504
  3093  0760                     u3460:	
  3094  0760                     l3502:	
  3095  0760  01E0               	clrf	_i
  3096  0761                     l3504:	
  3097                           
  3098                           ;temp_sensor.c: 48:         measured_temp = average();
  3099  0761  120A  158A  21A2  120A  118A  	fcall	_average
  3100  0766  1683               	bsf	3,5	;RP0=1, select bank1
  3101  0767  1303               	bcf	3,6	;RP1=0, select bank1
  3102  0768  00DC               	movwf	??_temp_sensor_read^(0+128)
  3103  0769  085C               	movf	??_temp_sensor_read^(0+128),w
  3104  076A  1283               	bcf	3,5	;RP0=0, select bank0
  3105  076B  1303               	bcf	3,6	;RP1=0, select bank0
  3106  076C  00E4               	movwf	_measured_temp
  3107  076D                     l321:	
  3108  076D  0008               	return
  3109  076E                     __end_of_temp_sensor_read:	
  3110                           
  3111                           	psect	text13
  3112  0866                     __ptext13:	
  3113 ;; *************** function _get_set_temp *****************
  3114 ;; Defined at:
  3115 ;;		line 48 in file "eeprom.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0
  3131 ;;      Temps:          0       1       0       0       0
  3132 ;;      Totals:         0       1       0       0       0
  3133 ;;Total ram usage:        1 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    6
  3136 ;; This function calls:
  3137 ;;		_EEPROM_read
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;;		_SCH_Dispatch_Tasks
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _get_set_temp
  3146  0866                     _get_set_temp:	
  3147  0866                     l3024:	
  3148                           ;incstack = 0
  3149                           ; Regs used in _get_set_temp: [wreg+status,2+status,0+pclath+cstack]
  3150                           
  3151                           
  3152                           ;eeprom.c: 51:     if (EEPROM_read(0xff) > 100){
  3153  0866  30FF               	movlw	255
  3154  0867  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0868  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0869  00A9               	movwf	EEPROM_read@address
  3157  086A  3000               	movlw	0
  3158  086B  00AA               	movwf	EEPROM_read@address+1
  3159  086C  120A  158A  213D  120A  158A  	fcall	_EEPROM_read
  3160  0871  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0872  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0873  00AD               	movwf	??_get_set_temp
  3163  0874  3065               	movlw	101
  3164  0875  022D               	subwf	??_get_set_temp,w
  3165  0876  1C03               	skipc
  3166  0877  2879               	goto	u3151
  3167  0878  287A               	goto	u3150
  3168  0879                     u3151:	
  3169  0879  287F               	goto	l3028
  3170  087A                     u3150:	
  3171  087A                     l3026:	
  3172                           
  3173                           ;eeprom.c: 52:        set_temp = 60 ;
  3174  087A  303C               	movlw	60
  3175  087B  00AD               	movwf	??_get_set_temp
  3176  087C  082D               	movf	??_get_set_temp,w
  3177  087D  00E5               	movwf	_set_temp
  3178                           
  3179                           ;eeprom.c: 53:     }
  3180  087E  288D               	goto	l127
  3181  087F                     l3028:	
  3182                           
  3183                           ;eeprom.c: 55:        set_temp = EEPROM_read(0xff) ;
  3184  087F  30FF               	movlw	255
  3185  0880  00A9               	movwf	EEPROM_read@address
  3186  0881  3000               	movlw	0
  3187  0882  00AA               	movwf	EEPROM_read@address+1
  3188  0883  120A  158A  213D  120A  158A  	fcall	_EEPROM_read
  3189  0888  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0889  1303               	bcf	3,6	;RP1=0, select bank0
  3191  088A  00AD               	movwf	??_get_set_temp
  3192  088B  082D               	movf	??_get_set_temp,w
  3193  088C  00E5               	movwf	_set_temp
  3194  088D                     l127:	
  3195  088D  0008               	return
  3196  088E                     __end_of_get_set_temp:	
  3197                           
  3198                           	psect	text14
  3199  0B7B                     __ptext14:	
  3200 ;; *************** function _temp_set *****************
  3201 ;; Defined at:
  3202 ;;		line 37 in file "temp_control.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0, pclath, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0
  3218 ;;      Temps:          0       3       0       0       0
  3219 ;;      Totals:         0       3       0       0       0
  3220 ;;Total ram usage:        3 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    4
  3223 ;; This function calls:
  3224 ;;		_temp_control_off
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;;		_SCH_Dispatch_Tasks
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function _temp_set
  3233  0B7B                     _temp_set:	
  3234  0B7B                     l3098:	
  3235                           ;incstack = 0
  3236                           ; Regs used in _temp_set: [wreg+status,2+status,0+pclath+cstack]
  3237                           
  3238                           
  3239                           ;temp_control.c: 38:     if (mode == NORMAL_MODE){
  3240  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0B7D  0863               	movf	_mode,w
  3243  0B7E  1D03               	btfss	3,2
  3244  0B7F  2B81               	goto	u3201
  3245  0B80  2B82               	goto	u3200
  3246  0B81                     u3201:	
  3247  0B81  2BD8               	goto	l3124
  3248  0B82                     u3200:	
  3249  0B82                     l3100:	
  3250                           
  3251                           ;temp_control.c: 39:         if ( measured_temp < (set_temp - 5 ) ){
  3252  0B82  0865               	movf	_set_temp,w
  3253  0B83  3EFB               	addlw	251
  3254  0B84  00A9               	movwf	??_temp_set
  3255  0B85  30FF               	movlw	255
  3256  0B86  1803               	skipnc
  3257  0B87  3000               	movlw	0
  3258  0B88  00AA               	movwf	??_temp_set+1
  3259  0B89  082A               	movf	??_temp_set+1,w
  3260  0B8A  3A80               	xorlw	128
  3261  0B8B  3C80               	sublw	128
  3262  0B8C  1D03               	skipz
  3263  0B8D  2B90               	goto	u3215
  3264  0B8E  0829               	movf	??_temp_set,w
  3265  0B8F  0264               	subwf	_measured_temp,w
  3266  0B90                     u3215:	
  3267  0B90  1803               	skipnc
  3268  0B91  2B93               	goto	u3211
  3269  0B92  2B94               	goto	u3210
  3270  0B93                     u3211:	
  3271  0B93  2B9F               	goto	l3108
  3272  0B94                     u3210:	
  3273  0B94                     l3102:	
  3274                           
  3275                           ;temp_control.c: 40:             (PORTC |= (1 << 5));
  3276  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0B96  1687               	bsf	7,5	;volatile
  3279  0B97                     l3104:	
  3280                           
  3281                           ;temp_control.c: 41:             (PORTC &= ~(1 << 2));
  3282  0B97  30FB               	movlw	251
  3283  0B98  00A9               	movwf	??_temp_set
  3284  0B99  0829               	movf	??_temp_set,w
  3285  0B9A  0587               	andwf	7,f	;volatile
  3286  0B9B                     l3106:	
  3287                           
  3288                           ;temp_control.c: 42:             state = HEATER_ON ;
  3289  0B9B  1683               	bsf	3,5	;RP0=1, select bank1
  3290  0B9C  1303               	bcf	3,6	;RP1=0, select bank1
  3291  0B9D  01D8               	clrf	_state^(0+128)
  3292                           
  3293                           ;temp_control.c: 43:         }
  3294  0B9E  2BDD               	goto	l285
  3295  0B9F                     l3108:	
  3296  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0BA0  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0BA1  0865               	movf	_set_temp,w
  3299  0BA2  3E05               	addlw	5
  3300  0BA3  00A9               	movwf	??_temp_set
  3301  0BA4  3000               	movlw	0
  3302  0BA5  1803               	skipnc
  3303  0BA6  3001               	movlw	1
  3304  0BA7  00AA               	movwf	??_temp_set+1
  3305  0BA8  082A               	movf	??_temp_set+1,w
  3306  0BA9  3A80               	xorlw	128
  3307  0BAA  00AB               	movwf	??_temp_set+2
  3308  0BAB  3080               	movlw	128
  3309  0BAC  022B               	subwf	??_temp_set+2,w
  3310  0BAD  1D03               	skipz
  3311  0BAE  2BB1               	goto	u3225
  3312  0BAF  0864               	movf	_measured_temp,w
  3313  0BB0  0229               	subwf	??_temp_set,w
  3314  0BB1                     u3225:	
  3315  0BB1  1803               	skipnc
  3316  0BB2  2BB4               	goto	u3221
  3317  0BB3  2BB5               	goto	u3220
  3318  0BB4                     u3221:	
  3319  0BB4  2BC2               	goto	l3118
  3320  0BB5                     u3220:	
  3321  0BB5                     l3110:	
  3322                           
  3323                           ;temp_control.c: 45:             (PORTC |= (1 << 2));
  3324  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0BB7  1507               	bsf	7,2	;volatile
  3327  0BB8                     l3112:	
  3328                           
  3329                           ;temp_control.c: 46:             (PORTC &= ~(1 << 5));
  3330  0BB8  30DF               	movlw	223
  3331  0BB9  00A9               	movwf	??_temp_set
  3332  0BBA  0829               	movf	??_temp_set,w
  3333  0BBB  0587               	andwf	7,f	;volatile
  3334  0BBC                     l3114:	
  3335                           
  3336                           ;temp_control.c: 47:             (PORTB |= (1 << 4));
  3337  0BBC  1606               	bsf	6,4	;volatile
  3338  0BBD                     l3116:	
  3339                           
  3340                           ;temp_control.c: 48:             state = HEATER_OFF ;
  3341  0BBD  1683               	bsf	3,5	;RP0=1, select bank1
  3342  0BBE  1303               	bcf	3,6	;RP1=0, select bank1
  3343  0BBF  01D8               	clrf	_state^(0+128)
  3344  0BC0  0AD8               	incf	_state^(0+128),f
  3345                           
  3346                           ;temp_control.c: 49:         }
  3347  0BC1  2BDD               	goto	l285
  3348  0BC2                     l3118:	
  3349  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0BC4  0864               	movf	_measured_temp,w
  3352  0BC5  0665               	xorwf	_set_temp,w
  3353  0BC6  1D03               	skipz
  3354  0BC7  2BC9               	goto	u3231
  3355  0BC8  2BCA               	goto	u3230
  3356  0BC9                     u3231:	
  3357  0BC9  2BD7               	goto	l279
  3358  0BCA                     u3230:	
  3359  0BCA                     l3120:	
  3360                           
  3361                           ;temp_control.c: 51:             (PORTC &= ~(1 << 2));
  3362  0BCA  30FB               	movlw	251
  3363  0BCB  00A9               	movwf	??_temp_set
  3364  0BCC  0829               	movf	??_temp_set,w
  3365  0BCD  0587               	andwf	7,f	;volatile
  3366                           
  3367                           ;temp_control.c: 52:             (PORTC &= ~(1 << 5));
  3368  0BCE  30DF               	movlw	223
  3369  0BCF  00A9               	movwf	??_temp_set
  3370  0BD0  0829               	movf	??_temp_set,w
  3371  0BD1  0587               	andwf	7,f	;volatile
  3372                           
  3373                           ;temp_control.c: 53:             (PORTB &= ~(1 << 4));
  3374  0BD2  30EF               	movlw	239
  3375  0BD3  00A9               	movwf	??_temp_set
  3376  0BD4  0829               	movf	??_temp_set,w
  3377  0BD5  0586               	andwf	6,f	;volatile
  3378  0BD6  2BBD               	goto	l3116
  3379  0BD7                     l279:	
  3380                           
  3381                           ;temp_control.c: 59:     }
  3382  0BD7  2BDD               	goto	l285
  3383  0BD8                     l3124:	
  3384                           
  3385                           ;temp_control.c: 61:         temp_control_off();
  3386  0BD8  160A  118A  2750  120A  158A  	fcall	_temp_control_off
  3387  0BDD                     l285:	
  3388  0BDD  0008               	return
  3389  0BDE                     __end_of_temp_set:	
  3390                           
  3391                           	psect	text15
  3392  1750                     __ptext15:	
  3393 ;; *************** function _temp_control_off *****************
  3394 ;; Defined at:
  3395 ;;		line 86 in file "temp_control.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0
  3411 ;;      Temps:          0       1       0       0       0
  3412 ;;      Totals:         0       1       0       0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    3
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_temp_set
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _temp_control_off
  3425  1750                     _temp_control_off:	
  3426  1750                     l2510:	
  3427                           ;incstack = 0
  3428                           ; Regs used in _temp_control_off: [wreg+status,2+status,0]
  3429                           
  3430                           
  3431                           ;temp_control.c: 87:     (PORTC &= ~(1 << 5));
  3432  1750  30DF               	movlw	223
  3433  1751  1283               	bcf	3,5	;RP0=0, select bank0
  3434  1752  1303               	bcf	3,6	;RP1=0, select bank0
  3435  1753  00A8               	movwf	??_temp_control_off
  3436  1754  0828               	movf	??_temp_control_off,w
  3437  1755  0587               	andwf	7,f	;volatile
  3438                           
  3439                           ;temp_control.c: 88:     (PORTC &= ~(1 << 2));
  3440  1756  30FB               	movlw	251
  3441  1757  00A8               	movwf	??_temp_control_off
  3442  1758  0828               	movf	??_temp_control_off,w
  3443  1759  0587               	andwf	7,f	;volatile
  3444                           
  3445                           ;temp_control.c: 89:     (PORTB &= ~(1 << 4));
  3446  175A  30EF               	movlw	239
  3447  175B  00A8               	movwf	??_temp_control_off
  3448  175C  0828               	movf	??_temp_control_off,w
  3449  175D  0586               	andwf	6,f	;volatile
  3450  175E                     l294:	
  3451  175E  0008               	return
  3452  175F                     __end_of_temp_control_off:	
  3453                           
  3454                           	psect	text16
  3455  09A2                     __ptext16:	
  3456 ;; *************** function _average *****************
  3457 ;; Defined at:
  3458 ;;		line 27 in file "temp_sensor.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  sum             2   19[BANK0 ] unsigned int 
  3463 ;;  i               1   21[BANK0 ] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      unsigned char 
  3466 ;; Registers used:
  3467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3473 ;;      Params:         0       0       0       0       0
  3474 ;;      Locals:         0       3       0       0       0
  3475 ;;      Temps:          0       3       0       0       0
  3476 ;;      Totals:         0       6       0       0       0
  3477 ;;Total ram usage:        6 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    4
  3480 ;; This function calls:
  3481 ;;		___lwdiv
  3482 ;; This function is called by:
  3483 ;;		_temp_sensor_read
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _average
  3489  09A2                     _average:	
  3490  09A2                     l2512:	
  3491                           ;incstack = 0
  3492                           ; Regs used in _average: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3493                           
  3494                           
  3495                           ;temp_sensor.c: 28:     uint8_t i = 0 ;
  3496  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  3497  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  3498  09A4  01B5               	clrf	average@i
  3499                           
  3500                           ;temp_sensor.c: 29:     uint16_t sum = 0 ;
  3501  09A5  01B3               	clrf	average@sum
  3502  09A6  01B4               	clrf	average@sum+1
  3503                           
  3504                           ;temp_sensor.c: 30:     for (i = 0 ; i < 10 ; i++){
  3505  09A7  01B5               	clrf	average@i
  3506  09A8                     l2518:	
  3507                           
  3508                           ;temp_sensor.c: 31:         sum = sum + temp_hold_array[i] ;
  3509  09A8  0835               	movf	average@i,w
  3510  09A9  00B0               	movwf	??_average
  3511  09AA  0730               	addwf	??_average,w
  3512  09AB  3E90               	addlw	(low (_temp_hold_array| (0+256)))& (0+255)
  3513  09AC  0084               	movwf	4
  3514  09AD  1783               	bsf	3,7	;select IRP bank3
  3515  09AE  0800               	movf	0,w
  3516  09AF  00B1               	movwf	??_average+1
  3517  09B0  0A84               	incf	4,f
  3518  09B1  0800               	movf	0,w
  3519  09B2  00B2               	movwf	??_average+2
  3520  09B3  0833               	movf	average@sum,w
  3521  09B4  0731               	addwf	??_average+1,w
  3522  09B5  00B3               	movwf	average@sum
  3523  09B6  0834               	movf	average@sum+1,w
  3524  09B7  1803               	skipnc
  3525  09B8  0A34               	incf	average@sum+1,w
  3526  09B9  0732               	addwf	??_average+2,w
  3527  09BA  00B4               	movwf	average@sum+1
  3528  09BB                     l2520:	
  3529                           
  3530                           ;temp_sensor.c: 32:     }
  3531  09BB  3001               	movlw	1
  3532  09BC  00B0               	movwf	??_average
  3533  09BD  0830               	movf	??_average,w
  3534  09BE  07B5               	addwf	average@i,f
  3535  09BF                     l2522:	
  3536  09BF  300A               	movlw	10
  3537  09C0  0235               	subwf	average@i,w
  3538  09C1  1C03               	skipc
  3539  09C2  29C4               	goto	u1951
  3540  09C3  29C5               	goto	u1950
  3541  09C4                     u1951:	
  3542  09C4  29A8               	goto	l2518
  3543  09C5                     u1950:	
  3544  09C5                     l2524:	
  3545                           
  3546                           ;temp_sensor.c: 33:     return (sum / 10) ;
  3547  09C5  300A               	movlw	10
  3548  09C6  00A8               	movwf	___lwdiv@divisor
  3549  09C7  3000               	movlw	0
  3550  09C8  00A9               	movwf	___lwdiv@divisor+1
  3551  09C9  0834               	movf	average@sum+1,w
  3552  09CA  00AB               	movwf	___lwdiv@dividend+1
  3553  09CB  0833               	movf	average@sum,w
  3554  09CC  00AA               	movwf	___lwdiv@dividend
  3555  09CD  120A  158A  2216  120A  158A  	fcall	___lwdiv
  3556  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  3557  09D3  1303               	bcf	3,6	;RP1=0, select bank0
  3558  09D4  0828               	movf	?___lwdiv,w
  3559  09D5                     l316:	
  3560  09D5  0008               	return
  3561  09D6                     __end_of_average:	
  3562                           
  3563                           	psect	text17
  3564  0A16                     __ptext17:	
  3565 ;; *************** function ___lwdiv *****************
  3566 ;; Defined at:
  3567 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  divisor         2    8[BANK0 ] unsigned int 
  3570 ;;  dividend        2   10[BANK0 ] unsigned int 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  quotient        2   13[BANK0 ] unsigned int 
  3573 ;;  counter         1   15[BANK0 ] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  2    8[BANK0 ] unsigned int 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         0       4       0       0       0
  3584 ;;      Locals:         0       3       0       0       0
  3585 ;;      Temps:          0       1       0       0       0
  3586 ;;      Totals:         0       8       0       0       0
  3587 ;;Total ram usage:        8 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    3
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_average
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function ___lwdiv
  3599  0A16                     ___lwdiv:	
  3600  0A16                     l2276:	
  3601                           ;incstack = 0
  3602                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3603                           
  3604  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0A17  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0A18  01AD               	clrf	___lwdiv@quotient
  3607  0A19  01AE               	clrf	___lwdiv@quotient+1
  3608  0A1A                     l2278:	
  3609  0A1A  0828               	movf	___lwdiv@divisor,w
  3610  0A1B  0429               	iorwf	___lwdiv@divisor+1,w
  3611  0A1C  1903               	btfsc	3,2
  3612  0A1D  2A1F               	goto	u1761
  3613  0A1E  2A20               	goto	u1760
  3614  0A1F                     u1761:	
  3615  0A1F  2A57               	goto	l2298
  3616  0A20                     u1760:	
  3617  0A20                     l2280:	
  3618  0A20  01AF               	clrf	___lwdiv@counter
  3619  0A21  0AAF               	incf	___lwdiv@counter,f
  3620  0A22  2A2E               	goto	l2286
  3621  0A23                     l2282:	
  3622  0A23  3001               	movlw	1
  3623  0A24                     u1775:	
  3624  0A24  1003               	clrc
  3625  0A25  0DA8               	rlf	___lwdiv@divisor,f
  3626  0A26  0DA9               	rlf	___lwdiv@divisor+1,f
  3627  0A27  3EFF               	addlw	-1
  3628  0A28  1D03               	skipz
  3629  0A29  2A24               	goto	u1775
  3630  0A2A                     l2284:	
  3631  0A2A  3001               	movlw	1
  3632  0A2B  00AC               	movwf	??___lwdiv
  3633  0A2C  082C               	movf	??___lwdiv,w
  3634  0A2D  07AF               	addwf	___lwdiv@counter,f
  3635  0A2E                     l2286:	
  3636  0A2E  1FA9               	btfss	___lwdiv@divisor+1,7
  3637  0A2F  2A31               	goto	u1781
  3638  0A30  2A32               	goto	u1780
  3639  0A31                     u1781:	
  3640  0A31  2A23               	goto	l2282
  3641  0A32                     u1780:	
  3642  0A32                     l2288:	
  3643  0A32  3001               	movlw	1
  3644  0A33                     u1795:	
  3645  0A33  1003               	clrc
  3646  0A34  0DAD               	rlf	___lwdiv@quotient,f
  3647  0A35  0DAE               	rlf	___lwdiv@quotient+1,f
  3648  0A36  3EFF               	addlw	-1
  3649  0A37  1D03               	skipz
  3650  0A38  2A33               	goto	u1795
  3651  0A39  0829               	movf	___lwdiv@divisor+1,w
  3652  0A3A  022B               	subwf	___lwdiv@dividend+1,w
  3653  0A3B  1D03               	skipz
  3654  0A3C  2A3F               	goto	u1805
  3655  0A3D  0828               	movf	___lwdiv@divisor,w
  3656  0A3E  022A               	subwf	___lwdiv@dividend,w
  3657  0A3F                     u1805:	
  3658  0A3F  1C03               	skipc
  3659  0A40  2A42               	goto	u1801
  3660  0A41  2A43               	goto	u1800
  3661  0A42                     u1801:	
  3662  0A42  2A4A               	goto	l2294
  3663  0A43                     u1800:	
  3664  0A43                     l2290:	
  3665  0A43  0828               	movf	___lwdiv@divisor,w
  3666  0A44  02AA               	subwf	___lwdiv@dividend,f
  3667  0A45  0829               	movf	___lwdiv@divisor+1,w
  3668  0A46  1C03               	skipc
  3669  0A47  03AB               	decf	___lwdiv@dividend+1,f
  3670  0A48  02AB               	subwf	___lwdiv@dividend+1,f
  3671  0A49                     l2292:	
  3672  0A49  142D               	bsf	___lwdiv@quotient,0
  3673  0A4A                     l2294:	
  3674  0A4A  3001               	movlw	1
  3675  0A4B                     u1815:	
  3676  0A4B  1003               	clrc
  3677  0A4C  0CA9               	rrf	___lwdiv@divisor+1,f
  3678  0A4D  0CA8               	rrf	___lwdiv@divisor,f
  3679  0A4E  3EFF               	addlw	-1
  3680  0A4F  1D03               	skipz
  3681  0A50  2A4B               	goto	u1815
  3682  0A51                     l2296:	
  3683  0A51  3001               	movlw	1
  3684  0A52  02AF               	subwf	___lwdiv@counter,f
  3685  0A53  1D03               	btfss	3,2
  3686  0A54  2A56               	goto	u1821
  3687  0A55  2A57               	goto	u1820
  3688  0A56                     u1821:	
  3689  0A56  2A32               	goto	l2288
  3690  0A57                     u1820:	
  3691  0A57                     l2298:	
  3692  0A57  082E               	movf	___lwdiv@quotient+1,w
  3693  0A58  00A9               	movwf	?___lwdiv+1
  3694  0A59  082D               	movf	___lwdiv@quotient,w
  3695  0A5A  00A8               	movwf	?___lwdiv
  3696  0A5B                     l772:	
  3697  0A5B  0008               	return
  3698  0A5C                     __end_of___lwdiv:	
  3699                           
  3700                           	psect	text18
  3701  0F44                     __ptext18:	
  3702 ;; *************** function ___xxtofl *****************
  3703 ;; Defined at:
  3704 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  sign            1    wreg     unsigned char 
  3707 ;;  val             4   13[BANK0 ] long 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  sign            1   21[BANK0 ] unsigned char 
  3710 ;;  arg             4   23[BANK0 ] unsigned long 
  3711 ;;  exp             1   22[BANK0 ] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  4   13[BANK0 ] unsigned char 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3721 ;;      Params:         0       4       0       0       0
  3722 ;;      Locals:         0       6       0       0       0
  3723 ;;      Temps:          0       4       0       0       0
  3724 ;;      Totals:         0      14       0       0       0
  3725 ;;Total ram usage:       14 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    3
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_temp_sensor_read
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function ___xxtofl
  3737  0F44                     ___xxtofl:	
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3741                           ;___xxtofl@sign stored from wreg
  3742  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0F46  00B5               	movwf	___xxtofl@sign
  3745  0F47                     l2966:	
  3746  0F47  0835               	movf	___xxtofl@sign,w
  3747  0F48  1903               	btfsc	3,2
  3748  0F49  2F4B               	goto	u3001
  3749  0F4A  2F4C               	goto	u3000
  3750  0F4B                     u3001:	
  3751  0F4B  2F60               	goto	l2972
  3752  0F4C                     u3000:	
  3753  0F4C                     l2968:	
  3754  0F4C  1FB0               	btfss	___xxtofl@val+3,7
  3755  0F4D  2F4F               	goto	u3011
  3756  0F4E  2F50               	goto	u3010
  3757  0F4F                     u3011:	
  3758  0F4F  2F60               	goto	l2972
  3759  0F50                     u3010:	
  3760  0F50                     l2970:	
  3761  0F50  092D               	comf	___xxtofl@val,w
  3762  0F51  00B7               	movwf	___xxtofl@arg
  3763  0F52  092E               	comf	___xxtofl@val+1,w
  3764  0F53  00B8               	movwf	___xxtofl@arg+1
  3765  0F54  092F               	comf	___xxtofl@val+2,w
  3766  0F55  00B9               	movwf	___xxtofl@arg+2
  3767  0F56  0930               	comf	___xxtofl@val+3,w
  3768  0F57  00BA               	movwf	___xxtofl@arg+3
  3769  0F58  0AB7               	incf	___xxtofl@arg,f
  3770  0F59  1903               	skipnz
  3771  0F5A  0AB8               	incf	___xxtofl@arg+1,f
  3772  0F5B  1903               	skipnz
  3773  0F5C  0AB9               	incf	___xxtofl@arg+2,f
  3774  0F5D  1903               	skipnz
  3775  0F5E  0ABA               	incf	___xxtofl@arg+3,f
  3776  0F5F  2F68               	goto	l927
  3777  0F60                     l2972:	
  3778  0F60  0830               	movf	___xxtofl@val+3,w
  3779  0F61  00BA               	movwf	___xxtofl@arg+3
  3780  0F62  082F               	movf	___xxtofl@val+2,w
  3781  0F63  00B9               	movwf	___xxtofl@arg+2
  3782  0F64  082E               	movf	___xxtofl@val+1,w
  3783  0F65  00B8               	movwf	___xxtofl@arg+1
  3784  0F66  082D               	movf	___xxtofl@val,w
  3785  0F67  00B7               	movwf	___xxtofl@arg
  3786  0F68                     l927:	
  3787  0F68  0830               	movf	___xxtofl@val+3,w
  3788  0F69  042F               	iorwf	___xxtofl@val+2,w
  3789  0F6A  042E               	iorwf	___xxtofl@val+1,w
  3790  0F6B  042D               	iorwf	___xxtofl@val,w
  3791  0F6C  1D03               	skipz
  3792  0F6D  2F6F               	goto	u3021
  3793  0F6E  2F70               	goto	u3020
  3794  0F6F                     u3021:	
  3795  0F6F  2F79               	goto	l2978
  3796  0F70                     u3020:	
  3797  0F70                     l2974:	
  3798  0F70  3000               	movlw	0
  3799  0F71  00B0               	movwf	?___xxtofl+3
  3800  0F72  3000               	movlw	0
  3801  0F73  00AF               	movwf	?___xxtofl+2
  3802  0F74  3000               	movlw	0
  3803  0F75  00AE               	movwf	?___xxtofl+1
  3804  0F76  3000               	movlw	0
  3805  0F77  00AD               	movwf	?___xxtofl
  3806  0F78  2FFF               	goto	l929
  3807  0F79                     l2978:	
  3808  0F79  3096               	movlw	150
  3809  0F7A  00B1               	movwf	??___xxtofl
  3810  0F7B  0831               	movf	??___xxtofl,w
  3811  0F7C  00B6               	movwf	___xxtofl@exp
  3812  0F7D  2F8B               	goto	l2982
  3813  0F7E                     l2980:	
  3814  0F7E  3001               	movlw	1
  3815  0F7F  00B1               	movwf	??___xxtofl
  3816  0F80  0831               	movf	??___xxtofl,w
  3817  0F81  07B6               	addwf	___xxtofl@exp,f
  3818  0F82  3001               	movlw	1
  3819  0F83                     u3035:	
  3820  0F83  1003               	clrc
  3821  0F84  0CBA               	rrf	___xxtofl@arg+3,f
  3822  0F85  0CB9               	rrf	___xxtofl@arg+2,f
  3823  0F86  0CB8               	rrf	___xxtofl@arg+1,f
  3824  0F87  0CB7               	rrf	___xxtofl@arg,f
  3825  0F88  3EFF               	addlw	-1
  3826  0F89  1D03               	skipz
  3827  0F8A  2F83               	goto	u3035
  3828  0F8B                     l2982:	
  3829  0F8B  30FE               	movlw	254
  3830  0F8C  053A               	andwf	___xxtofl@arg+3,w
  3831  0F8D  1D03               	btfss	3,2
  3832  0F8E  2F90               	goto	u3041
  3833  0F8F  2F91               	goto	u3040
  3834  0F90                     u3041:	
  3835  0F90  2F7E               	goto	l2980
  3836  0F91                     u3040:	
  3837  0F91  2FAD               	goto	l933
  3838  0F92                     l2984:	
  3839  0F92  3001               	movlw	1
  3840  0F93  00B1               	movwf	??___xxtofl
  3841  0F94  0831               	movf	??___xxtofl,w
  3842  0F95  07B6               	addwf	___xxtofl@exp,f
  3843  0F96                     l2986:	
  3844  0F96  3001               	movlw	1
  3845  0F97  07B7               	addwf	___xxtofl@arg,f
  3846  0F98  3000               	movlw	0
  3847  0F99  1803               	skipnc
  3848  0F9A  3001               	movlw	1
  3849  0F9B  07B8               	addwf	___xxtofl@arg+1,f
  3850  0F9C  3000               	movlw	0
  3851  0F9D  1803               	skipnc
  3852  0F9E  3001               	movlw	1
  3853  0F9F  07B9               	addwf	___xxtofl@arg+2,f
  3854  0FA0  3000               	movlw	0
  3855  0FA1  1803               	skipnc
  3856  0FA2  3001               	movlw	1
  3857  0FA3  07BA               	addwf	___xxtofl@arg+3,f
  3858  0FA4                     l2988:	
  3859  0FA4  3001               	movlw	1
  3860  0FA5                     u3055:	
  3861  0FA5  1003               	clrc
  3862  0FA6  0CBA               	rrf	___xxtofl@arg+3,f
  3863  0FA7  0CB9               	rrf	___xxtofl@arg+2,f
  3864  0FA8  0CB8               	rrf	___xxtofl@arg+1,f
  3865  0FA9  0CB7               	rrf	___xxtofl@arg,f
  3866  0FAA  3EFF               	addlw	-1
  3867  0FAB  1D03               	skipz
  3868  0FAC  2FA5               	goto	u3055
  3869  0FAD                     l933:	
  3870  0FAD  30FF               	movlw	255
  3871  0FAE  053A               	andwf	___xxtofl@arg+3,w
  3872  0FAF  1D03               	btfss	3,2
  3873  0FB0  2FB2               	goto	u3061
  3874  0FB1  2FB3               	goto	u3060
  3875  0FB2                     u3061:	
  3876  0FB2  2F92               	goto	l2984
  3877  0FB3                     u3060:	
  3878  0FB3  2FBF               	goto	l2992
  3879  0FB4                     l2990:	
  3880  0FB4  3001               	movlw	1
  3881  0FB5  02B6               	subwf	___xxtofl@exp,f
  3882  0FB6  3001               	movlw	1
  3883  0FB7  00B1               	movwf	??___xxtofl
  3884  0FB8                     u3075:	
  3885  0FB8  1003               	clrc
  3886  0FB9  0DB7               	rlf	___xxtofl@arg,f
  3887  0FBA  0DB8               	rlf	___xxtofl@arg+1,f
  3888  0FBB  0DB9               	rlf	___xxtofl@arg+2,f
  3889  0FBC  0DBA               	rlf	___xxtofl@arg+3,f
  3890  0FBD  0BB1               	decfsz	??___xxtofl,f
  3891  0FBE  2FB8               	goto	u3075
  3892  0FBF                     l2992:	
  3893  0FBF  1BB9               	btfsc	___xxtofl@arg+2,7
  3894  0FC0  2FC2               	goto	u3081
  3895  0FC1  2FC3               	goto	u3080
  3896  0FC2                     u3081:	
  3897  0FC2  2FC9               	goto	l940
  3898  0FC3                     u3080:	
  3899  0FC3                     l2994:	
  3900  0FC3  3002               	movlw	2
  3901  0FC4  0236               	subwf	___xxtofl@exp,w
  3902  0FC5  1803               	skipnc
  3903  0FC6  2FC8               	goto	u3091
  3904  0FC7  2FC9               	goto	u3090
  3905  0FC8                     u3091:	
  3906  0FC8  2FB4               	goto	l2990
  3907  0FC9                     u3090:	
  3908  0FC9                     l940:	
  3909  0FC9  1836               	btfsc	___xxtofl@exp,0
  3910  0FCA  2FCC               	goto	u3101
  3911  0FCB  2FCD               	goto	u3100
  3912  0FCC                     u3101:	
  3913  0FCC  2FD5               	goto	l941
  3914  0FCD                     u3100:	
  3915  0FCD                     l2996:	
  3916  0FCD  30FF               	movlw	255
  3917  0FCE  05B7               	andwf	___xxtofl@arg,f
  3918  0FCF  30FF               	movlw	255
  3919  0FD0  05B8               	andwf	___xxtofl@arg+1,f
  3920  0FD1  307F               	movlw	127
  3921  0FD2  05B9               	andwf	___xxtofl@arg+2,f
  3922  0FD3  30FF               	movlw	255
  3923  0FD4  05BA               	andwf	___xxtofl@arg+3,f
  3924  0FD5                     l941:	
  3925  0FD5  1003               	clrc
  3926  0FD6  0CB6               	rrf	___xxtofl@exp,f
  3927  0FD7                     l2998:	
  3928  0FD7  0836               	movf	___xxtofl@exp,w
  3929  0FD8  00B1               	movwf	??___xxtofl
  3930  0FD9  01B2               	clrf	??___xxtofl+1
  3931  0FDA  01B3               	clrf	??___xxtofl+2
  3932  0FDB  01B4               	clrf	??___xxtofl+3
  3933  0FDC  3018               	movlw	24
  3934  0FDD                     u3115:	
  3935  0FDD  1003               	clrc
  3936  0FDE  0DB1               	rlf	??___xxtofl,f
  3937  0FDF  0DB2               	rlf	??___xxtofl+1,f
  3938  0FE0  0DB3               	rlf	??___xxtofl+2,f
  3939  0FE1  0DB4               	rlf	??___xxtofl+3,f
  3940  0FE2                     u3110:	
  3941  0FE2  3EFF               	addlw	-1
  3942  0FE3  1D03               	skipz
  3943  0FE4  2FDD               	goto	u3115
  3944  0FE5  0831               	movf	??___xxtofl,w
  3945  0FE6  04B7               	iorwf	___xxtofl@arg,f
  3946  0FE7  0832               	movf	??___xxtofl+1,w
  3947  0FE8  04B8               	iorwf	___xxtofl@arg+1,f
  3948  0FE9  0833               	movf	??___xxtofl+2,w
  3949  0FEA  04B9               	iorwf	___xxtofl@arg+2,f
  3950  0FEB  0834               	movf	??___xxtofl+3,w
  3951  0FEC  04BA               	iorwf	___xxtofl@arg+3,f
  3952  0FED                     l3000:	
  3953  0FED  0835               	movf	___xxtofl@sign,w
  3954  0FEE  1903               	btfsc	3,2
  3955  0FEF  2FF1               	goto	u3121
  3956  0FF0  2FF2               	goto	u3120
  3957  0FF1                     u3121:	
  3958  0FF1  2FF7               	goto	l3006
  3959  0FF2                     u3120:	
  3960  0FF2                     l3002:	
  3961  0FF2  1FB0               	btfss	___xxtofl@val+3,7
  3962  0FF3  2FF5               	goto	u3131
  3963  0FF4  2FF6               	goto	u3130
  3964  0FF5                     u3131:	
  3965  0FF5  2FF7               	goto	l3006
  3966  0FF6                     u3130:	
  3967  0FF6                     l3004:	
  3968  0FF6  17BA               	bsf	___xxtofl@arg+3,7
  3969  0FF7                     l3006:	
  3970  0FF7  083A               	movf	___xxtofl@arg+3,w
  3971  0FF8  00B0               	movwf	?___xxtofl+3
  3972  0FF9  0839               	movf	___xxtofl@arg+2,w
  3973  0FFA  00AF               	movwf	?___xxtofl+2
  3974  0FFB  0838               	movf	___xxtofl@arg+1,w
  3975  0FFC  00AE               	movwf	?___xxtofl+1
  3976  0FFD  0837               	movf	___xxtofl@arg,w
  3977  0FFE  00AD               	movwf	?___xxtofl
  3978  0FFF                     l929:	
  3979  0FFF  0008               	return
  3980  1000                     __end_of___xxtofl:	
  3981                           
  3982                           	psect	text19
  3983  0D25                     __ptext19:	
  3984 ;; *************** function ___fltol *****************
  3985 ;; Defined at:
  3986 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  f1              4   53[BANK0 ] unsigned char 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  exp1            1   63[BANK0 ] unsigned char 
  3991 ;;  sign1           1   62[BANK0 ] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  4   53[BANK0 ] long 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4001 ;;      Params:         0       4       0       0       0
  4002 ;;      Locals:         0       2       0       0       0
  4003 ;;      Temps:          0       5       0       0       0
  4004 ;;      Totals:         0      11       0       0       0
  4005 ;;Total ram usage:       11 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:    3
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_temp_sensor_read
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           
  4016                           ;psect for function ___fltol
  4017  0D25                     ___fltol:	
  4018  0D25                     l2648:	
  4019                           ;incstack = 0
  4020                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4021                           
  4022  0D25  1003               	clrc
  4023  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  4025  0D28  0D57               	rlf	___fltol@f1+2,w
  4026  0D29  0D58               	rlf	___fltol@f1+3,w
  4027  0D2A  00D9               	movwf	??___fltol
  4028  0D2B  0859               	movf	??___fltol,w
  4029  0D2C  00DF               	movwf	___fltol@exp1
  4030  0D2D  085F               	movf	___fltol@exp1,w
  4031  0D2E  1D03               	btfss	3,2
  4032  0D2F  2D31               	goto	u2241
  4033  0D30  2D32               	goto	u2240
  4034  0D31                     u2241:	
  4035  0D31  2D3B               	goto	l2654
  4036  0D32                     u2240:	
  4037  0D32                     l2650:	
  4038  0D32  3000               	movlw	0
  4039  0D33  00D8               	movwf	?___fltol+3
  4040  0D34  3000               	movlw	0
  4041  0D35  00D7               	movwf	?___fltol+2
  4042  0D36  3000               	movlw	0
  4043  0D37  00D6               	movwf	?___fltol+1
  4044  0D38  3000               	movlw	0
  4045  0D39  00D5               	movwf	?___fltol
  4046  0D3A  2DA0               	goto	l686
  4047  0D3B                     l2654:	
  4048  0D3B  0855               	movf	___fltol@f1,w
  4049  0D3C  00D9               	movwf	??___fltol
  4050  0D3D  0856               	movf	___fltol@f1+1,w
  4051  0D3E  00DA               	movwf	??___fltol+1
  4052  0D3F  0857               	movf	___fltol@f1+2,w
  4053  0D40  00DB               	movwf	??___fltol+2
  4054  0D41  0858               	movf	___fltol@f1+3,w
  4055  0D42  00DC               	movwf	??___fltol+3
  4056  0D43  301F               	movlw	31
  4057  0D44                     u2255:	
  4058  0D44  1003               	clrc
  4059  0D45  0CDC               	rrf	??___fltol+3,f
  4060  0D46  0CDB               	rrf	??___fltol+2,f
  4061  0D47  0CDA               	rrf	??___fltol+1,f
  4062  0D48  0CD9               	rrf	??___fltol,f
  4063  0D49                     u2250:	
  4064  0D49  3EFF               	addlw	-1
  4065  0D4A  1D03               	skipz
  4066  0D4B  2D44               	goto	u2255
  4067  0D4C  0859               	movf	??___fltol,w
  4068  0D4D  00DD               	movwf	??___fltol+4
  4069  0D4E  085D               	movf	??___fltol+4,w
  4070  0D4F  00DE               	movwf	___fltol@sign1
  4071  0D50                     l2656:	
  4072  0D50  17D7               	bsf	___fltol@f1+2,7
  4073  0D51                     l2658:	
  4074  0D51  30FF               	movlw	255
  4075  0D52  05D5               	andwf	___fltol@f1,f
  4076  0D53  30FF               	movlw	255
  4077  0D54  05D6               	andwf	___fltol@f1+1,f
  4078  0D55  30FF               	movlw	255
  4079  0D56  05D7               	andwf	___fltol@f1+2,f
  4080  0D57  3000               	movlw	0
  4081  0D58  05D8               	andwf	___fltol@f1+3,f
  4082  0D59                     l2660:	
  4083  0D59  3096               	movlw	150
  4084  0D5A  02DF               	subwf	___fltol@exp1,f
  4085  0D5B                     l2662:	
  4086  0D5B  1FDF               	btfss	___fltol@exp1,7
  4087  0D5C  2D5E               	goto	u2261
  4088  0D5D  2D5F               	goto	u2260
  4089  0D5E                     u2261:	
  4090  0D5E  2D79               	goto	l2672
  4091  0D5F                     u2260:	
  4092  0D5F                     l2664:	
  4093  0D5F  085F               	movf	___fltol@exp1,w
  4094  0D60  3A80               	xorlw	128
  4095  0D61  3E97               	addlw	151
  4096  0D62  1803               	skipnc
  4097  0D63  2D65               	goto	u2271
  4098  0D64  2D66               	goto	u2270
  4099  0D65                     u2271:	
  4100  0D65  2D67               	goto	l2670
  4101  0D66                     u2270:	
  4102  0D66  2D32               	goto	l2650
  4103  0D67                     l2670:	
  4104  0D67  3001               	movlw	1
  4105  0D68                     u2285:	
  4106  0D68  1003               	clrc
  4107  0D69  0CD8               	rrf	___fltol@f1+3,f
  4108  0D6A  0CD7               	rrf	___fltol@f1+2,f
  4109  0D6B  0CD6               	rrf	___fltol@f1+1,f
  4110  0D6C  0CD5               	rrf	___fltol@f1,f
  4111  0D6D  3EFF               	addlw	-1
  4112  0D6E  1D03               	skipz
  4113  0D6F  2D68               	goto	u2285
  4114  0D70  3001               	movlw	1
  4115  0D71  00D9               	movwf	??___fltol
  4116  0D72  0859               	movf	??___fltol,w
  4117  0D73  07DF               	addwf	___fltol@exp1,f
  4118  0D74  1D03               	btfss	3,2
  4119  0D75  2D77               	goto	u2291
  4120  0D76  2D78               	goto	u2290
  4121  0D77                     u2291:	
  4122  0D77  2D67               	goto	l2670
  4123  0D78                     u2290:	
  4124  0D78  2D90               	goto	l2680
  4125  0D79                     l2672:	
  4126  0D79  3020               	movlw	32
  4127  0D7A  025F               	subwf	___fltol@exp1,w
  4128  0D7B  1C03               	skipc
  4129  0D7C  2D7E               	goto	u2301
  4130  0D7D  2D7F               	goto	u2300
  4131  0D7E                     u2301:	
  4132  0D7E  2D8B               	goto	l693
  4133  0D7F                     u2300:	
  4134  0D7F  2D32               	goto	l2650
  4135  0D80                     l2678:	
  4136  0D80  3001               	movlw	1
  4137  0D81  00D9               	movwf	??___fltol
  4138  0D82                     u2315:	
  4139  0D82  1003               	clrc
  4140  0D83  0DD5               	rlf	___fltol@f1,f
  4141  0D84  0DD6               	rlf	___fltol@f1+1,f
  4142  0D85  0DD7               	rlf	___fltol@f1+2,f
  4143  0D86  0DD8               	rlf	___fltol@f1+3,f
  4144  0D87  0BD9               	decfsz	??___fltol,f
  4145  0D88  2D82               	goto	u2315
  4146  0D89  3001               	movlw	1
  4147  0D8A  02DF               	subwf	___fltol@exp1,f
  4148  0D8B                     l693:	
  4149  0D8B  085F               	movf	___fltol@exp1,w
  4150  0D8C  1D03               	btfss	3,2
  4151  0D8D  2D8F               	goto	u2321
  4152  0D8E  2D90               	goto	u2320
  4153  0D8F                     u2321:	
  4154  0D8F  2D80               	goto	l2678
  4155  0D90                     u2320:	
  4156  0D90                     l2680:	
  4157  0D90  085E               	movf	___fltol@sign1,w
  4158  0D91  1903               	btfsc	3,2
  4159  0D92  2D94               	goto	u2331
  4160  0D93  2D95               	goto	u2330
  4161  0D94                     u2331:	
  4162  0D94  2DA0               	goto	l696
  4163  0D95                     u2330:	
  4164  0D95                     l2682:	
  4165  0D95  09D5               	comf	___fltol@f1,f
  4166  0D96  09D6               	comf	___fltol@f1+1,f
  4167  0D97  09D7               	comf	___fltol@f1+2,f
  4168  0D98  09D8               	comf	___fltol@f1+3,f
  4169  0D99  0AD5               	incf	___fltol@f1,f
  4170  0D9A  1903               	skipnz
  4171  0D9B  0AD6               	incf	___fltol@f1+1,f
  4172  0D9C  1903               	skipnz
  4173  0D9D  0AD7               	incf	___fltol@f1+2,f
  4174  0D9E  1903               	skipnz
  4175  0D9F  0AD8               	incf	___fltol@f1+3,f
  4176  0DA0                     l696:	
  4177  0DA0                     l686:	
  4178  0DA0  0008               	return
  4179  0DA1                     __end_of___fltol:	
  4180                           
  4181                           	psect	text20
  4182  0060                     __ptext20:	
  4183 ;; *************** function ___flmul *****************
  4184 ;; Defined at:
  4185 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  b               4   27[BANK0 ] long 
  4188 ;;  a               4   31[BANK0 ] long 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  prod            4   47[BANK0 ] struct .
  4191 ;;  grs             4   41[BANK0 ] unsigned long 
  4192 ;;  temp            2   51[BANK0 ] struct .
  4193 ;;  bexp            1   46[BANK0 ] unsigned char 
  4194 ;;  aexp            1   45[BANK0 ] unsigned char 
  4195 ;;  sign            1   40[BANK0 ] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  4   27[BANK0 ] unsigned char 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4205 ;;      Params:         0       8       0       0       0
  4206 ;;      Locals:         0      13       0       0       0
  4207 ;;      Temps:          0       5       0       0       0
  4208 ;;      Totals:         0      26       0       0       0
  4209 ;;Total ram usage:       26 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    4
  4212 ;; This function calls:
  4213 ;;		__Umul8_16
  4214 ;; This function is called by:
  4215 ;;		_temp_sensor_read
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function ___flmul
  4221  0060                     ___flmul:	
  4222  0060                     l2826:	
  4223                           ;incstack = 0
  4224                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4225                           
  4226  0060  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0061  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0062  083E               	movf	___flmul@b+3,w
  4229  0063  3980               	andlw	128
  4230  0064  00C3               	movwf	??___flmul
  4231  0065  0843               	movf	??___flmul,w
  4232  0066  00C8               	movwf	___flmul@sign
  4233  0067                     l2828:	
  4234  0067  083E               	movf	___flmul@b+3,w
  4235  0068  00C3               	movwf	??___flmul
  4236  0069  0743               	addwf	??___flmul,w
  4237  006A  00C4               	movwf	??___flmul+1
  4238  006B  0844               	movf	??___flmul+1,w
  4239  006C  00CE               	movwf	___flmul@bexp
  4240  006D                     l2830:	
  4241  006D  1FBD               	btfss	___flmul@b+2,7
  4242  006E  2870               	goto	u2631
  4243  006F  2871               	goto	u2630
  4244  0070                     u2631:	
  4245  0070  2872               	goto	l2834
  4246  0071                     u2630:	
  4247  0071                     l2832:	
  4248  0071  144E               	bsf	___flmul@bexp,0
  4249  0072                     l2834:	
  4250  0072  084E               	movf	___flmul@bexp,w
  4251  0073  1903               	btfsc	3,2
  4252  0074  2876               	goto	u2641
  4253  0075  2877               	goto	u2640
  4254  0076                     u2641:	
  4255  0076  2886               	goto	l2842
  4256  0077                     u2640:	
  4257  0077                     l2836:	
  4258  0077  0A4E               	incf	___flmul@bexp,w
  4259  0078  1D03               	btfss	3,2
  4260  0079  287B               	goto	u2651
  4261  007A  287C               	goto	u2650
  4262  007B                     u2651:	
  4263  007B  2884               	goto	l2840
  4264  007C                     u2650:	
  4265  007C                     l2838:	
  4266  007C  3000               	movlw	0
  4267  007D  00BE               	movwf	___flmul@b+3
  4268  007E  3000               	movlw	0
  4269  007F  00BD               	movwf	___flmul@b+2
  4270  0080  3000               	movlw	0
  4271  0081  00BC               	movwf	___flmul@b+1
  4272  0082  3000               	movlw	0
  4273  0083  00BB               	movwf	___flmul@b
  4274  0084                     l2840:	
  4275  0084  17BD               	bsf	___flmul@b+2,7
  4276  0085  288E               	goto	l2844
  4277  0086                     l2842:	
  4278  0086  3000               	movlw	0
  4279  0087  00BE               	movwf	___flmul@b+3
  4280  0088  3000               	movlw	0
  4281  0089  00BD               	movwf	___flmul@b+2
  4282  008A  3000               	movlw	0
  4283  008B  00BC               	movwf	___flmul@b+1
  4284  008C  3000               	movlw	0
  4285  008D  00BB               	movwf	___flmul@b
  4286  008E                     l2844:	
  4287  008E  0842               	movf	___flmul@a+3,w
  4288  008F  3980               	andlw	128
  4289  0090  00C3               	movwf	??___flmul
  4290  0091  0843               	movf	??___flmul,w
  4291  0092  06C8               	xorwf	___flmul@sign,f
  4292  0093                     l2846:	
  4293  0093  0842               	movf	___flmul@a+3,w
  4294  0094  00C3               	movwf	??___flmul
  4295  0095  0743               	addwf	??___flmul,w
  4296  0096  00C4               	movwf	??___flmul+1
  4297  0097  0844               	movf	??___flmul+1,w
  4298  0098  00CD               	movwf	___flmul@aexp
  4299  0099                     l2848:	
  4300  0099  1FC1               	btfss	___flmul@a+2,7
  4301  009A  289C               	goto	u2661
  4302  009B  289D               	goto	u2660
  4303  009C                     u2661:	
  4304  009C  289E               	goto	l2852
  4305  009D                     u2660:	
  4306  009D                     l2850:	
  4307  009D  144D               	bsf	___flmul@aexp,0
  4308  009E                     l2852:	
  4309  009E  084D               	movf	___flmul@aexp,w
  4310  009F  1903               	btfsc	3,2
  4311  00A0  28A2               	goto	u2671
  4312  00A1  28A3               	goto	u2670
  4313  00A2                     u2671:	
  4314  00A2  28B2               	goto	l2860
  4315  00A3                     u2670:	
  4316  00A3                     l2854:	
  4317  00A3  0A4D               	incf	___flmul@aexp,w
  4318  00A4  1D03               	btfss	3,2
  4319  00A5  28A7               	goto	u2681
  4320  00A6  28A8               	goto	u2680
  4321  00A7                     u2681:	
  4322  00A7  28B0               	goto	l2858
  4323  00A8                     u2680:	
  4324  00A8                     l2856:	
  4325  00A8  3000               	movlw	0
  4326  00A9  00C2               	movwf	___flmul@a+3
  4327  00AA  3000               	movlw	0
  4328  00AB  00C1               	movwf	___flmul@a+2
  4329  00AC  3000               	movlw	0
  4330  00AD  00C0               	movwf	___flmul@a+1
  4331  00AE  3000               	movlw	0
  4332  00AF  00BF               	movwf	___flmul@a
  4333  00B0                     l2858:	
  4334  00B0  17C1               	bsf	___flmul@a+2,7
  4335  00B1  28BA               	goto	l2862
  4336  00B2                     l2860:	
  4337  00B2  3000               	movlw	0
  4338  00B3  00C2               	movwf	___flmul@a+3
  4339  00B4  3000               	movlw	0
  4340  00B5  00C1               	movwf	___flmul@a+2
  4341  00B6  3000               	movlw	0
  4342  00B7  00C0               	movwf	___flmul@a+1
  4343  00B8  3000               	movlw	0
  4344  00B9  00BF               	movwf	___flmul@a
  4345  00BA                     l2862:	
  4346  00BA  084D               	movf	___flmul@aexp,w
  4347  00BB  1903               	btfsc	3,2
  4348  00BC  28BE               	goto	u2691
  4349  00BD  28BF               	goto	u2690
  4350  00BE                     u2691:	
  4351  00BE  28C4               	goto	l2866
  4352  00BF                     u2690:	
  4353  00BF                     l2864:	
  4354  00BF  084E               	movf	___flmul@bexp,w
  4355  00C0  1D03               	btfss	3,2
  4356  00C1  28C3               	goto	u2701
  4357  00C2  28C4               	goto	u2700
  4358  00C3                     u2701:	
  4359  00C3  28CD               	goto	l2870
  4360  00C4                     u2700:	
  4361  00C4                     l2866:	
  4362  00C4  3000               	movlw	0
  4363  00C5  00BE               	movwf	?___flmul+3
  4364  00C6  3000               	movlw	0
  4365  00C7  00BD               	movwf	?___flmul+2
  4366  00C8  3000               	movlw	0
  4367  00C9  00BC               	movwf	?___flmul+1
  4368  00CA  3000               	movlw	0
  4369  00CB  00BB               	movwf	?___flmul
  4370  00CC  2BC0               	goto	l889
  4371  00CD                     l2870:	
  4372  00CD  083B               	movf	___flmul@b,w
  4373  00CE  00C3               	movwf	??___flmul
  4374  00CF  0843               	movf	??___flmul,w
  4375  00D0  00A8               	movwf	__Umul8_16@multiplicand
  4376  00D1  0841               	movf	___flmul@a+2,w
  4377  00D2  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4378  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  4379  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  4380  00D9  0829               	movf	?__Umul8_16+1,w
  4381  00DA  00D4               	movwf	___flmul@temp+1
  4382  00DB  0828               	movf	?__Umul8_16,w
  4383  00DC  00D3               	movwf	___flmul@temp
  4384  00DD                     l2872:	
  4385  00DD  0853               	movf	___flmul@temp,w
  4386  00DE  00C3               	movwf	??___flmul
  4387  00DF  01C4               	clrf	??___flmul+1
  4388  00E0  01C5               	clrf	??___flmul+2
  4389  00E1  01C6               	clrf	??___flmul+3
  4390  00E2  0846               	movf	??___flmul+3,w
  4391  00E3  00CC               	movwf	___flmul@grs+3
  4392  00E4  0845               	movf	??___flmul+2,w
  4393  00E5  00CB               	movwf	___flmul@grs+2
  4394  00E6  0844               	movf	??___flmul+1,w
  4395  00E7  00CA               	movwf	___flmul@grs+1
  4396  00E8  0843               	movf	??___flmul,w
  4397  00E9  00C9               	movwf	___flmul@grs
  4398  00EA                     l2874:	
  4399  00EA  0854               	movf	___flmul@temp+1,w
  4400  00EB  00C3               	movwf	??___flmul
  4401  00EC  01C4               	clrf	??___flmul+1
  4402  00ED  01C5               	clrf	??___flmul+2
  4403  00EE  01C6               	clrf	??___flmul+3
  4404  00EF  0846               	movf	??___flmul+3,w
  4405  00F0  00D2               	movwf	___flmul@prod+3
  4406  00F1  0845               	movf	??___flmul+2,w
  4407  00F2  00D1               	movwf	___flmul@prod+2
  4408  00F3  0844               	movf	??___flmul+1,w
  4409  00F4  00D0               	movwf	___flmul@prod+1
  4410  00F5  0843               	movf	??___flmul,w
  4411  00F6  00CF               	movwf	___flmul@prod
  4412  00F7  083C               	movf	___flmul@b+1,w
  4413  00F8  00C3               	movwf	??___flmul
  4414  00F9  0843               	movf	??___flmul,w
  4415  00FA  00A8               	movwf	__Umul8_16@multiplicand
  4416  00FB  0840               	movf	___flmul@a+1,w
  4417  00FC  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4418  0101  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0102  1303               	bcf	3,6	;RP1=0, select bank0
  4420  0103  0829               	movf	?__Umul8_16+1,w
  4421  0104  00D4               	movwf	___flmul@temp+1
  4422  0105  0828               	movf	?__Umul8_16,w
  4423  0106  00D3               	movwf	___flmul@temp
  4424  0107                     l2876:	
  4425  0107  0853               	movf	___flmul@temp,w
  4426  0108  00C3               	movwf	??___flmul
  4427  0109  01C4               	clrf	??___flmul+1
  4428  010A  01C5               	clrf	??___flmul+2
  4429  010B  01C6               	clrf	??___flmul+3
  4430  010C  0843               	movf	??___flmul,w
  4431  010D  07C9               	addwf	___flmul@grs,f
  4432  010E  0844               	movf	??___flmul+1,w
  4433  010F  1103               	clrz
  4434  0110  1803               	skipnc
  4435  0111  3E01               	addlw	1
  4436  0112  1903               	skipnz
  4437  0113  2915               	goto	u2711
  4438  0114  07CA               	addwf	___flmul@grs+1,f
  4439  0115                     u2711:	
  4440  0115  0845               	movf	??___flmul+2,w
  4441  0116  1103               	clrz
  4442  0117  1803               	skipnc
  4443  0118  3E01               	addlw	1
  4444  0119  1903               	skipnz
  4445  011A  291C               	goto	u2712
  4446  011B  07CB               	addwf	___flmul@grs+2,f
  4447  011C                     u2712:	
  4448  011C  0846               	movf	??___flmul+3,w
  4449  011D  1103               	clrz
  4450  011E  1803               	skipnc
  4451  011F  3E01               	addlw	1
  4452  0120  1903               	skipnz
  4453  0121  2923               	goto	u2713
  4454  0122  07CC               	addwf	___flmul@grs+3,f
  4455  0123                     u2713:	
  4456  0123                     l2878:	
  4457  0123  0854               	movf	___flmul@temp+1,w
  4458  0124  00C3               	movwf	??___flmul
  4459  0125  01C4               	clrf	??___flmul+1
  4460  0126  01C5               	clrf	??___flmul+2
  4461  0127  01C6               	clrf	??___flmul+3
  4462  0128  0843               	movf	??___flmul,w
  4463  0129  07CF               	addwf	___flmul@prod,f
  4464  012A  0844               	movf	??___flmul+1,w
  4465  012B  1103               	clrz
  4466  012C  1803               	skipnc
  4467  012D  3E01               	addlw	1
  4468  012E  1903               	skipnz
  4469  012F  2931               	goto	u2721
  4470  0130  07D0               	addwf	___flmul@prod+1,f
  4471  0131                     u2721:	
  4472  0131  0845               	movf	??___flmul+2,w
  4473  0132  1103               	clrz
  4474  0133  1803               	skipnc
  4475  0134  3E01               	addlw	1
  4476  0135  1903               	skipnz
  4477  0136  2938               	goto	u2722
  4478  0137  07D1               	addwf	___flmul@prod+2,f
  4479  0138                     u2722:	
  4480  0138  0846               	movf	??___flmul+3,w
  4481  0139  1103               	clrz
  4482  013A  1803               	skipnc
  4483  013B  3E01               	addlw	1
  4484  013C  1903               	skipnz
  4485  013D  293F               	goto	u2723
  4486  013E  07D2               	addwf	___flmul@prod+3,f
  4487  013F                     u2723:	
  4488  013F  083D               	movf	___flmul@b+2,w
  4489  0140  00C3               	movwf	??___flmul
  4490  0141  0843               	movf	??___flmul,w
  4491  0142  00A8               	movwf	__Umul8_16@multiplicand
  4492  0143  083F               	movf	___flmul@a,w
  4493  0144  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4494  0149  1283               	bcf	3,5	;RP0=0, select bank0
  4495  014A  1303               	bcf	3,6	;RP1=0, select bank0
  4496  014B  0829               	movf	?__Umul8_16+1,w
  4497  014C  00D4               	movwf	___flmul@temp+1
  4498  014D  0828               	movf	?__Umul8_16,w
  4499  014E  00D3               	movwf	___flmul@temp
  4500  014F                     l2880:	
  4501  014F  0853               	movf	___flmul@temp,w
  4502  0150  00C3               	movwf	??___flmul
  4503  0151  01C4               	clrf	??___flmul+1
  4504  0152  01C5               	clrf	??___flmul+2
  4505  0153  01C6               	clrf	??___flmul+3
  4506  0154  0843               	movf	??___flmul,w
  4507  0155  07C9               	addwf	___flmul@grs,f
  4508  0156  0844               	movf	??___flmul+1,w
  4509  0157  1103               	clrz
  4510  0158  1803               	skipnc
  4511  0159  3E01               	addlw	1
  4512  015A  1903               	skipnz
  4513  015B  295D               	goto	u2731
  4514  015C  07CA               	addwf	___flmul@grs+1,f
  4515  015D                     u2731:	
  4516  015D  0845               	movf	??___flmul+2,w
  4517  015E  1103               	clrz
  4518  015F  1803               	skipnc
  4519  0160  3E01               	addlw	1
  4520  0161  1903               	skipnz
  4521  0162  2964               	goto	u2732
  4522  0163  07CB               	addwf	___flmul@grs+2,f
  4523  0164                     u2732:	
  4524  0164  0846               	movf	??___flmul+3,w
  4525  0165  1103               	clrz
  4526  0166  1803               	skipnc
  4527  0167  3E01               	addlw	1
  4528  0168  1903               	skipnz
  4529  0169  296B               	goto	u2733
  4530  016A  07CC               	addwf	___flmul@grs+3,f
  4531  016B                     u2733:	
  4532  016B                     l2882:	
  4533  016B  0854               	movf	___flmul@temp+1,w
  4534  016C  00C3               	movwf	??___flmul
  4535  016D  01C4               	clrf	??___flmul+1
  4536  016E  01C5               	clrf	??___flmul+2
  4537  016F  01C6               	clrf	??___flmul+3
  4538  0170  0843               	movf	??___flmul,w
  4539  0171  07CF               	addwf	___flmul@prod,f
  4540  0172  0844               	movf	??___flmul+1,w
  4541  0173  1103               	clrz
  4542  0174  1803               	skipnc
  4543  0175  3E01               	addlw	1
  4544  0176  1903               	skipnz
  4545  0177  2979               	goto	u2741
  4546  0178  07D0               	addwf	___flmul@prod+1,f
  4547  0179                     u2741:	
  4548  0179  0845               	movf	??___flmul+2,w
  4549  017A  1103               	clrz
  4550  017B  1803               	skipnc
  4551  017C  3E01               	addlw	1
  4552  017D  1903               	skipnz
  4553  017E  2980               	goto	u2742
  4554  017F  07D1               	addwf	___flmul@prod+2,f
  4555  0180                     u2742:	
  4556  0180  0846               	movf	??___flmul+3,w
  4557  0181  1103               	clrz
  4558  0182  1803               	skipnc
  4559  0183  3E01               	addlw	1
  4560  0184  1903               	skipnz
  4561  0185  2987               	goto	u2743
  4562  0186  07D2               	addwf	___flmul@prod+3,f
  4563  0187                     u2743:	
  4564  0187                     l2884:	
  4565  0187  3008               	movlw	8
  4566  0188  00C3               	movwf	??___flmul
  4567  0189                     u2755:	
  4568  0189  1003               	clrc
  4569  018A  0DC9               	rlf	___flmul@grs,f
  4570  018B  0DCA               	rlf	___flmul@grs+1,f
  4571  018C  0DCB               	rlf	___flmul@grs+2,f
  4572  018D  0DCC               	rlf	___flmul@grs+3,f
  4573  018E  0BC3               	decfsz	??___flmul,f
  4574  018F  2989               	goto	u2755
  4575  0190                     l2886:	
  4576  0190  083C               	movf	___flmul@b+1,w
  4577  0191  00C3               	movwf	??___flmul
  4578  0192  0843               	movf	??___flmul,w
  4579  0193  00A8               	movwf	__Umul8_16@multiplicand
  4580  0194  083F               	movf	___flmul@a,w
  4581  0195  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4582  019A  1283               	bcf	3,5	;RP0=0, select bank0
  4583  019B  1303               	bcf	3,6	;RP1=0, select bank0
  4584  019C  0829               	movf	?__Umul8_16+1,w
  4585  019D  00D4               	movwf	___flmul@temp+1
  4586  019E  0828               	movf	?__Umul8_16,w
  4587  019F  00D3               	movwf	___flmul@temp
  4588  01A0                     l2888:	
  4589  01A0  0853               	movf	___flmul@temp,w
  4590  01A1  00C3               	movwf	??___flmul
  4591  01A2  0854               	movf	___flmul@temp+1,w
  4592  01A3  00C4               	movwf	??___flmul+1
  4593  01A4  01C5               	clrf	??___flmul+2
  4594  01A5  01C6               	clrf	??___flmul+3
  4595  01A6  0843               	movf	??___flmul,w
  4596  01A7  07C9               	addwf	___flmul@grs,f
  4597  01A8  0844               	movf	??___flmul+1,w
  4598  01A9  1103               	clrz
  4599  01AA  1803               	skipnc
  4600  01AB  3E01               	addlw	1
  4601  01AC  1903               	skipnz
  4602  01AD  29AF               	goto	u2761
  4603  01AE  07CA               	addwf	___flmul@grs+1,f
  4604  01AF                     u2761:	
  4605  01AF  0845               	movf	??___flmul+2,w
  4606  01B0  1103               	clrz
  4607  01B1  1803               	skipnc
  4608  01B2  3E01               	addlw	1
  4609  01B3  1903               	skipnz
  4610  01B4  29B6               	goto	u2762
  4611  01B5  07CB               	addwf	___flmul@grs+2,f
  4612  01B6                     u2762:	
  4613  01B6  0846               	movf	??___flmul+3,w
  4614  01B7  1103               	clrz
  4615  01B8  1803               	skipnc
  4616  01B9  3E01               	addlw	1
  4617  01BA  1903               	skipnz
  4618  01BB  29BD               	goto	u2763
  4619  01BC  07CC               	addwf	___flmul@grs+3,f
  4620  01BD                     u2763:	
  4621  01BD                     l2890:	
  4622  01BD  083B               	movf	___flmul@b,w
  4623  01BE  00C3               	movwf	??___flmul
  4624  01BF  0843               	movf	??___flmul,w
  4625  01C0  00A8               	movwf	__Umul8_16@multiplicand
  4626  01C1  0840               	movf	___flmul@a+1,w
  4627  01C2  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4628  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  4629  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  4630  01C9  0829               	movf	?__Umul8_16+1,w
  4631  01CA  00D4               	movwf	___flmul@temp+1
  4632  01CB  0828               	movf	?__Umul8_16,w
  4633  01CC  00D3               	movwf	___flmul@temp
  4634  01CD                     l2892:	
  4635  01CD  0853               	movf	___flmul@temp,w
  4636  01CE  00C3               	movwf	??___flmul
  4637  01CF  0854               	movf	___flmul@temp+1,w
  4638  01D0  00C4               	movwf	??___flmul+1
  4639  01D1  01C5               	clrf	??___flmul+2
  4640  01D2  01C6               	clrf	??___flmul+3
  4641  01D3  0843               	movf	??___flmul,w
  4642  01D4  07C9               	addwf	___flmul@grs,f
  4643  01D5  0844               	movf	??___flmul+1,w
  4644  01D6  1103               	clrz
  4645  01D7  1803               	skipnc
  4646  01D8  3E01               	addlw	1
  4647  01D9  1903               	skipnz
  4648  01DA  29DC               	goto	u2771
  4649  01DB  07CA               	addwf	___flmul@grs+1,f
  4650  01DC                     u2771:	
  4651  01DC  0845               	movf	??___flmul+2,w
  4652  01DD  1103               	clrz
  4653  01DE  1803               	skipnc
  4654  01DF  3E01               	addlw	1
  4655  01E0  1903               	skipnz
  4656  01E1  29E3               	goto	u2772
  4657  01E2  07CB               	addwf	___flmul@grs+2,f
  4658  01E3                     u2772:	
  4659  01E3  0846               	movf	??___flmul+3,w
  4660  01E4  1103               	clrz
  4661  01E5  1803               	skipnc
  4662  01E6  3E01               	addlw	1
  4663  01E7  1903               	skipnz
  4664  01E8  29EA               	goto	u2773
  4665  01E9  07CC               	addwf	___flmul@grs+3,f
  4666  01EA                     u2773:	
  4667  01EA                     l2894:	
  4668  01EA  3008               	movlw	8
  4669  01EB  00C3               	movwf	??___flmul
  4670  01EC                     u2785:	
  4671  01EC  1003               	clrc
  4672  01ED  0DC9               	rlf	___flmul@grs,f
  4673  01EE  0DCA               	rlf	___flmul@grs+1,f
  4674  01EF  0DCB               	rlf	___flmul@grs+2,f
  4675  01F0  0DCC               	rlf	___flmul@grs+3,f
  4676  01F1  0BC3               	decfsz	??___flmul,f
  4677  01F2  29EC               	goto	u2785
  4678  01F3  083B               	movf	___flmul@b,w
  4679  01F4  00C3               	movwf	??___flmul
  4680  01F5  0843               	movf	??___flmul,w
  4681  01F6  00A8               	movwf	__Umul8_16@multiplicand
  4682  01F7  083F               	movf	___flmul@a,w
  4683  01F8  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4684  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  4685  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  4686  01FF  0829               	movf	?__Umul8_16+1,w
  4687  0200  00D4               	movwf	___flmul@temp+1
  4688  0201  0828               	movf	?__Umul8_16,w
  4689  0202  00D3               	movwf	___flmul@temp
  4690  0203                     l2896:	
  4691  0203  0853               	movf	___flmul@temp,w
  4692  0204  00C3               	movwf	??___flmul
  4693  0205  0854               	movf	___flmul@temp+1,w
  4694  0206  00C4               	movwf	??___flmul+1
  4695  0207  01C5               	clrf	??___flmul+2
  4696  0208  01C6               	clrf	??___flmul+3
  4697  0209  0843               	movf	??___flmul,w
  4698  020A  07C9               	addwf	___flmul@grs,f
  4699  020B  0844               	movf	??___flmul+1,w
  4700  020C  1103               	clrz
  4701  020D  1803               	skipnc
  4702  020E  3E01               	addlw	1
  4703  020F  1903               	skipnz
  4704  0210  2A12               	goto	u2791
  4705  0211  07CA               	addwf	___flmul@grs+1,f
  4706  0212                     u2791:	
  4707  0212  0845               	movf	??___flmul+2,w
  4708  0213  1103               	clrz
  4709  0214  1803               	skipnc
  4710  0215  3E01               	addlw	1
  4711  0216  1903               	skipnz
  4712  0217  2A19               	goto	u2792
  4713  0218  07CB               	addwf	___flmul@grs+2,f
  4714  0219                     u2792:	
  4715  0219  0846               	movf	??___flmul+3,w
  4716  021A  1103               	clrz
  4717  021B  1803               	skipnc
  4718  021C  3E01               	addlw	1
  4719  021D  1903               	skipnz
  4720  021E  2A20               	goto	u2793
  4721  021F  07CC               	addwf	___flmul@grs+3,f
  4722  0220                     u2793:	
  4723  0220                     l2898:	
  4724  0220  083C               	movf	___flmul@b+1,w
  4725  0221  00C3               	movwf	??___flmul
  4726  0222  0843               	movf	??___flmul,w
  4727  0223  00A8               	movwf	__Umul8_16@multiplicand
  4728  0224  0841               	movf	___flmul@a+2,w
  4729  0225  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4730  022A  1283               	bcf	3,5	;RP0=0, select bank0
  4731  022B  1303               	bcf	3,6	;RP1=0, select bank0
  4732  022C  0829               	movf	?__Umul8_16+1,w
  4733  022D  00D4               	movwf	___flmul@temp+1
  4734  022E  0828               	movf	?__Umul8_16,w
  4735  022F  00D3               	movwf	___flmul@temp
  4736  0230  0853               	movf	___flmul@temp,w
  4737  0231  00C3               	movwf	??___flmul
  4738  0232  0854               	movf	___flmul@temp+1,w
  4739  0233  00C4               	movwf	??___flmul+1
  4740  0234  01C5               	clrf	??___flmul+2
  4741  0235  01C6               	clrf	??___flmul+3
  4742  0236  0843               	movf	??___flmul,w
  4743  0237  07CF               	addwf	___flmul@prod,f
  4744  0238  0844               	movf	??___flmul+1,w
  4745  0239  1103               	clrz
  4746  023A  1803               	skipnc
  4747  023B  3E01               	addlw	1
  4748  023C  1903               	skipnz
  4749  023D  2A3F               	goto	u2801
  4750  023E  07D0               	addwf	___flmul@prod+1,f
  4751  023F                     u2801:	
  4752  023F  0845               	movf	??___flmul+2,w
  4753  0240  1103               	clrz
  4754  0241  1803               	skipnc
  4755  0242  3E01               	addlw	1
  4756  0243  1903               	skipnz
  4757  0244  2A46               	goto	u2802
  4758  0245  07D1               	addwf	___flmul@prod+2,f
  4759  0246                     u2802:	
  4760  0246  0846               	movf	??___flmul+3,w
  4761  0247  1103               	clrz
  4762  0248  1803               	skipnc
  4763  0249  3E01               	addlw	1
  4764  024A  1903               	skipnz
  4765  024B  2A4D               	goto	u2803
  4766  024C  07D2               	addwf	___flmul@prod+3,f
  4767  024D                     u2803:	
  4768  024D                     l2900:	
  4769  024D  083D               	movf	___flmul@b+2,w
  4770  024E  00C3               	movwf	??___flmul
  4771  024F  0843               	movf	??___flmul,w
  4772  0250  00A8               	movwf	__Umul8_16@multiplicand
  4773  0251  0840               	movf	___flmul@a+1,w
  4774  0252  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4775  0257  1283               	bcf	3,5	;RP0=0, select bank0
  4776  0258  1303               	bcf	3,6	;RP1=0, select bank0
  4777  0259  0829               	movf	?__Umul8_16+1,w
  4778  025A  00D4               	movwf	___flmul@temp+1
  4779  025B  0828               	movf	?__Umul8_16,w
  4780  025C  00D3               	movwf	___flmul@temp
  4781  025D                     l2902:	
  4782  025D  0853               	movf	___flmul@temp,w
  4783  025E  00C3               	movwf	??___flmul
  4784  025F  0854               	movf	___flmul@temp+1,w
  4785  0260  00C4               	movwf	??___flmul+1
  4786  0261  01C5               	clrf	??___flmul+2
  4787  0262  01C6               	clrf	??___flmul+3
  4788  0263  0843               	movf	??___flmul,w
  4789  0264  07CF               	addwf	___flmul@prod,f
  4790  0265  0844               	movf	??___flmul+1,w
  4791  0266  1103               	clrz
  4792  0267  1803               	skipnc
  4793  0268  3E01               	addlw	1
  4794  0269  1903               	skipnz
  4795  026A  2A6C               	goto	u2811
  4796  026B  07D0               	addwf	___flmul@prod+1,f
  4797  026C                     u2811:	
  4798  026C  0845               	movf	??___flmul+2,w
  4799  026D  1103               	clrz
  4800  026E  1803               	skipnc
  4801  026F  3E01               	addlw	1
  4802  0270  1903               	skipnz
  4803  0271  2A73               	goto	u2812
  4804  0272  07D1               	addwf	___flmul@prod+2,f
  4805  0273                     u2812:	
  4806  0273  0846               	movf	??___flmul+3,w
  4807  0274  1103               	clrz
  4808  0275  1803               	skipnc
  4809  0276  3E01               	addlw	1
  4810  0277  1903               	skipnz
  4811  0278  2A7A               	goto	u2813
  4812  0279  07D2               	addwf	___flmul@prod+3,f
  4813  027A                     u2813:	
  4814  027A  083D               	movf	___flmul@b+2,w
  4815  027B  00C3               	movwf	??___flmul
  4816  027C  0843               	movf	??___flmul,w
  4817  027D  00A8               	movwf	__Umul8_16@multiplicand
  4818  027E  0841               	movf	___flmul@a+2,w
  4819  027F  120A  158A  208E  120A  118A  	fcall	__Umul8_16
  4820  0284  1283               	bcf	3,5	;RP0=0, select bank0
  4821  0285  1303               	bcf	3,6	;RP1=0, select bank0
  4822  0286  0829               	movf	?__Umul8_16+1,w
  4823  0287  00D4               	movwf	___flmul@temp+1
  4824  0288  0828               	movf	?__Umul8_16,w
  4825  0289  00D3               	movwf	___flmul@temp
  4826  028A                     l2904:	
  4827  028A  0853               	movf	___flmul@temp,w
  4828  028B  00C3               	movwf	??___flmul
  4829  028C  0854               	movf	___flmul@temp+1,w
  4830  028D  00C4               	movwf	??___flmul+1
  4831  028E  01C5               	clrf	??___flmul+2
  4832  028F  01C6               	clrf	??___flmul+3
  4833  0290  3008               	movlw	8
  4834  0291                     u2825:	
  4835  0291  1003               	clrc
  4836  0292  0DC3               	rlf	??___flmul,f
  4837  0293  0DC4               	rlf	??___flmul+1,f
  4838  0294  0DC5               	rlf	??___flmul+2,f
  4839  0295  0DC6               	rlf	??___flmul+3,f
  4840  0296                     u2820:	
  4841  0296  3EFF               	addlw	-1
  4842  0297  1D03               	skipz
  4843  0298  2A91               	goto	u2825
  4844  0299  0843               	movf	??___flmul,w
  4845  029A  07CF               	addwf	___flmul@prod,f
  4846  029B  0844               	movf	??___flmul+1,w
  4847  029C  1103               	clrz
  4848  029D  1803               	skipnc
  4849  029E  3E01               	addlw	1
  4850  029F  1903               	skipnz
  4851  02A0  2AA2               	goto	u2831
  4852  02A1  07D0               	addwf	___flmul@prod+1,f
  4853  02A2                     u2831:	
  4854  02A2  0845               	movf	??___flmul+2,w
  4855  02A3  1103               	clrz
  4856  02A4  1803               	skipnc
  4857  02A5  3E01               	addlw	1
  4858  02A6  1903               	skipnz
  4859  02A7  2AA9               	goto	u2832
  4860  02A8  07D1               	addwf	___flmul@prod+2,f
  4861  02A9                     u2832:	
  4862  02A9  0846               	movf	??___flmul+3,w
  4863  02AA  1103               	clrz
  4864  02AB  1803               	skipnc
  4865  02AC  3E01               	addlw	1
  4866  02AD  1903               	skipnz
  4867  02AE  2AB0               	goto	u2833
  4868  02AF  07D2               	addwf	___flmul@prod+3,f
  4869  02B0                     u2833:	
  4870  02B0                     l2906:	
  4871  02B0  0849               	movf	___flmul@grs,w
  4872  02B1  00C3               	movwf	??___flmul
  4873  02B2  084A               	movf	___flmul@grs+1,w
  4874  02B3  00C4               	movwf	??___flmul+1
  4875  02B4  084B               	movf	___flmul@grs+2,w
  4876  02B5  00C5               	movwf	??___flmul+2
  4877  02B6  084C               	movf	___flmul@grs+3,w
  4878  02B7  00C6               	movwf	??___flmul+3
  4879  02B8  3018               	movlw	24
  4880  02B9                     u2845:	
  4881  02B9  1003               	clrc
  4882  02BA  0CC6               	rrf	??___flmul+3,f
  4883  02BB  0CC5               	rrf	??___flmul+2,f
  4884  02BC  0CC4               	rrf	??___flmul+1,f
  4885  02BD  0CC3               	rrf	??___flmul,f
  4886  02BE                     u2840:	
  4887  02BE  3EFF               	addlw	-1
  4888  02BF  1D03               	skipz
  4889  02C0  2AB9               	goto	u2845
  4890  02C1  0843               	movf	??___flmul,w
  4891  02C2  07CF               	addwf	___flmul@prod,f
  4892  02C3  0844               	movf	??___flmul+1,w
  4893  02C4  1103               	clrz
  4894  02C5  1803               	skipnc
  4895  02C6  3E01               	addlw	1
  4896  02C7  1903               	skipnz
  4897  02C8  2ACA               	goto	u2851
  4898  02C9  07D0               	addwf	___flmul@prod+1,f
  4899  02CA                     u2851:	
  4900  02CA  0845               	movf	??___flmul+2,w
  4901  02CB  1103               	clrz
  4902  02CC  1803               	skipnc
  4903  02CD  3E01               	addlw	1
  4904  02CE  1903               	skipnz
  4905  02CF  2AD1               	goto	u2852
  4906  02D0  07D1               	addwf	___flmul@prod+2,f
  4907  02D1                     u2852:	
  4908  02D1  0846               	movf	??___flmul+3,w
  4909  02D2  1103               	clrz
  4910  02D3  1803               	skipnc
  4911  02D4  3E01               	addlw	1
  4912  02D5  1903               	skipnz
  4913  02D6  2AD8               	goto	u2853
  4914  02D7  07D2               	addwf	___flmul@prod+3,f
  4915  02D8                     u2853:	
  4916  02D8                     l2908:	
  4917  02D8  3008               	movlw	8
  4918  02D9  00C3               	movwf	??___flmul
  4919  02DA                     u2865:	
  4920  02DA  1003               	clrc
  4921  02DB  0DC9               	rlf	___flmul@grs,f
  4922  02DC  0DCA               	rlf	___flmul@grs+1,f
  4923  02DD  0DCB               	rlf	___flmul@grs+2,f
  4924  02DE  0DCC               	rlf	___flmul@grs+3,f
  4925  02DF  0BC3               	decfsz	??___flmul,f
  4926  02E0  2ADA               	goto	u2865
  4927  02E1                     l2910:	
  4928  02E1  084E               	movf	___flmul@bexp,w
  4929  02E2  074D               	addwf	___flmul@aexp,w
  4930  02E3  00C3               	movwf	??___flmul
  4931  02E4  01C4               	clrf	??___flmul+1
  4932  02E5  0DC4               	rlf	??___flmul+1,f
  4933  02E6  0843               	movf	??___flmul,w
  4934  02E7  3E82               	addlw	130
  4935  02E8  00D3               	movwf	___flmul@temp
  4936  02E9  0844               	movf	??___flmul+1,w
  4937  02EA  1803               	skipnc
  4938  02EB  3E01               	addlw	1
  4939  02EC  3EFF               	addlw	255
  4940  02ED  00D4               	movwf	___flmul@temp+1
  4941  02EE  2B0C               	goto	l2922
  4942  02EF                     l2912:	
  4943  02EF  3001               	movlw	1
  4944  02F0  00C3               	movwf	??___flmul
  4945  02F1                     u2875:	
  4946  02F1  1003               	clrc
  4947  02F2  0DCF               	rlf	___flmul@prod,f
  4948  02F3  0DD0               	rlf	___flmul@prod+1,f
  4949  02F4  0DD1               	rlf	___flmul@prod+2,f
  4950  02F5  0DD2               	rlf	___flmul@prod+3,f
  4951  02F6  0BC3               	decfsz	??___flmul,f
  4952  02F7  2AF1               	goto	u2875
  4953  02F8                     l2914:	
  4954  02F8  1FCC               	btfss	___flmul@grs+3,7
  4955  02F9  2AFB               	goto	u2881
  4956  02FA  2AFC               	goto	u2880
  4957  02FB                     u2881:	
  4958  02FB  2AFD               	goto	l2918
  4959  02FC                     u2880:	
  4960  02FC                     l2916:	
  4961  02FC  144F               	bsf	___flmul@prod,0
  4962  02FD                     l2918:	
  4963  02FD  3001               	movlw	1
  4964  02FE  00C3               	movwf	??___flmul
  4965  02FF                     u2895:	
  4966  02FF  1003               	clrc
  4967  0300  0DC9               	rlf	___flmul@grs,f
  4968  0301  0DCA               	rlf	___flmul@grs+1,f
  4969  0302  0DCB               	rlf	___flmul@grs+2,f
  4970  0303  0DCC               	rlf	___flmul@grs+3,f
  4971  0304  0BC3               	decfsz	??___flmul,f
  4972  0305  2AFF               	goto	u2895
  4973  0306                     l2920:	
  4974  0306  30FF               	movlw	255
  4975  0307  07D3               	addwf	___flmul@temp,f
  4976  0308  1803               	skipnc
  4977  0309  0AD4               	incf	___flmul@temp+1,f
  4978  030A  30FF               	movlw	255
  4979  030B  07D4               	addwf	___flmul@temp+1,f
  4980  030C                     l2922:	
  4981  030C  1FD1               	btfss	___flmul@prod+2,7
  4982  030D  2B0F               	goto	u2901
  4983  030E  2B10               	goto	u2900
  4984  030F                     u2901:	
  4985  030F  2AEF               	goto	l2912
  4986  0310                     u2900:	
  4987  0310                     l2924:	
  4988  0310  01CD               	clrf	___flmul@aexp
  4989  0311                     l2926:	
  4990  0311  1FCC               	btfss	___flmul@grs+3,7
  4991  0312  2B14               	goto	u2911
  4992  0313  2B15               	goto	u2910
  4993  0314                     u2911:	
  4994  0314  2B31               	goto	l2934
  4995  0315                     u2910:	
  4996  0315                     l2928:	
  4997  0315  30FF               	movlw	255
  4998  0316  0549               	andwf	___flmul@grs,w
  4999  0317  00C3               	movwf	??___flmul
  5000  0318  30FF               	movlw	255
  5001  0319  054A               	andwf	___flmul@grs+1,w
  5002  031A  00C4               	movwf	??___flmul+1
  5003  031B  30FF               	movlw	255
  5004  031C  054B               	andwf	___flmul@grs+2,w
  5005  031D  00C5               	movwf	??___flmul+2
  5006  031E  307F               	movlw	127
  5007  031F  054C               	andwf	___flmul@grs+3,w
  5008  0320  00C6               	movwf	??___flmul+3
  5009  0321  0846               	movf	??___flmul+3,w
  5010  0322  0445               	iorwf	??___flmul+2,w
  5011  0323  0444               	iorwf	??___flmul+1,w
  5012  0324  0443               	iorwf	??___flmul,w
  5013  0325  1903               	skipnz
  5014  0326  2B28               	goto	u2921
  5015  0327  2B29               	goto	u2920
  5016  0328                     u2921:	
  5017  0328  2B2C               	goto	l895
  5018  0329                     u2920:	
  5019  0329                     l2930:	
  5020  0329  01CD               	clrf	___flmul@aexp
  5021  032A  0ACD               	incf	___flmul@aexp,f
  5022  032B  2B31               	goto	l2934
  5023  032C                     l895:	
  5024  032C  1C4F               	btfss	___flmul@prod,0
  5025  032D  2B2F               	goto	u2931
  5026  032E  2B30               	goto	u2930
  5027  032F                     u2931:	
  5028  032F  2B31               	goto	l2934
  5029  0330                     u2930:	
  5030  0330  2B29               	goto	l2930
  5031  0331                     l2934:	
  5032  0331  084D               	movf	___flmul@aexp,w
  5033  0332  1903               	btfsc	3,2
  5034  0333  2B35               	goto	u2941
  5035  0334  2B36               	goto	u2940
  5036  0335                     u2941:	
  5037  0335  2B67               	goto	l2944
  5038  0336                     u2940:	
  5039  0336                     l2936:	
  5040  0336  3001               	movlw	1
  5041  0337  07CF               	addwf	___flmul@prod,f
  5042  0338  3000               	movlw	0
  5043  0339  1803               	skipnc
  5044  033A  3001               	movlw	1
  5045  033B  07D0               	addwf	___flmul@prod+1,f
  5046  033C  3000               	movlw	0
  5047  033D  1803               	skipnc
  5048  033E  3001               	movlw	1
  5049  033F  07D1               	addwf	___flmul@prod+2,f
  5050  0340  3000               	movlw	0
  5051  0341  1803               	skipnc
  5052  0342  3001               	movlw	1
  5053  0343  07D2               	addwf	___flmul@prod+3,f
  5054  0344                     l2938:	
  5055  0344  1C52               	btfss	___flmul@prod+3,0
  5056  0345  2B47               	goto	u2951
  5057  0346  2B48               	goto	u2950
  5058  0347                     u2951:	
  5059  0347  2B67               	goto	l2944
  5060  0348                     u2950:	
  5061  0348                     l2940:	
  5062  0348  084F               	movf	___flmul@prod,w
  5063  0349  00C3               	movwf	??___flmul
  5064  034A  0850               	movf	___flmul@prod+1,w
  5065  034B  00C4               	movwf	??___flmul+1
  5066  034C  0851               	movf	___flmul@prod+2,w
  5067  034D  00C5               	movwf	??___flmul+2
  5068  034E  0852               	movf	___flmul@prod+3,w
  5069  034F  00C6               	movwf	??___flmul+3
  5070  0350  3001               	movlw	1
  5071  0351  00C7               	movwf	??___flmul+4
  5072  0352                     u2965:	
  5073  0352  0D46               	rlf	??___flmul+3,w
  5074  0353  0CC6               	rrf	??___flmul+3,f
  5075  0354  0CC5               	rrf	??___flmul+2,f
  5076  0355  0CC4               	rrf	??___flmul+1,f
  5077  0356  0CC3               	rrf	??___flmul,f
  5078  0357                     u2960:	
  5079  0357  0BC7               	decfsz	??___flmul+4,f
  5080  0358  2B52               	goto	u2965
  5081  0359  0846               	movf	??___flmul+3,w
  5082  035A  00D2               	movwf	___flmul@prod+3
  5083  035B  0845               	movf	??___flmul+2,w
  5084  035C  00D1               	movwf	___flmul@prod+2
  5085  035D  0844               	movf	??___flmul+1,w
  5086  035E  00D0               	movwf	___flmul@prod+1
  5087  035F  0843               	movf	??___flmul,w
  5088  0360  00CF               	movwf	___flmul@prod
  5089  0361                     l2942:	
  5090  0361  3001               	movlw	1
  5091  0362  07D3               	addwf	___flmul@temp,f
  5092  0363  1803               	skipnc
  5093  0364  0AD4               	incf	___flmul@temp+1,f
  5094  0365  3000               	movlw	0
  5095  0366  07D4               	addwf	___flmul@temp+1,f
  5096  0367                     l2944:	
  5097  0367  0854               	movf	___flmul@temp+1,w
  5098  0368  3A80               	xorlw	128
  5099  0369  00FF               	movwf	btemp+1
  5100  036A  3080               	movlw	128
  5101  036B  027F               	subwf	btemp+1,w
  5102  036C  1D03               	skipz
  5103  036D  2B70               	goto	u2975
  5104  036E  30FF               	movlw	255
  5105  036F  0253               	subwf	___flmul@temp,w
  5106  0370                     u2975:	
  5107  0370  1C03               	skipc
  5108  0371  2B73               	goto	u2971
  5109  0372  2B74               	goto	u2970
  5110  0373                     u2971:	
  5111  0373  2B7F               	goto	l2948
  5112  0374                     u2970:	
  5113  0374                     l2946:	
  5114  0374  307F               	movlw	127
  5115  0375  1283               	bcf	3,5	;RP0=0, select bank0
  5116  0376  1303               	bcf	3,6	;RP1=0, select bank0
  5117  0377  00D2               	movwf	___flmul@prod+3
  5118  0378  3080               	movlw	128
  5119  0379  00D1               	movwf	___flmul@prod+2
  5120  037A  3000               	movlw	0
  5121  037B  00D0               	movwf	___flmul@prod+1
  5122  037C  3000               	movlw	0
  5123  037D  00CF               	movwf	___flmul@prod
  5124  037E  2BB4               	goto	l901
  5125  037F                     l2948:	
  5126  037F  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0380  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0381  0854               	movf	___flmul@temp+1,w
  5129  0382  3A80               	xorlw	128
  5130  0383  00FF               	movwf	btemp+1
  5131  0384  3080               	movlw	128
  5132  0385  027F               	subwf	btemp+1,w
  5133  0386  1D03               	skipz
  5134  0387  2B8A               	goto	u2985
  5135  0388  3001               	movlw	1
  5136  0389  0253               	subwf	___flmul@temp,w
  5137  038A                     u2985:	
  5138  038A  1803               	skipnc
  5139  038B  2B8D               	goto	u2981
  5140  038C  2B8E               	goto	u2980
  5141  038D                     u2981:	
  5142  038D  2B9A               	goto	l2954
  5143  038E                     u2980:	
  5144  038E                     l2950:	
  5145  038E  3000               	movlw	0
  5146  038F  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0390  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0391  00D2               	movwf	___flmul@prod+3
  5149  0392  3000               	movlw	0
  5150  0393  00D1               	movwf	___flmul@prod+2
  5151  0394  3000               	movlw	0
  5152  0395  00D0               	movwf	___flmul@prod+1
  5153  0396  3000               	movlw	0
  5154  0397  00CF               	movwf	___flmul@prod
  5155  0398                     l2952:	
  5156  0398  01C8               	clrf	___flmul@sign
  5157  0399  2BB4               	goto	l901
  5158  039A                     l2954:	
  5159  039A  1283               	bcf	3,5	;RP0=0, select bank0
  5160  039B  1303               	bcf	3,6	;RP1=0, select bank0
  5161  039C  0853               	movf	___flmul@temp,w
  5162  039D  00C3               	movwf	??___flmul
  5163  039E  0843               	movf	??___flmul,w
  5164  039F  00CE               	movwf	___flmul@bexp
  5165  03A0  30FF               	movlw	255
  5166  03A1  05CF               	andwf	___flmul@prod,f
  5167  03A2  30FF               	movlw	255
  5168  03A3  05D0               	andwf	___flmul@prod+1,f
  5169  03A4  307F               	movlw	127
  5170  03A5  05D1               	andwf	___flmul@prod+2,f
  5171  03A6  3000               	movlw	0
  5172  03A7  05D2               	andwf	___flmul@prod+3,f
  5173  03A8                     l2956:	
  5174  03A8  1C4E               	btfss	___flmul@bexp,0
  5175  03A9  2BAB               	goto	u2991
  5176  03AA  2BAC               	goto	u2990
  5177  03AB                     u2991:	
  5178  03AB  2BAD               	goto	l2960
  5179  03AC                     u2990:	
  5180  03AC                     l2958:	
  5181  03AC  17D1               	bsf	___flmul@prod+2,7
  5182  03AD                     l2960:	
  5183  03AD  084E               	movf	___flmul@bexp,w
  5184  03AE  00C3               	movwf	??___flmul
  5185  03AF  1003               	clrc
  5186  03B0  0C43               	rrf	??___flmul,w
  5187  03B1  00C4               	movwf	??___flmul+1
  5188  03B2  0844               	movf	??___flmul+1,w
  5189  03B3  00D2               	movwf	___flmul@prod+3
  5190  03B4                     l901:	
  5191  03B4  0848               	movf	___flmul@sign,w
  5192  03B5  00C3               	movwf	??___flmul
  5193  03B6  0843               	movf	??___flmul,w
  5194  03B7  04D2               	iorwf	___flmul@prod+3,f
  5195  03B8                     l2962:	
  5196  03B8  0852               	movf	___flmul@prod+3,w
  5197  03B9  00BE               	movwf	?___flmul+3
  5198  03BA  0851               	movf	___flmul@prod+2,w
  5199  03BB  00BD               	movwf	?___flmul+2
  5200  03BC  0850               	movf	___flmul@prod+1,w
  5201  03BD  00BC               	movwf	?___flmul+1
  5202  03BE  084F               	movf	___flmul@prod,w
  5203  03BF  00BB               	movwf	?___flmul
  5204  03C0                     l889:	
  5205  03C0  0008               	return
  5206  03C1                     __end_of___flmul:	
  5207                           
  5208                           	psect	text21
  5209  088E                     __ptext21:	
  5210 ;; *************** function __Umul8_16 *****************
  5211 ;; Defined at:
  5212 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  multiplier      1    wreg     unsigned char 
  5215 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  multiplier      1   16[BANK0 ] unsigned char 
  5218 ;;  word_mpld       2   14[BANK0 ] unsigned int 
  5219 ;;  product         2   12[BANK0 ] unsigned int 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2    8[BANK0 ] unsigned int 
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5229 ;;      Params:         0       2       0       0       0
  5230 ;;      Locals:         0       5       0       0       0
  5231 ;;      Temps:          0       2       0       0       0
  5232 ;;      Totals:         0       9       0       0       0
  5233 ;;Total ram usage:        9 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    3
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		___flmul
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function __Umul8_16
  5245  088E                     __Umul8_16:	
  5246                           
  5247                           ;incstack = 0
  5248                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5249                           ;__Umul8_16@multiplier stored from wreg
  5250  088E  1283               	bcf	3,5	;RP0=0, select bank0
  5251  088F  1303               	bcf	3,6	;RP1=0, select bank0
  5252  0890  00B0               	movwf	__Umul8_16@multiplier
  5253  0891                     l2302:	
  5254  0891  01AC               	clrf	__Umul8_16@product
  5255  0892  01AD               	clrf	__Umul8_16@product+1
  5256  0893                     l2304:	
  5257  0893  0828               	movf	__Umul8_16@multiplicand,w
  5258  0894  00AA               	movwf	??__Umul8_16
  5259  0895  01AB               	clrf	??__Umul8_16+1
  5260  0896  082A               	movf	??__Umul8_16,w
  5261  0897  00AE               	movwf	__Umul8_16@word_mpld
  5262  0898  082B               	movf	??__Umul8_16+1,w
  5263  0899  00AF               	movwf	__Umul8_16@word_mpld+1
  5264  089A                     l2306:	
  5265  089A  1C30               	btfss	__Umul8_16@multiplier,0
  5266  089B  289D               	goto	u1831
  5267  089C  289E               	goto	u1830
  5268  089D                     u1831:	
  5269  089D  28A4               	goto	l946
  5270  089E                     u1830:	
  5271  089E                     l2308:	
  5272  089E  082E               	movf	__Umul8_16@word_mpld,w
  5273  089F  07AC               	addwf	__Umul8_16@product,f
  5274  08A0  1803               	skipnc
  5275  08A1  0AAD               	incf	__Umul8_16@product+1,f
  5276  08A2  082F               	movf	__Umul8_16@word_mpld+1,w
  5277  08A3  07AD               	addwf	__Umul8_16@product+1,f
  5278  08A4                     l946:	
  5279  08A4  3001               	movlw	1
  5280  08A5                     u1845:	
  5281  08A5  1003               	clrc
  5282  08A6  0DAE               	rlf	__Umul8_16@word_mpld,f
  5283  08A7  0DAF               	rlf	__Umul8_16@word_mpld+1,f
  5284  08A8  3EFF               	addlw	-1
  5285  08A9  1D03               	skipz
  5286  08AA  28A5               	goto	u1845
  5287  08AB  1003               	clrc
  5288  08AC  0CB0               	rrf	__Umul8_16@multiplier,f
  5289  08AD                     l2310:	
  5290  08AD  0830               	movf	__Umul8_16@multiplier,w
  5291  08AE  1D03               	btfss	3,2
  5292  08AF  28B1               	goto	u1851
  5293  08B0  28B2               	goto	u1850
  5294  08B1                     u1851:	
  5295  08B1  289A               	goto	l2306
  5296  08B2                     u1850:	
  5297  08B2                     l2312:	
  5298  08B2  082D               	movf	__Umul8_16@product+1,w
  5299  08B3  00A9               	movwf	?__Umul8_16+1
  5300  08B4  082C               	movf	__Umul8_16@product,w
  5301  08B5  00A8               	movwf	?__Umul8_16
  5302  08B6                     l948:	
  5303  08B6  0008               	return
  5304  08B7                     __end_of__Umul8_16:	
  5305                           
  5306                           	psect	text22
  5307  03C1                     __ptext22:	
  5308 ;; *************** function ___fldiv *****************
  5309 ;; Defined at:
  5310 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  a               4   27[BANK0 ] unsigned int 
  5313 ;;  b               4   31[BANK0 ] unsigned int 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  grs             4   47[BANK0 ] unsigned long 
  5316 ;;  rem             4   40[BANK0 ] unsigned long 
  5317 ;;  new_exp         2   45[BANK0 ] int 
  5318 ;;  aexp            1   52[BANK0 ] unsigned char 
  5319 ;;  bexp            1   51[BANK0 ] unsigned char 
  5320 ;;  sign            1   44[BANK0 ] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  4   27[BANK0 ] unsigned char 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0, btemp+1
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5330 ;;      Params:         0       8       0       0       0
  5331 ;;      Locals:         0      13       0       0       0
  5332 ;;      Temps:          0       5       0       0       0
  5333 ;;      Totals:         0      26       0       0       0
  5334 ;;Total ram usage:       26 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    3
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_temp_sensor_read
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           
  5345                           ;psect for function ___fldiv
  5346  03C1                     ___fldiv:	
  5347  03C1                     l2684:	
  5348                           ;incstack = 0
  5349                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5350                           
  5351  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  5352  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  5353  03C3  0842               	movf	___fldiv@b+3,w
  5354  03C4  3980               	andlw	128
  5355  03C5  00C3               	movwf	??___fldiv
  5356  03C6  0843               	movf	??___fldiv,w
  5357  03C7  00CC               	movwf	___fldiv@sign
  5358  03C8                     l2686:	
  5359  03C8  0842               	movf	___fldiv@b+3,w
  5360  03C9  00C3               	movwf	??___fldiv
  5361  03CA  0743               	addwf	??___fldiv,w
  5362  03CB  00C4               	movwf	??___fldiv+1
  5363  03CC  0844               	movf	??___fldiv+1,w
  5364  03CD  00D3               	movwf	___fldiv@bexp
  5365  03CE                     l2688:	
  5366  03CE  1FC1               	btfss	___fldiv@b+2,7
  5367  03CF  2BD1               	goto	u2341
  5368  03D0  2BD2               	goto	u2340
  5369  03D1                     u2341:	
  5370  03D1  2BD3               	goto	l2692
  5371  03D2                     u2340:	
  5372  03D2                     l2690:	
  5373  03D2  1453               	bsf	___fldiv@bexp,0
  5374  03D3                     l2692:	
  5375  03D3  0853               	movf	___fldiv@bexp,w
  5376  03D4  1903               	btfsc	3,2
  5377  03D5  2BD7               	goto	u2351
  5378  03D6  2BD8               	goto	u2350
  5379  03D7                     u2351:	
  5380  03D7  2BE8               	goto	l2702
  5381  03D8                     u2350:	
  5382  03D8                     l2694:	
  5383  03D8  0A53               	incf	___fldiv@bexp,w
  5384  03D9  1D03               	btfss	3,2
  5385  03DA  2BDC               	goto	u2361
  5386  03DB  2BDD               	goto	u2360
  5387  03DC                     u2361:	
  5388  03DC  2BE5               	goto	l2698
  5389  03DD                     u2360:	
  5390  03DD                     l2696:	
  5391  03DD  3000               	movlw	0
  5392  03DE  00C2               	movwf	___fldiv@b+3
  5393  03DF  3000               	movlw	0
  5394  03E0  00C1               	movwf	___fldiv@b+2
  5395  03E1  3000               	movlw	0
  5396  03E2  00C0               	movwf	___fldiv@b+1
  5397  03E3  3000               	movlw	0
  5398  03E4  00BF               	movwf	___fldiv@b
  5399  03E5                     l2698:	
  5400  03E5  17C1               	bsf	___fldiv@b+2,7
  5401  03E6                     l2700:	
  5402  03E6  01C2               	clrf	___fldiv@b+3
  5403  03E7  2BF0               	goto	l2704
  5404  03E8                     l2702:	
  5405  03E8  3000               	movlw	0
  5406  03E9  00C2               	movwf	___fldiv@b+3
  5407  03EA  3000               	movlw	0
  5408  03EB  00C1               	movwf	___fldiv@b+2
  5409  03EC  3000               	movlw	0
  5410  03ED  00C0               	movwf	___fldiv@b+1
  5411  03EE  3000               	movlw	0
  5412  03EF  00BF               	movwf	___fldiv@b
  5413  03F0                     l2704:	
  5414  03F0  083E               	movf	___fldiv@a+3,w
  5415  03F1  3980               	andlw	128
  5416  03F2  00C3               	movwf	??___fldiv
  5417  03F3  0843               	movf	??___fldiv,w
  5418  03F4  06CC               	xorwf	___fldiv@sign,f
  5419  03F5                     l2706:	
  5420  03F5  083E               	movf	___fldiv@a+3,w
  5421  03F6  00C3               	movwf	??___fldiv
  5422  03F7  0743               	addwf	??___fldiv,w
  5423  03F8  00C4               	movwf	??___fldiv+1
  5424  03F9  0844               	movf	??___fldiv+1,w
  5425  03FA  00D4               	movwf	___fldiv@aexp
  5426  03FB                     l2708:	
  5427  03FB  1FBD               	btfss	___fldiv@a+2,7
  5428  03FC  2BFE               	goto	u2371
  5429  03FD  2BFF               	goto	u2370
  5430  03FE                     u2371:	
  5431  03FE  2C00               	goto	l2712
  5432  03FF                     u2370:	
  5433  03FF                     l2710:	
  5434  03FF  1454               	bsf	___fldiv@aexp,0
  5435  0400                     l2712:	
  5436  0400  0854               	movf	___fldiv@aexp,w
  5437  0401  1903               	btfsc	3,2
  5438  0402  2C04               	goto	u2381
  5439  0403  2C05               	goto	u2380
  5440  0404                     u2381:	
  5441  0404  2C15               	goto	l2722
  5442  0405                     u2380:	
  5443  0405                     l2714:	
  5444  0405  0A54               	incf	___fldiv@aexp,w
  5445  0406  1D03               	btfss	3,2
  5446  0407  2C09               	goto	u2391
  5447  0408  2C0A               	goto	u2390
  5448  0409                     u2391:	
  5449  0409  2C12               	goto	l2718
  5450  040A                     u2390:	
  5451  040A                     l2716:	
  5452  040A  3000               	movlw	0
  5453  040B  00BE               	movwf	___fldiv@a+3
  5454  040C  3000               	movlw	0
  5455  040D  00BD               	movwf	___fldiv@a+2
  5456  040E  3000               	movlw	0
  5457  040F  00BC               	movwf	___fldiv@a+1
  5458  0410  3000               	movlw	0
  5459  0411  00BB               	movwf	___fldiv@a
  5460  0412                     l2718:	
  5461  0412  17BD               	bsf	___fldiv@a+2,7
  5462  0413                     l2720:	
  5463  0413  01BE               	clrf	___fldiv@a+3
  5464  0414  2C1D               	goto	l849
  5465  0415                     l2722:	
  5466  0415  3000               	movlw	0
  5467  0416  00BE               	movwf	___fldiv@a+3
  5468  0417  3000               	movlw	0
  5469  0418  00BD               	movwf	___fldiv@a+2
  5470  0419  3000               	movlw	0
  5471  041A  00BC               	movwf	___fldiv@a+1
  5472  041B  3000               	movlw	0
  5473  041C  00BB               	movwf	___fldiv@a
  5474  041D                     l849:	
  5475  041D  083E               	movf	___fldiv@a+3,w
  5476  041E  043D               	iorwf	___fldiv@a+2,w
  5477  041F  043C               	iorwf	___fldiv@a+1,w
  5478  0420  043B               	iorwf	___fldiv@a,w
  5479  0421  1D03               	skipz
  5480  0422  2C24               	goto	u2401
  5481  0423  2C25               	goto	u2400
  5482  0424                     u2401:	
  5483  0424  2C3E               	goto	l2732
  5484  0425                     u2400:	
  5485  0425                     l2724:	
  5486  0425  3000               	movlw	0
  5487  0426  00C2               	movwf	___fldiv@b+3
  5488  0427  3000               	movlw	0
  5489  0428  00C1               	movwf	___fldiv@b+2
  5490  0429  3000               	movlw	0
  5491  042A  00C0               	movwf	___fldiv@b+1
  5492  042B  3000               	movlw	0
  5493  042C  00BF               	movwf	___fldiv@b
  5494  042D  3080               	movlw	128
  5495  042E  04C1               	iorwf	___fldiv@b+2,f
  5496  042F  307F               	movlw	127
  5497  0430  04C2               	iorwf	___fldiv@b+3,f
  5498  0431                     l2726:	
  5499  0431  084C               	movf	___fldiv@sign,w
  5500  0432  00C3               	movwf	??___fldiv
  5501  0433  0843               	movf	??___fldiv,w
  5502  0434  04C2               	iorwf	___fldiv@b+3,f
  5503  0435                     l2728:	
  5504  0435  0842               	movf	___fldiv@b+3,w
  5505  0436  00BE               	movwf	?___fldiv+3
  5506  0437  0841               	movf	___fldiv@b+2,w
  5507  0438  00BD               	movwf	?___fldiv+2
  5508  0439  0840               	movf	___fldiv@b+1,w
  5509  043A  00BC               	movwf	?___fldiv+1
  5510  043B  083F               	movf	___fldiv@b,w
  5511  043C  00BB               	movwf	?___fldiv
  5512  043D  2D9D               	goto	l851
  5513  043E                     l2732:	
  5514  043E  0853               	movf	___fldiv@bexp,w
  5515  043F  1D03               	btfss	3,2
  5516  0440  2C42               	goto	u2411
  5517  0441  2C43               	goto	u2410
  5518  0442                     u2411:	
  5519  0442  2C4C               	goto	l2738
  5520  0443                     u2410:	
  5521  0443                     l2734:	
  5522  0443  3000               	movlw	0
  5523  0444  00BE               	movwf	?___fldiv+3
  5524  0445  3000               	movlw	0
  5525  0446  00BD               	movwf	?___fldiv+2
  5526  0447  3000               	movlw	0
  5527  0448  00BC               	movwf	?___fldiv+1
  5528  0449  3000               	movlw	0
  5529  044A  00BB               	movwf	?___fldiv
  5530  044B  2D9D               	goto	l851
  5531  044C                     l2738:	
  5532  044C  0853               	movf	___fldiv@bexp,w
  5533  044D  00C3               	movwf	??___fldiv
  5534  044E  01C4               	clrf	??___fldiv+1
  5535  044F  0844               	movf	??___fldiv+1,w
  5536  0450  00C6               	movwf	??___fldiv+3
  5537  0451  0854               	movf	___fldiv@aexp,w
  5538  0452  0243               	subwf	??___fldiv,w
  5539  0453  00C5               	movwf	??___fldiv+2
  5540  0454  1C03               	skipc
  5541  0455  03C6               	decf	??___fldiv+3,f
  5542  0456  0845               	movf	??___fldiv+2,w
  5543  0457  3E7F               	addlw	127
  5544  0458  00CD               	movwf	___fldiv@new_exp
  5545  0459  0846               	movf	??___fldiv+3,w
  5546  045A  1803               	skipnc
  5547  045B  3E01               	addlw	1
  5548  045C  3E00               	addlw	0
  5549  045D  00CE               	movwf	___fldiv@new_exp+1
  5550  045E                     l2740:	
  5551  045E  0842               	movf	___fldiv@b+3,w
  5552  045F  00CB               	movwf	___fldiv@rem+3
  5553  0460  0841               	movf	___fldiv@b+2,w
  5554  0461  00CA               	movwf	___fldiv@rem+2
  5555  0462  0840               	movf	___fldiv@b+1,w
  5556  0463  00C9               	movwf	___fldiv@rem+1
  5557  0464  083F               	movf	___fldiv@b,w
  5558  0465  00C8               	movwf	___fldiv@rem
  5559  0466                     l2742:	
  5560  0466  3000               	movlw	0
  5561  0467  00C2               	movwf	___fldiv@b+3
  5562  0468  3000               	movlw	0
  5563  0469  00C1               	movwf	___fldiv@b+2
  5564  046A  3000               	movlw	0
  5565  046B  00C0               	movwf	___fldiv@b+1
  5566  046C  3000               	movlw	0
  5567  046D  00BF               	movwf	___fldiv@b
  5568  046E                     l2744:	
  5569  046E  3000               	movlw	0
  5570  046F  00D2               	movwf	___fldiv@grs+3
  5571  0470  3000               	movlw	0
  5572  0471  00D1               	movwf	___fldiv@grs+2
  5573  0472  3000               	movlw	0
  5574  0473  00D0               	movwf	___fldiv@grs+1
  5575  0474  3000               	movlw	0
  5576  0475  00CF               	movwf	___fldiv@grs
  5577  0476                     l2746:	
  5578  0476  01D4               	clrf	___fldiv@aexp
  5579  0477  2CC2               	goto	l2766
  5580  0478                     l2748:	
  5581  0478  0854               	movf	___fldiv@aexp,w
  5582  0479  1903               	btfsc	3,2
  5583  047A  2C7C               	goto	u2421
  5584  047B  2C7D               	goto	u2420
  5585  047C                     u2421:	
  5586  047C  2C9D               	goto	l2758
  5587  047D                     u2420:	
  5588  047D                     l2750:	
  5589  047D  3001               	movlw	1
  5590  047E  00C3               	movwf	??___fldiv
  5591  047F                     u2435:	
  5592  047F  1003               	clrc
  5593  0480  0DC8               	rlf	___fldiv@rem,f
  5594  0481  0DC9               	rlf	___fldiv@rem+1,f
  5595  0482  0DCA               	rlf	___fldiv@rem+2,f
  5596  0483  0DCB               	rlf	___fldiv@rem+3,f
  5597  0484  0BC3               	decfsz	??___fldiv,f
  5598  0485  2C7F               	goto	u2435
  5599  0486  3001               	movlw	1
  5600  0487  00C3               	movwf	??___fldiv
  5601  0488                     u2445:	
  5602  0488  1003               	clrc
  5603  0489  0DBF               	rlf	___fldiv@b,f
  5604  048A  0DC0               	rlf	___fldiv@b+1,f
  5605  048B  0DC1               	rlf	___fldiv@b+2,f
  5606  048C  0DC2               	rlf	___fldiv@b+3,f
  5607  048D  0BC3               	decfsz	??___fldiv,f
  5608  048E  2C88               	goto	u2445
  5609  048F                     l2752:	
  5610  048F  1FD2               	btfss	___fldiv@grs+3,7
  5611  0490  2C92               	goto	u2451
  5612  0491  2C93               	goto	u2450
  5613  0492                     u2451:	
  5614  0492  2C94               	goto	l2756
  5615  0493                     u2450:	
  5616  0493                     l2754:	
  5617  0493  143F               	bsf	___fldiv@b,0
  5618  0494                     l2756:	
  5619  0494  3001               	movlw	1
  5620  0495  00C3               	movwf	??___fldiv
  5621  0496                     u2465:	
  5622  0496  1003               	clrc
  5623  0497  0DCF               	rlf	___fldiv@grs,f
  5624  0498  0DD0               	rlf	___fldiv@grs+1,f
  5625  0499  0DD1               	rlf	___fldiv@grs+2,f
  5626  049A  0DD2               	rlf	___fldiv@grs+3,f
  5627  049B  0BC3               	decfsz	??___fldiv,f
  5628  049C  2C96               	goto	u2465
  5629  049D                     l2758:	
  5630  049D  083E               	movf	___fldiv@a+3,w
  5631  049E  024B               	subwf	___fldiv@rem+3,w
  5632  049F  1D03               	skipz
  5633  04A0  2CAB               	goto	u2475
  5634  04A1  083D               	movf	___fldiv@a+2,w
  5635  04A2  024A               	subwf	___fldiv@rem+2,w
  5636  04A3  1D03               	skipz
  5637  04A4  2CAB               	goto	u2475
  5638  04A5  083C               	movf	___fldiv@a+1,w
  5639  04A6  0249               	subwf	___fldiv@rem+1,w
  5640  04A7  1D03               	skipz
  5641  04A8  2CAB               	goto	u2475
  5642  04A9  083B               	movf	___fldiv@a,w
  5643  04AA  0248               	subwf	___fldiv@rem,w
  5644  04AB                     u2475:	
  5645  04AB  1C03               	skipc
  5646  04AC  2CAE               	goto	u2471
  5647  04AD  2CAF               	goto	u2470
  5648  04AE                     u2471:	
  5649  04AE  2CBE               	goto	l2764
  5650  04AF                     u2470:	
  5651  04AF                     l2760:	
  5652  04AF  1752               	bsf	___fldiv@grs+3,6
  5653  04B0                     l2762:	
  5654  04B0  083B               	movf	___fldiv@a,w
  5655  04B1  02C8               	subwf	___fldiv@rem,f
  5656  04B2  083C               	movf	___fldiv@a+1,w
  5657  04B3  1C03               	skipc
  5658  04B4  0F3C               	incfsz	___fldiv@a+1,w
  5659  04B5  02C9               	subwf	___fldiv@rem+1,f
  5660  04B6  083D               	movf	___fldiv@a+2,w
  5661  04B7  1C03               	skipc
  5662  04B8  0F3D               	incfsz	___fldiv@a+2,w
  5663  04B9  02CA               	subwf	___fldiv@rem+2,f
  5664  04BA  083E               	movf	___fldiv@a+3,w
  5665  04BB  1C03               	skipc
  5666  04BC  0F3E               	incfsz	___fldiv@a+3,w
  5667  04BD  02CB               	subwf	___fldiv@rem+3,f
  5668  04BE                     l2764:	
  5669  04BE  3001               	movlw	1
  5670  04BF  00C3               	movwf	??___fldiv
  5671  04C0  0843               	movf	??___fldiv,w
  5672  04C1  07D4               	addwf	___fldiv@aexp,f
  5673  04C2                     l2766:	
  5674  04C2  301A               	movlw	26
  5675  04C3  0254               	subwf	___fldiv@aexp,w
  5676  04C4  1C03               	skipc
  5677  04C5  2CC7               	goto	u2481
  5678  04C6  2CC8               	goto	u2480
  5679  04C7                     u2481:	
  5680  04C7  2C78               	goto	l2748
  5681  04C8                     u2480:	
  5682  04C8                     l2768:	
  5683  04C8  084B               	movf	___fldiv@rem+3,w
  5684  04C9  044A               	iorwf	___fldiv@rem+2,w
  5685  04CA  0449               	iorwf	___fldiv@rem+1,w
  5686  04CB  0448               	iorwf	___fldiv@rem,w
  5687  04CC  1903               	skipnz
  5688  04CD  2CCF               	goto	u2491
  5689  04CE  2CD0               	goto	u2490
  5690  04CF                     u2491:	
  5691  04CF  2CEF               	goto	l2782
  5692  04D0                     u2490:	
  5693  04D0                     l2770:	
  5694  04D0  144F               	bsf	___fldiv@grs,0
  5695  04D1  2CEF               	goto	l2782
  5696  04D2                     l2772:	
  5697  04D2  3001               	movlw	1
  5698  04D3  00C3               	movwf	??___fldiv
  5699  04D4                     u2505:	
  5700  04D4  1003               	clrc
  5701  04D5  0DBF               	rlf	___fldiv@b,f
  5702  04D6  0DC0               	rlf	___fldiv@b+1,f
  5703  04D7  0DC1               	rlf	___fldiv@b+2,f
  5704  04D8  0DC2               	rlf	___fldiv@b+3,f
  5705  04D9  0BC3               	decfsz	??___fldiv,f
  5706  04DA  2CD4               	goto	u2505
  5707  04DB                     l2774:	
  5708  04DB  1FD2               	btfss	___fldiv@grs+3,7
  5709  04DC  2CDE               	goto	u2511
  5710  04DD  2CDF               	goto	u2510
  5711  04DE                     u2511:	
  5712  04DE  2CE0               	goto	l2778
  5713  04DF                     u2510:	
  5714  04DF                     l2776:	
  5715  04DF  143F               	bsf	___fldiv@b,0
  5716  04E0                     l2778:	
  5717  04E0  3001               	movlw	1
  5718  04E1  00C3               	movwf	??___fldiv
  5719  04E2                     u2525:	
  5720  04E2  1003               	clrc
  5721  04E3  0DCF               	rlf	___fldiv@grs,f
  5722  04E4  0DD0               	rlf	___fldiv@grs+1,f
  5723  04E5  0DD1               	rlf	___fldiv@grs+2,f
  5724  04E6  0DD2               	rlf	___fldiv@grs+3,f
  5725  04E7  0BC3               	decfsz	??___fldiv,f
  5726  04E8  2CE2               	goto	u2525
  5727  04E9                     l2780:	
  5728  04E9  30FF               	movlw	255
  5729  04EA  07CD               	addwf	___fldiv@new_exp,f
  5730  04EB  1803               	skipnc
  5731  04EC  0ACE               	incf	___fldiv@new_exp+1,f
  5732  04ED  30FF               	movlw	255
  5733  04EE  07CE               	addwf	___fldiv@new_exp+1,f
  5734  04EF                     l2782:	
  5735  04EF  1FC1               	btfss	___fldiv@b+2,7
  5736  04F0  2CF2               	goto	u2531
  5737  04F1  2CF3               	goto	u2530
  5738  04F2                     u2531:	
  5739  04F2  2CD2               	goto	l2772
  5740  04F3                     u2530:	
  5741  04F3                     l2784:	
  5742  04F3  01D4               	clrf	___fldiv@aexp
  5743  04F4                     l2786:	
  5744  04F4  1FD2               	btfss	___fldiv@grs+3,7
  5745  04F5  2CF7               	goto	u2541
  5746  04F6  2CF8               	goto	u2540
  5747  04F7                     u2541:	
  5748  04F7  2D14               	goto	l2794
  5749  04F8                     u2540:	
  5750  04F8                     l2788:	
  5751  04F8  30FF               	movlw	255
  5752  04F9  054F               	andwf	___fldiv@grs,w
  5753  04FA  00C3               	movwf	??___fldiv
  5754  04FB  30FF               	movlw	255
  5755  04FC  0550               	andwf	___fldiv@grs+1,w
  5756  04FD  00C4               	movwf	??___fldiv+1
  5757  04FE  30FF               	movlw	255
  5758  04FF  0551               	andwf	___fldiv@grs+2,w
  5759  0500  00C5               	movwf	??___fldiv+2
  5760  0501  307F               	movlw	127
  5761  0502  0552               	andwf	___fldiv@grs+3,w
  5762  0503  00C6               	movwf	??___fldiv+3
  5763  0504  0846               	movf	??___fldiv+3,w
  5764  0505  0445               	iorwf	??___fldiv+2,w
  5765  0506  0444               	iorwf	??___fldiv+1,w
  5766  0507  0443               	iorwf	??___fldiv,w
  5767  0508  1903               	skipnz
  5768  0509  2D0B               	goto	u2551
  5769  050A  2D0C               	goto	u2550
  5770  050B                     u2551:	
  5771  050B  2D0F               	goto	l865
  5772  050C                     u2550:	
  5773  050C                     l2790:	
  5774  050C  01D4               	clrf	___fldiv@aexp
  5775  050D  0AD4               	incf	___fldiv@aexp,f
  5776  050E  2D14               	goto	l2794
  5777  050F                     l865:	
  5778  050F  1C3F               	btfss	___fldiv@b,0
  5779  0510  2D12               	goto	u2561
  5780  0511  2D13               	goto	u2560
  5781  0512                     u2561:	
  5782  0512  2D14               	goto	l2794
  5783  0513                     u2560:	
  5784  0513  2D0C               	goto	l2790
  5785  0514                     l2794:	
  5786  0514  0854               	movf	___fldiv@aexp,w
  5787  0515  1903               	btfsc	3,2
  5788  0516  2D18               	goto	u2571
  5789  0517  2D19               	goto	u2570
  5790  0518                     u2571:	
  5791  0518  2D4A               	goto	l2804
  5792  0519                     u2570:	
  5793  0519                     l2796:	
  5794  0519  3001               	movlw	1
  5795  051A  07BF               	addwf	___fldiv@b,f
  5796  051B  3000               	movlw	0
  5797  051C  1803               	skipnc
  5798  051D  3001               	movlw	1
  5799  051E  07C0               	addwf	___fldiv@b+1,f
  5800  051F  3000               	movlw	0
  5801  0520  1803               	skipnc
  5802  0521  3001               	movlw	1
  5803  0522  07C1               	addwf	___fldiv@b+2,f
  5804  0523  3000               	movlw	0
  5805  0524  1803               	skipnc
  5806  0525  3001               	movlw	1
  5807  0526  07C2               	addwf	___fldiv@b+3,f
  5808  0527                     l2798:	
  5809  0527  1C42               	btfss	___fldiv@b+3,0
  5810  0528  2D2A               	goto	u2581
  5811  0529  2D2B               	goto	u2580
  5812  052A                     u2581:	
  5813  052A  2D4A               	goto	l2804
  5814  052B                     u2580:	
  5815  052B                     l2800:	
  5816  052B  083F               	movf	___fldiv@b,w
  5817  052C  00C3               	movwf	??___fldiv
  5818  052D  0840               	movf	___fldiv@b+1,w
  5819  052E  00C4               	movwf	??___fldiv+1
  5820  052F  0841               	movf	___fldiv@b+2,w
  5821  0530  00C5               	movwf	??___fldiv+2
  5822  0531  0842               	movf	___fldiv@b+3,w
  5823  0532  00C6               	movwf	??___fldiv+3
  5824  0533  3001               	movlw	1
  5825  0534  00C7               	movwf	??___fldiv+4
  5826  0535                     u2595:	
  5827  0535  0D46               	rlf	??___fldiv+3,w
  5828  0536  0CC6               	rrf	??___fldiv+3,f
  5829  0537  0CC5               	rrf	??___fldiv+2,f
  5830  0538  0CC4               	rrf	??___fldiv+1,f
  5831  0539  0CC3               	rrf	??___fldiv,f
  5832  053A                     u2590:	
  5833  053A  0BC7               	decfsz	??___fldiv+4,f
  5834  053B  2D35               	goto	u2595
  5835  053C  0846               	movf	??___fldiv+3,w
  5836  053D  00C2               	movwf	___fldiv@b+3
  5837  053E  0845               	movf	??___fldiv+2,w
  5838  053F  00C1               	movwf	___fldiv@b+2
  5839  0540  0844               	movf	??___fldiv+1,w
  5840  0541  00C0               	movwf	___fldiv@b+1
  5841  0542  0843               	movf	??___fldiv,w
  5842  0543  00BF               	movwf	___fldiv@b
  5843  0544                     l2802:	
  5844  0544  3001               	movlw	1
  5845  0545  07CD               	addwf	___fldiv@new_exp,f
  5846  0546  1803               	skipnc
  5847  0547  0ACE               	incf	___fldiv@new_exp+1,f
  5848  0548  3000               	movlw	0
  5849  0549  07CE               	addwf	___fldiv@new_exp+1,f
  5850  054A                     l2804:	
  5851  054A  084E               	movf	___fldiv@new_exp+1,w
  5852  054B  3A80               	xorlw	128
  5853  054C  00FF               	movwf	btemp+1
  5854  054D  3080               	movlw	128
  5855  054E  027F               	subwf	btemp+1,w
  5856  054F  1D03               	skipz
  5857  0550  2D53               	goto	u2605
  5858  0551  30FF               	movlw	255
  5859  0552  024D               	subwf	___fldiv@new_exp,w
  5860  0553                     u2605:	
  5861  0553  1C03               	skipc
  5862  0554  2D56               	goto	u2601
  5863  0555  2D57               	goto	u2600
  5864  0556                     u2601:	
  5865  0556  2D65               	goto	l2808
  5866  0557                     u2600:	
  5867  0557                     l2806:	
  5868  0557  30FF               	movlw	255
  5869  0558  1283               	bcf	3,5	;RP0=0, select bank0
  5870  0559  1303               	bcf	3,6	;RP1=0, select bank0
  5871  055A  00CD               	movwf	___fldiv@new_exp
  5872  055B  3000               	movlw	0
  5873  055C  00CE               	movwf	___fldiv@new_exp+1
  5874  055D  3000               	movlw	0
  5875  055E  00C2               	movwf	___fldiv@b+3
  5876  055F  3000               	movlw	0
  5877  0560  00C1               	movwf	___fldiv@b+2
  5878  0561  3000               	movlw	0
  5879  0562  00C0               	movwf	___fldiv@b+1
  5880  0563  3000               	movlw	0
  5881  0564  00BF               	movwf	___fldiv@b
  5882  0565                     l2808:	
  5883  0565  1283               	bcf	3,5	;RP0=0, select bank0
  5884  0566  1303               	bcf	3,6	;RP1=0, select bank0
  5885  0567  084E               	movf	___fldiv@new_exp+1,w
  5886  0568  3A80               	xorlw	128
  5887  0569  00FF               	movwf	btemp+1
  5888  056A  3080               	movlw	128
  5889  056B  027F               	subwf	btemp+1,w
  5890  056C  1D03               	skipz
  5891  056D  2D70               	goto	u2615
  5892  056E  3001               	movlw	1
  5893  056F  024D               	subwf	___fldiv@new_exp,w
  5894  0570                     u2615:	
  5895  0570  1803               	skipnc
  5896  0571  2D73               	goto	u2611
  5897  0572  2D74               	goto	u2610
  5898  0573                     u2611:	
  5899  0573  2D81               	goto	l871
  5900  0574                     u2610:	
  5901  0574                     l2810:	
  5902  0574  1283               	bcf	3,5	;RP0=0, select bank0
  5903  0575  1303               	bcf	3,6	;RP1=0, select bank0
  5904  0576  01CD               	clrf	___fldiv@new_exp
  5905  0577  01CE               	clrf	___fldiv@new_exp+1
  5906  0578                     l2812:	
  5907  0578  3000               	movlw	0
  5908  0579  00C2               	movwf	___fldiv@b+3
  5909  057A  3000               	movlw	0
  5910  057B  00C1               	movwf	___fldiv@b+2
  5911  057C  3000               	movlw	0
  5912  057D  00C0               	movwf	___fldiv@b+1
  5913  057E  3000               	movlw	0
  5914  057F  00BF               	movwf	___fldiv@b
  5915  0580                     l2814:	
  5916  0580  01CC               	clrf	___fldiv@sign
  5917  0581                     l871:	
  5918  0581  1283               	bcf	3,5	;RP0=0, select bank0
  5919  0582  1303               	bcf	3,6	;RP1=0, select bank0
  5920  0583  084D               	movf	___fldiv@new_exp,w
  5921  0584  00C3               	movwf	??___fldiv
  5922  0585  0843               	movf	??___fldiv,w
  5923  0586  00D3               	movwf	___fldiv@bexp
  5924  0587                     l2816:	
  5925  0587  1C53               	btfss	___fldiv@bexp,0
  5926  0588  2D8A               	goto	u2621
  5927  0589  2D8B               	goto	u2620
  5928  058A                     u2621:	
  5929  058A  2D8D               	goto	l2820
  5930  058B                     u2620:	
  5931  058B                     l2818:	
  5932  058B  17C1               	bsf	___fldiv@b+2,7
  5933  058C  2D91               	goto	l873
  5934  058D                     l2820:	
  5935  058D  307F               	movlw	127
  5936  058E  00C3               	movwf	??___fldiv
  5937  058F  0843               	movf	??___fldiv,w
  5938  0590  05C1               	andwf	___fldiv@b+2,f
  5939  0591                     l873:	
  5940  0591  0853               	movf	___fldiv@bexp,w
  5941  0592  00C3               	movwf	??___fldiv
  5942  0593  1003               	clrc
  5943  0594  0C43               	rrf	??___fldiv,w
  5944  0595  00C4               	movwf	??___fldiv+1
  5945  0596  0844               	movf	??___fldiv+1,w
  5946  0597  00C2               	movwf	___fldiv@b+3
  5947  0598  084C               	movf	___fldiv@sign,w
  5948  0599  00C3               	movwf	??___fldiv
  5949  059A  0843               	movf	??___fldiv,w
  5950  059B  04C2               	iorwf	___fldiv@b+3,f
  5951  059C  2C35               	goto	l2728
  5952  059D                     l851:	
  5953  059D  0008               	return
  5954  059E                     __end_of___fldiv:	
  5955                           
  5956                           	psect	text23
  5957  08B7                     __ptext23:	
  5958 ;; *************** function _ADC_Read *****************
  5959 ;; Defined at:
  5960 ;;		line 29 in file "adc_drive.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  channel         1    wreg     unsigned char 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  channel         1   12[BANK0 ] unsigned char 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  2    8[BANK0 ] unsigned int 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, status,0
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5974 ;;      Params:         0       2       0       0       0
  5975 ;;      Locals:         0       1       0       0       0
  5976 ;;      Temps:          0       2       0       0       0
  5977 ;;      Totals:         0       5       0       0       0
  5978 ;;Total ram usage:        5 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:    3
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_temp_sensor_read
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           
  5989                           ;psect for function _ADC_Read
  5990  08B7                     _ADC_Read:	
  5991                           
  5992                           ;incstack = 0
  5993                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5994                           ;ADC_Read@channel stored from wreg
  5995  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  5996  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  5997  08B9  00AC               	movwf	ADC_Read@channel
  5998  08BA                     l2316:	
  5999                           
  6000                           ;adc_drive.c: 30:     (ADCON0 &= ~(1 << 3));
  6001  08BA  30F7               	movlw	247
  6002  08BB  00AA               	movwf	??_ADC_Read
  6003  08BC  082A               	movf	??_ADC_Read,w
  6004  08BD  059F               	andwf	31,f	;volatile
  6005                           
  6006                           ;adc_drive.c: 31:     (ADCON0 &= ~(1 << 4));
  6007  08BE  30EF               	movlw	239
  6008  08BF  00AA               	movwf	??_ADC_Read
  6009  08C0  082A               	movf	??_ADC_Read,w
  6010  08C1  059F               	andwf	31,f	;volatile
  6011                           
  6012                           ;adc_drive.c: 32:     (ADCON0 &= ~(1 << 5));
  6013  08C2  30DF               	movlw	223
  6014  08C3  00AA               	movwf	??_ADC_Read
  6015  08C4  082A               	movf	??_ADC_Read,w
  6016  08C5  059F               	andwf	31,f	;volatile
  6017                           
  6018                           ;adc_drive.c: 33:     ADCON0 |= (channel << 3);
  6019  08C6  082C               	movf	ADC_Read@channel,w	;volatile
  6020  08C7  00AA               	movwf	??_ADC_Read
  6021  08C8  3002               	movlw	2
  6022  08C9                     u1865:	
  6023  08C9  1003               	clrc
  6024  08CA  0DAA               	rlf	??_ADC_Read,f
  6025  08CB  3EFF               	addlw	-1
  6026  08CC  1D03               	skipz
  6027  08CD  28C9               	goto	u1865
  6028  08CE  1003               	clrc
  6029  08CF  0D2A               	rlf	??_ADC_Read,w
  6030  08D0  00AB               	movwf	??_ADC_Read+1
  6031  08D1  082B               	movf	??_ADC_Read+1,w
  6032  08D2  049F               	iorwf	31,f	;volatile
  6033  08D3                     l2318:	
  6034                           
  6035                           ;adc_drive.c: 34:     (ADCON0 |= (1 << 2));
  6036  08D3  151F               	bsf	31,2	;volatile
  6037  08D4                     l60:	
  6038                           ;adc_drive.c: 35:     while (ADCON0 & (1 << 2)){}
  6039                           
  6040  08D4  191F               	btfsc	31,2	;volatile
  6041  08D5  28D7               	goto	u1871
  6042  08D6  28D8               	goto	u1870
  6043  08D7                     u1871:	
  6044  08D7  28D4               	goto	l60
  6045  08D8                     u1870:	
  6046  08D8                     l2320:	
  6047                           
  6048                           ;adc_drive.c: 36:     return ( ADRESL + (ADRESH* 256) ) ;
  6049  08D8  081E               	movf	30,w	;volatile
  6050  08D9  00A9               	movwf	?_ADC_Read+1
  6051  08DA  1683               	bsf	3,5	;RP0=1, select bank1
  6052  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  6053  08DC  081E               	movf	30,w	;volatile
  6054  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  6055  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  6056  08DF  00A8               	movwf	?_ADC_Read
  6057  08E0                     l63:	
  6058  08E0  0008               	return
  6059  08E1                     __end_of_ADC_Read:	
  6060                           
  6061                           	psect	text24
  6062  0E25                     __ptext24:	
  6063 ;; *************** function _sw_action *****************
  6064 ;; Defined at:
  6065 ;;		line 54 in file "switchs.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6079 ;;      Params:         0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0
  6081 ;;      Temps:          0       2       0       0       0
  6082 ;;      Totals:         0       2       0       0       0
  6083 ;;Total ram usage:        2 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    6
  6086 ;; This function calls:
  6087 ;;		_EEPROM_write
  6088 ;; This function is called by:
  6089 ;;		_switch_scan
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           
  6094                           ;psect for function _sw_action
  6095  0E25                     _sw_action:	
  6096  0E25                     l2464:	
  6097                           ;incstack = 0
  6098 ;; hardware stack exceeded
  6099                           ; Regs used in _sw_action: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6100                           
  6101                           
  6102                           ;switchs.c: 55:     switch (mode){
  6103  0E25  2E9D               	goto	l2504
  6104  0E26                     l2466:	
  6105                           
  6106                           ;switchs.c: 58:             if ( (up_sw == PRESSED ) || (down_sw == PRESSED) ) {
  6107  0E26  0367               	decf	_up_sw,w
  6108  0E27  1903               	btfsc	3,2
  6109  0E28  2E2A               	goto	u1881
  6110  0E29  2E2B               	goto	u1880
  6111  0E2A                     u1881:	
  6112  0E2A  2E30               	goto	l242
  6113  0E2B                     u1880:	
  6114  0E2B                     l2468:	
  6115  0E2B  0366               	decf	_down_sw,w
  6116  0E2C  1D03               	btfss	3,2
  6117  0E2D  2E2F               	goto	u1891
  6118  0E2E  2E30               	goto	u1890
  6119  0E2F                     u1891:	
  6120  0E2F  2EAF               	goto	l253
  6121  0E30                     u1890:	
  6122  0E30                     l242:	
  6123                           
  6124                           ;switchs.c: 59:                 mode = SETTING_MODE ;
  6125  0E30  01E3               	clrf	_mode
  6126  0E31  0AE3               	incf	_mode,f
  6127  0E32                     l2470:	
  6128                           
  6129                           ;switchs.c: 60:                 up_sw = RELEASED ;
  6130  0E32  3003               	movlw	3
  6131  0E33  00AC               	movwf	??_sw_action
  6132  0E34  082C               	movf	??_sw_action,w
  6133  0E35  00E7               	movwf	_up_sw
  6134                           
  6135                           ;switchs.c: 61:                 down_sw = RELEASED ;
  6136  0E36  3003               	movlw	3
  6137  0E37  00AC               	movwf	??_sw_action
  6138  0E38  082C               	movf	??_sw_action,w
  6139  0E39  00E6               	movwf	_down_sw
  6140                           
  6141                           ;switchs.c: 62:             }
  6142  0E3A  2EAF               	goto	l253
  6143  0E3B                     l2472:	
  6144                           
  6145                           ;switchs.c: 70:             if (switch_wait < 5000){
  6146  0E3B  3013               	movlw	19
  6147  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  6148  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  6149  0E3E  0255               	subwf	(_switch_wait+1)^(0+128),w
  6150  0E3F  3088               	movlw	136
  6151  0E40  1903               	skipnz
  6152  0E41  0254               	subwf	_switch_wait^(0+128),w
  6153  0E42  1803               	skipnc
  6154  0E43  2E45               	goto	u1901
  6155  0E44  2E46               	goto	u1900
  6156  0E45                     u1901:	
  6157  0E45  2E83               	goto	l2496
  6158  0E46                     u1900:	
  6159  0E46                     l2474:	
  6160                           
  6161                           ;switchs.c: 71:                 if ( (up_sw == PRESSED) && (set_temp < 75)){
  6162  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  6163  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  6164  0E48  0367               	decf	_up_sw,w
  6165  0E49  1D03               	btfss	3,2
  6166  0E4A  2E4C               	goto	u1911
  6167  0E4B  2E4D               	goto	u1910
  6168  0E4C                     u1911:	
  6169  0E4C  2E62               	goto	l2484
  6170  0E4D                     u1910:	
  6171  0E4D                     l2476:	
  6172  0E4D  304B               	movlw	75
  6173  0E4E  0265               	subwf	_set_temp,w
  6174  0E4F  1803               	skipnc
  6175  0E50  2E52               	goto	u1921
  6176  0E51  2E53               	goto	u1920
  6177  0E52                     u1921:	
  6178  0E52  2E62               	goto	l2484
  6179  0E53                     u1920:	
  6180  0E53                     l2478:	
  6181                           
  6182                           ;switchs.c: 72:                     set_temp += 5 ;
  6183  0E53  3005               	movlw	5
  6184  0E54  00AC               	movwf	??_sw_action
  6185  0E55  082C               	movf	??_sw_action,w
  6186  0E56  07E5               	addwf	_set_temp,f
  6187  0E57                     l2480:	
  6188                           
  6189                           ;switchs.c: 73:                     switch_wait = 0 ;
  6190  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  6191  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  6192  0E59  01D4               	clrf	_switch_wait^(0+128)
  6193  0E5A  01D5               	clrf	(_switch_wait+1)^(0+128)
  6194  0E5B                     l2482:	
  6195                           
  6196                           ;switchs.c: 74:                     up_sw = RELEASED ;
  6197  0E5B  3003               	movlw	3
  6198  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  6199  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  6200  0E5E  00AC               	movwf	??_sw_action
  6201  0E5F  082C               	movf	??_sw_action,w
  6202  0E60  00E7               	movwf	_up_sw
  6203                           
  6204                           ;switchs.c: 75:                 }
  6205  0E61  2EAF               	goto	l253
  6206  0E62                     l2484:	
  6207  0E62  0366               	decf	_down_sw,w
  6208  0E63  1D03               	btfss	3,2
  6209  0E64  2E66               	goto	u1931
  6210  0E65  2E67               	goto	u1930
  6211  0E66                     u1931:	
  6212  0E66  2E7A               	goto	l2494
  6213  0E67                     u1930:	
  6214  0E67                     l2486:	
  6215  0E67  3024               	movlw	36
  6216  0E68  0265               	subwf	_set_temp,w
  6217  0E69  1C03               	skipc
  6218  0E6A  2E6C               	goto	u1941
  6219  0E6B  2E6D               	goto	u1940
  6220  0E6C                     u1941:	
  6221  0E6C  2E7A               	goto	l2494
  6222  0E6D                     u1940:	
  6223  0E6D                     l2488:	
  6224                           
  6225                           ;switchs.c: 77:                     set_temp -= 5 ;
  6226  0E6D  3005               	movlw	5
  6227  0E6E  02E5               	subwf	_set_temp,f
  6228  0E6F                     l2490:	
  6229                           
  6230                           ;switchs.c: 78:                     switch_wait = 0 ;
  6231  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  6232  0E70  1303               	bcf	3,6	;RP1=0, select bank1
  6233  0E71  01D4               	clrf	_switch_wait^(0+128)
  6234  0E72  01D5               	clrf	(_switch_wait+1)^(0+128)
  6235  0E73                     l2492:	
  6236                           
  6237                           ;switchs.c: 79:                     down_sw = RELEASED ;
  6238  0E73  3003               	movlw	3
  6239  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  6240  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  6241  0E76  00AC               	movwf	??_sw_action
  6242  0E77  082C               	movf	??_sw_action,w
  6243  0E78  00E6               	movwf	_down_sw
  6244                           
  6245                           ;switchs.c: 80:                 }
  6246  0E79  2EAF               	goto	l253
  6247  0E7A                     l2494:	
  6248                           
  6249                           ;switchs.c: 82:                     switch_wait += (200) ;
  6250  0E7A  30C8               	movlw	200
  6251  0E7B  1683               	bsf	3,5	;RP0=1, select bank1
  6252  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  6253  0E7D  07D4               	addwf	_switch_wait^(0+128),f
  6254  0E7E  1803               	skipnc
  6255  0E7F  0AD5               	incf	(_switch_wait+1)^(0+128),f
  6256  0E80  3000               	movlw	0
  6257  0E81  07D5               	addwf	(_switch_wait+1)^(0+128),f
  6258  0E82  2EAF               	goto	l253
  6259  0E83                     l2496:	
  6260                           
  6261                           ;switchs.c: 86:                 mode = NORMAL_MODE ;
  6262  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  6263  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  6264  0E85  01E3               	clrf	_mode
  6265                           
  6266                           ;switchs.c: 87:                 switch_wait = 0 ;
  6267  0E86  1683               	bsf	3,5	;RP0=1, select bank1
  6268  0E87  1303               	bcf	3,6	;RP1=0, select bank1
  6269  0E88  01D4               	clrf	_switch_wait^(0+128)
  6270  0E89  01D5               	clrf	(_switch_wait+1)^(0+128)
  6271  0E8A                     l2498:	
  6272                           
  6273                           ;switchs.c: 88:                 EEPROM_write(0xff , set_temp);
  6274  0E8A  30FF               	movlw	255
  6275  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  6276  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  6277  0E8D  00A9               	movwf	EEPROM_write@address
  6278  0E8E  3000               	movlw	0
  6279  0E8F  00AA               	movwf	EEPROM_write@address+1
  6280  0E90  0865               	movf	_set_temp,w
  6281  0E91  00AC               	movwf	??_sw_action
  6282  0E92  082C               	movf	??_sw_action,w
  6283  0E93  00AB               	movwf	EEPROM_write@_x
  6284  0E94  160A  118A  27DF  120A  158A  	fcall	_EEPROM_write
  6285  0E99                     l2500:	
  6286                           
  6287                           ;switchs.c: 89:                 blink = SSD_ON ;
  6288  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  6289  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  6290  0E9B  01E1               	clrf	_blink
  6291  0E9C  2EAF               	goto	l253
  6292  0E9D                     l2504:	
  6293  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  6294  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  6295  0E9F  0863               	movf	_mode,w
  6296  0EA0  00AC               	movwf	??_sw_action
  6297  0EA1  01AD               	clrf	??_sw_action+1
  6298                           
  6299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6300                           ; Switch size 1, requested type "simple"
  6301                           ; Number of cases is 1, Range of values is 0 to 0
  6302                           ; switch strategies available:
  6303                           ; Name         Instructions Cycles
  6304                           ; simple_byte            4     3 (average)
  6305                           ; direct_byte           11     8 (fixed)
  6306                           ; jumptable            260     6 (fixed)
  6307                           ;	Chosen strategy is simple_byte
  6308  0EA2  082D               	movf	??_sw_action+1,w
  6309  0EA3  3A00               	xorlw	0	; case 0
  6310  0EA4  1903               	skipnz
  6311  0EA5  2EA7               	goto	l3690
  6312  0EA6  2EAF               	goto	l253
  6313  0EA7                     l3690:	
  6314                           
  6315                           ; Switch size 1, requested type "simple"
  6316                           ; Number of cases is 2, Range of values is 0 to 1
  6317                           ; switch strategies available:
  6318                           ; Name         Instructions Cycles
  6319                           ; simple_byte            7     4 (average)
  6320                           ; direct_byte           14     8 (fixed)
  6321                           ; jumptable            260     6 (fixed)
  6322                           ;	Chosen strategy is simple_byte
  6323  0EA7  082C               	movf	??_sw_action,w
  6324  0EA8  3A00               	xorlw	0	; case 0
  6325  0EA9  1903               	skipnz
  6326  0EAA  2E26               	goto	l2466
  6327  0EAB  3A01               	xorlw	1	; case 1
  6328  0EAC  1903               	skipnz
  6329  0EAD  2E3B               	goto	l2472
  6330  0EAE  2EAF               	goto	l253
  6331  0EAF                     l253:	
  6332  0EAF  0008               	return
  6333  0EB0                     __end_of_sw_action:	
  6334                           
  6335                           	psect	text25
  6336  17DF                     __ptext25:	
  6337 ;; *************** function _EEPROM_write *****************
  6338 ;; Defined at:
  6339 ;;		line 19 in file "eeprom.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  address         2    9[BANK0 ] unsigned int 
  6342 ;;  _x              1   11[BANK0 ] unsigned char 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0, pclath, cstack
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6354 ;;      Params:         0       3       0       0       0
  6355 ;;      Locals:         0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0
  6357 ;;      Totals:         0       3       0       0       0
  6358 ;;Total ram usage:        3 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    5
  6361 ;; This function calls:
  6362 ;;		_I2C1_Start
  6363 ;;		_I2C1_Stop
  6364 ;;		_I2C1_Wr
  6365 ;; This function is called by:
  6366 ;;		_sw_action
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _EEPROM_write
  6372  17DF                     _EEPROM_write:	
  6373  17DF                     l2274:	
  6374                           ;incstack = 0
  6375 ;; hardware stack exceeded
  6376                           ; Regs used in _EEPROM_write: [wreg+status,2+status,0+pclath+cstack]
  6377                           
  6378                           
  6379                           ;eeprom.c: 20:     I2C1_Start();
  6380  17DF  160A  118A  26F3  160A  118A  	fcall	_I2C1_Start
  6381                           
  6382                           ;eeprom.c: 21:     I2C1_Wr(0XA2);
  6383  17E4  30A2               	movlw	162
  6384  17E5  160A  118A  276F  160A  118A  	fcall	_I2C1_Wr
  6385                           
  6386                           ;eeprom.c: 22:     I2C1_Wr(address);
  6387  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  6388  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  6389  17EC  0829               	movf	EEPROM_write@address,w
  6390  17ED  160A  118A  276F  160A  118A  	fcall	_I2C1_Wr
  6391                           
  6392                           ;eeprom.c: 23:     I2C1_Wr(_x);
  6393  17F2  1283               	bcf	3,5	;RP0=0, select bank0
  6394  17F3  1303               	bcf	3,6	;RP1=0, select bank0
  6395  17F4  082B               	movf	EEPROM_write@_x,w
  6396  17F5  160A  118A  276F  160A  118A  	fcall	_I2C1_Wr
  6397                           
  6398                           ;eeprom.c: 24:     I2C1_Stop();
  6399  17FA  160A  118A  26FC  160A  118A  	fcall	_I2C1_Stop
  6400  17FF                     l119:	
  6401  17FF  0008               	return
  6402  1800                     __end_of_EEPROM_write:	
  6403                           
  6404                           	psect	text26
  6405  0AB7                     __ptext26:	
  6406 ;; *************** function _display7s *****************
  6407 ;; Defined at:
  6408 ;;		line 36 in file "SSD.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  v               1    wreg     unsigned char 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  v               1   10[BANK0 ] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      unsigned char 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6422 ;;      Params:         0       0       0       0       0
  6423 ;;      Locals:         0       1       0       0       0
  6424 ;;      Temps:          0       2       0       0       0
  6425 ;;      Totals:         0       3       0       0       0
  6426 ;;Total ram usage:        3 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    3
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_ssd_update
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           
  6437                           ;psect for function _display7s
  6438  0AB7                     _display7s:	
  6439                           
  6440                           ;incstack = 0
  6441                           ; Regs used in _display7s: [wreg-fsr0h+status,2+status,0]
  6442                           ;display7s@v stored from wreg
  6443  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  6445  0AB9  00AA               	movwf	display7s@v
  6446  0ABA                     l2344:	
  6447                           
  6448                           ;SSD.c: 36: uint8_t display7s(uint8_t v);SSD.c: 37: {;SSD.c: 38:   switch(v)
  6449  0ABA  2ADD               	goto	l2450
  6450  0ABB                     l2346:	
  6451                           
  6452                           ;SSD.c: 41:       return 0x3F;
  6453  0ABB  303F               	movlw	63
  6454  0ABC  2B17               	goto	l159
  6455  0ABD                     l2352:	
  6456                           
  6457                           ;SSD.c: 44:       return 0x06;
  6458  0ABD  3006               	movlw	6
  6459  0ABE  2B17               	goto	l159
  6460  0ABF                     l2358:	
  6461                           
  6462                           ;SSD.c: 47:       return 0x5B;
  6463  0ABF  305B               	movlw	91
  6464  0AC0  2B17               	goto	l159
  6465  0AC1                     l2364:	
  6466                           
  6467                           ;SSD.c: 50:       return 0x4F;
  6468  0AC1  304F               	movlw	79
  6469  0AC2  2B17               	goto	l159
  6470  0AC3                     l2370:	
  6471                           
  6472                           ;SSD.c: 53:       return 0x66;
  6473  0AC3  3066               	movlw	102
  6474  0AC4  2B17               	goto	l159
  6475  0AC5                     l2376:	
  6476                           
  6477                           ;SSD.c: 56:       return 0x6D;
  6478  0AC5  306D               	movlw	109
  6479  0AC6  2B17               	goto	l159
  6480  0AC7                     l2382:	
  6481                           
  6482                           ;SSD.c: 59:       return 0x7D;
  6483  0AC7  307D               	movlw	125
  6484  0AC8  2B17               	goto	l159
  6485  0AC9                     l2388:	
  6486                           
  6487                           ;SSD.c: 62:       return 0x07;
  6488  0AC9  3007               	movlw	7
  6489  0ACA  2B17               	goto	l159
  6490  0ACB                     l2394:	
  6491                           
  6492                           ;SSD.c: 65:       return 0x7F;
  6493  0ACB  307F               	movlw	127
  6494  0ACC  2B17               	goto	l159
  6495  0ACD                     l2400:	
  6496                           
  6497                           ;SSD.c: 68:       return 0x6F;
  6498  0ACD  306F               	movlw	111
  6499  0ACE  2B17               	goto	l159
  6500  0ACF                     l2406:	
  6501                           
  6502                           ;SSD.c: 71:       return 0x77;
  6503  0ACF  3077               	movlw	119
  6504  0AD0  2B17               	goto	l159
  6505  0AD1                     l2412:	
  6506                           
  6507                           ;SSD.c: 74:       return 0x7c;
  6508  0AD1  307C               	movlw	124
  6509  0AD2  2B17               	goto	l159
  6510  0AD3                     l2418:	
  6511                           
  6512                           ;SSD.c: 77:       return 0x58;
  6513  0AD3  3058               	movlw	88
  6514  0AD4  2B17               	goto	l159
  6515  0AD5                     l2424:	
  6516                           
  6517                           ;SSD.c: 80:       return 0x5E;
  6518  0AD5  305E               	movlw	94
  6519  0AD6  2B17               	goto	l159
  6520  0AD7                     l2430:	
  6521                           
  6522                           ;SSD.c: 83:       return 0x79;
  6523  0AD7  3079               	movlw	121
  6524  0AD8  2B17               	goto	l159
  6525  0AD9                     l2436:	
  6526                           
  6527                           ;SSD.c: 86:       return 0x71;
  6528  0AD9  3071               	movlw	113
  6529  0ADA  2B17               	goto	l159
  6530  0ADB                     l2442:	
  6531                           
  6532                           ;SSD.c: 89:       return 0;
  6533  0ADB  3000               	movlw	0
  6534  0ADC  2B17               	goto	l159
  6535  0ADD                     l2450:	
  6536  0ADD  082A               	movf	display7s@v,w
  6537  0ADE  00A8               	movwf	??_display7s
  6538  0ADF  01A9               	clrf	??_display7s+1
  6539                           
  6540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6541                           ; Switch size 1, requested type "simple"
  6542                           ; Number of cases is 1, Range of values is 0 to 0
  6543                           ; switch strategies available:
  6544                           ; Name         Instructions Cycles
  6545                           ; simple_byte            4     3 (average)
  6546                           ; direct_byte           11     8 (fixed)
  6547                           ; jumptable            260     6 (fixed)
  6548                           ;	Chosen strategy is simple_byte
  6549  0AE0  0829               	movf	??_display7s+1,w
  6550  0AE1  3A00               	xorlw	0	; case 0
  6551  0AE2  1903               	skipnz
  6552  0AE3  2AE5               	goto	l3692
  6553  0AE4  2ADB               	goto	l2442
  6554  0AE5                     l3692:	
  6555                           
  6556                           ; Switch size 1, requested type "simple"
  6557                           ; Number of cases is 16, Range of values is 0 to 15
  6558                           ; switch strategies available:
  6559                           ; Name         Instructions Cycles
  6560                           ; simple_byte           49    25 (average)
  6561                           ; direct_byte           56     8 (fixed)
  6562                           ; jumptable            260     6 (fixed)
  6563                           ;	Chosen strategy is simple_byte
  6564  0AE5  0828               	movf	??_display7s,w
  6565  0AE6  3A00               	xorlw	0	; case 0
  6566  0AE7  1903               	skipnz
  6567  0AE8  2ABB               	goto	l2346
  6568  0AE9  3A01               	xorlw	1	; case 1
  6569  0AEA  1903               	skipnz
  6570  0AEB  2ABD               	goto	l2352
  6571  0AEC  3A03               	xorlw	3	; case 2
  6572  0AED  1903               	skipnz
  6573  0AEE  2ABF               	goto	l2358
  6574  0AEF  3A01               	xorlw	1	; case 3
  6575  0AF0  1903               	skipnz
  6576  0AF1  2AC1               	goto	l2364
  6577  0AF2  3A07               	xorlw	7	; case 4
  6578  0AF3  1903               	skipnz
  6579  0AF4  2AC3               	goto	l2370
  6580  0AF5  3A01               	xorlw	1	; case 5
  6581  0AF6  1903               	skipnz
  6582  0AF7  2AC5               	goto	l2376
  6583  0AF8  3A03               	xorlw	3	; case 6
  6584  0AF9  1903               	skipnz
  6585  0AFA  2AC7               	goto	l2382
  6586  0AFB  3A01               	xorlw	1	; case 7
  6587  0AFC  1903               	skipnz
  6588  0AFD  2AC9               	goto	l2388
  6589  0AFE  3A0F               	xorlw	15	; case 8
  6590  0AFF  1903               	skipnz
  6591  0B00  2ACB               	goto	l2394
  6592  0B01  3A01               	xorlw	1	; case 9
  6593  0B02  1903               	skipnz
  6594  0B03  2ACD               	goto	l2400
  6595  0B04  3A03               	xorlw	3	; case 10
  6596  0B05  1903               	skipnz
  6597  0B06  2ACF               	goto	l2406
  6598  0B07  3A01               	xorlw	1	; case 11
  6599  0B08  1903               	skipnz
  6600  0B09  2AD1               	goto	l2412
  6601  0B0A  3A07               	xorlw	7	; case 12
  6602  0B0B  1903               	skipnz
  6603  0B0C  2AD3               	goto	l2418
  6604  0B0D  3A01               	xorlw	1	; case 13
  6605  0B0E  1903               	skipnz
  6606  0B0F  2AD5               	goto	l2424
  6607  0B10  3A03               	xorlw	3	; case 14
  6608  0B11  1903               	skipnz
  6609  0B12  2AD7               	goto	l2430
  6610  0B13  3A01               	xorlw	1	; case 15
  6611  0B14  1903               	skipnz
  6612  0B15  2AD9               	goto	l2436
  6613  0B16  2ADB               	goto	l2442
  6614  0B17                     l159:	
  6615  0B17  0008               	return
  6616  0B18                     __end_of_display7s:	
  6617                           
  6618                           	psect	text27
  6619  0A5C                     __ptext27:	
  6620 ;; *************** function ___awmod *****************
  6621 ;; Defined at:
  6622 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  divisor         2    8[BANK0 ] int 
  6625 ;;  dividend        2   10[BANK0 ] int 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  sign            1   14[BANK0 ] unsigned char 
  6628 ;;  counter         1   13[BANK0 ] unsigned char 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  2    8[BANK0 ] int 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6638 ;;      Params:         0       4       0       0       0
  6639 ;;      Locals:         0       2       0       0       0
  6640 ;;      Temps:          0       1       0       0       0
  6641 ;;      Totals:         0       7       0       0       0
  6642 ;;Total ram usage:        7 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    3
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_ssd_update
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           
  6653                           ;psect for function ___awmod
  6654  0A5C                     ___awmod:	
  6655  0A5C                     l2610:	
  6656                           ;incstack = 0
  6657                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6658                           
  6659  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  6660  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  6661  0A5E  01AE               	clrf	___awmod@sign
  6662  0A5F                     l2612:	
  6663  0A5F  1FAB               	btfss	___awmod@dividend+1,7
  6664  0A60  2A62               	goto	u2151
  6665  0A61  2A63               	goto	u2150
  6666  0A62                     u2151:	
  6667  0A62  2A6A               	goto	l2618
  6668  0A63                     u2150:	
  6669  0A63                     l2614:	
  6670  0A63  09AA               	comf	___awmod@dividend,f
  6671  0A64  09AB               	comf	___awmod@dividend+1,f
  6672  0A65  0AAA               	incf	___awmod@dividend,f
  6673  0A66  1903               	skipnz
  6674  0A67  0AAB               	incf	___awmod@dividend+1,f
  6675  0A68                     l2616:	
  6676  0A68  01AE               	clrf	___awmod@sign
  6677  0A69  0AAE               	incf	___awmod@sign,f
  6678  0A6A                     l2618:	
  6679  0A6A  1FA9               	btfss	___awmod@divisor+1,7
  6680  0A6B  2A6D               	goto	u2161
  6681  0A6C  2A6E               	goto	u2160
  6682  0A6D                     u2161:	
  6683  0A6D  2A73               	goto	l2622
  6684  0A6E                     u2160:	
  6685  0A6E                     l2620:	
  6686  0A6E  09A8               	comf	___awmod@divisor,f
  6687  0A6F  09A9               	comf	___awmod@divisor+1,f
  6688  0A70  0AA8               	incf	___awmod@divisor,f
  6689  0A71  1903               	skipnz
  6690  0A72  0AA9               	incf	___awmod@divisor+1,f
  6691  0A73                     l2622:	
  6692  0A73  0828               	movf	___awmod@divisor,w
  6693  0A74  0429               	iorwf	___awmod@divisor+1,w
  6694  0A75  1903               	btfsc	3,2
  6695  0A76  2A78               	goto	u2171
  6696  0A77  2A79               	goto	u2170
  6697  0A78                     u2171:	
  6698  0A78  2AA8               	goto	l2640
  6699  0A79                     u2170:	
  6700  0A79                     l2624:	
  6701  0A79  01AD               	clrf	___awmod@counter
  6702  0A7A  0AAD               	incf	___awmod@counter,f
  6703  0A7B  2A87               	goto	l2630
  6704  0A7C                     l2626:	
  6705  0A7C  3001               	movlw	1
  6706  0A7D                     u2185:	
  6707  0A7D  1003               	clrc
  6708  0A7E  0DA8               	rlf	___awmod@divisor,f
  6709  0A7F  0DA9               	rlf	___awmod@divisor+1,f
  6710  0A80  3EFF               	addlw	-1
  6711  0A81  1D03               	skipz
  6712  0A82  2A7D               	goto	u2185
  6713  0A83                     l2628:	
  6714  0A83  3001               	movlw	1
  6715  0A84  00AC               	movwf	??___awmod
  6716  0A85  082C               	movf	??___awmod,w
  6717  0A86  07AD               	addwf	___awmod@counter,f
  6718  0A87                     l2630:	
  6719  0A87  1FA9               	btfss	___awmod@divisor+1,7
  6720  0A88  2A8A               	goto	u2191
  6721  0A89  2A8B               	goto	u2190
  6722  0A8A                     u2191:	
  6723  0A8A  2A7C               	goto	l2626
  6724  0A8B                     u2190:	
  6725  0A8B                     l2632:	
  6726  0A8B  0829               	movf	___awmod@divisor+1,w
  6727  0A8C  022B               	subwf	___awmod@dividend+1,w
  6728  0A8D  1D03               	skipz
  6729  0A8E  2A91               	goto	u2205
  6730  0A8F  0828               	movf	___awmod@divisor,w
  6731  0A90  022A               	subwf	___awmod@dividend,w
  6732  0A91                     u2205:	
  6733  0A91  1C03               	skipc
  6734  0A92  2A94               	goto	u2201
  6735  0A93  2A95               	goto	u2200
  6736  0A94                     u2201:	
  6737  0A94  2A9B               	goto	l2636
  6738  0A95                     u2200:	
  6739  0A95                     l2634:	
  6740  0A95  0828               	movf	___awmod@divisor,w
  6741  0A96  02AA               	subwf	___awmod@dividend,f
  6742  0A97  0829               	movf	___awmod@divisor+1,w
  6743  0A98  1C03               	skipc
  6744  0A99  03AB               	decf	___awmod@dividend+1,f
  6745  0A9A  02AB               	subwf	___awmod@dividend+1,f
  6746  0A9B                     l2636:	
  6747  0A9B  3001               	movlw	1
  6748  0A9C                     u2215:	
  6749  0A9C  1003               	clrc
  6750  0A9D  0CA9               	rrf	___awmod@divisor+1,f
  6751  0A9E  0CA8               	rrf	___awmod@divisor,f
  6752  0A9F  3EFF               	addlw	-1
  6753  0AA0  1D03               	skipz
  6754  0AA1  2A9C               	goto	u2215
  6755  0AA2                     l2638:	
  6756  0AA2  3001               	movlw	1
  6757  0AA3  02AD               	subwf	___awmod@counter,f
  6758  0AA4  1D03               	btfss	3,2
  6759  0AA5  2AA7               	goto	u2221
  6760  0AA6  2AA8               	goto	u2220
  6761  0AA7                     u2221:	
  6762  0AA7  2A8B               	goto	l2632
  6763  0AA8                     u2220:	
  6764  0AA8                     l2640:	
  6765  0AA8  082E               	movf	___awmod@sign,w
  6766  0AA9  1903               	btfsc	3,2
  6767  0AAA  2AAC               	goto	u2231
  6768  0AAB  2AAD               	goto	u2230
  6769  0AAC                     u2231:	
  6770  0AAC  2AB2               	goto	l2644
  6771  0AAD                     u2230:	
  6772  0AAD                     l2642:	
  6773  0AAD  09AA               	comf	___awmod@dividend,f
  6774  0AAE  09AB               	comf	___awmod@dividend+1,f
  6775  0AAF  0AAA               	incf	___awmod@dividend,f
  6776  0AB0  1903               	skipnz
  6777  0AB1  0AAB               	incf	___awmod@dividend+1,f
  6778  0AB2                     l2644:	
  6779  0AB2  082B               	movf	___awmod@dividend+1,w
  6780  0AB3  00A9               	movwf	?___awmod+1
  6781  0AB4  082A               	movf	___awmod@dividend,w
  6782  0AB5  00A8               	movwf	?___awmod
  6783  0AB6                     l666:	
  6784  0AB6  0008               	return
  6785  0AB7                     __end_of___awmod:	
  6786                           
  6787                           	psect	text28
  6788  0C46                     __ptext28:	
  6789 ;; *************** function ___awdiv *****************
  6790 ;; Defined at:
  6791 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  divisor         2    8[BANK0 ] int 
  6794 ;;  dividend        2   10[BANK0 ] int 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  quotient        2   15[BANK0 ] int 
  6797 ;;  sign            1   14[BANK0 ] unsigned char 
  6798 ;;  counter         1   13[BANK0 ] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  2    8[BANK0 ] int 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6808 ;;      Params:         0       4       0       0       0
  6809 ;;      Locals:         0       4       0       0       0
  6810 ;;      Temps:          0       1       0       0       0
  6811 ;;      Totals:         0       9       0       0       0
  6812 ;;Total ram usage:        9 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    3
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_ssd_update
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           
  6823                           ;psect for function ___awdiv
  6824  0C46                     ___awdiv:	
  6825  0C46                     l2566:	
  6826                           ;incstack = 0
  6827                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6828                           
  6829  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  6830  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  6831  0C48  01AE               	clrf	___awdiv@sign
  6832  0C49                     l2568:	
  6833  0C49  1FA9               	btfss	___awdiv@divisor+1,7
  6834  0C4A  2C4C               	goto	u2051
  6835  0C4B  2C4D               	goto	u2050
  6836  0C4C                     u2051:	
  6837  0C4C  2C54               	goto	l2574
  6838  0C4D                     u2050:	
  6839  0C4D                     l2570:	
  6840  0C4D  09A8               	comf	___awdiv@divisor,f
  6841  0C4E  09A9               	comf	___awdiv@divisor+1,f
  6842  0C4F  0AA8               	incf	___awdiv@divisor,f
  6843  0C50  1903               	skipnz
  6844  0C51  0AA9               	incf	___awdiv@divisor+1,f
  6845  0C52                     l2572:	
  6846  0C52  01AE               	clrf	___awdiv@sign
  6847  0C53  0AAE               	incf	___awdiv@sign,f
  6848  0C54                     l2574:	
  6849  0C54  1FAB               	btfss	___awdiv@dividend+1,7
  6850  0C55  2C57               	goto	u2061
  6851  0C56  2C58               	goto	u2060
  6852  0C57                     u2061:	
  6853  0C57  2C61               	goto	l2580
  6854  0C58                     u2060:	
  6855  0C58                     l2576:	
  6856  0C58  09AA               	comf	___awdiv@dividend,f
  6857  0C59  09AB               	comf	___awdiv@dividend+1,f
  6858  0C5A  0AAA               	incf	___awdiv@dividend,f
  6859  0C5B  1903               	skipnz
  6860  0C5C  0AAB               	incf	___awdiv@dividend+1,f
  6861  0C5D                     l2578:	
  6862  0C5D  3001               	movlw	1
  6863  0C5E  00AC               	movwf	??___awdiv
  6864  0C5F  082C               	movf	??___awdiv,w
  6865  0C60  06AE               	xorwf	___awdiv@sign,f
  6866  0C61                     l2580:	
  6867  0C61  01AF               	clrf	___awdiv@quotient
  6868  0C62  01B0               	clrf	___awdiv@quotient+1
  6869  0C63                     l2582:	
  6870  0C63  0828               	movf	___awdiv@divisor,w
  6871  0C64  0429               	iorwf	___awdiv@divisor+1,w
  6872  0C65  1903               	btfsc	3,2
  6873  0C66  2C68               	goto	u2071
  6874  0C67  2C69               	goto	u2070
  6875  0C68                     u2071:	
  6876  0C68  2CA0               	goto	l2602
  6877  0C69                     u2070:	
  6878  0C69                     l2584:	
  6879  0C69  01AD               	clrf	___awdiv@counter
  6880  0C6A  0AAD               	incf	___awdiv@counter,f
  6881  0C6B  2C77               	goto	l2590
  6882  0C6C                     l2586:	
  6883  0C6C  3001               	movlw	1
  6884  0C6D                     u2085:	
  6885  0C6D  1003               	clrc
  6886  0C6E  0DA8               	rlf	___awdiv@divisor,f
  6887  0C6F  0DA9               	rlf	___awdiv@divisor+1,f
  6888  0C70  3EFF               	addlw	-1
  6889  0C71  1D03               	skipz
  6890  0C72  2C6D               	goto	u2085
  6891  0C73                     l2588:	
  6892  0C73  3001               	movlw	1
  6893  0C74  00AC               	movwf	??___awdiv
  6894  0C75  082C               	movf	??___awdiv,w
  6895  0C76  07AD               	addwf	___awdiv@counter,f
  6896  0C77                     l2590:	
  6897  0C77  1FA9               	btfss	___awdiv@divisor+1,7
  6898  0C78  2C7A               	goto	u2091
  6899  0C79  2C7B               	goto	u2090
  6900  0C7A                     u2091:	
  6901  0C7A  2C6C               	goto	l2586
  6902  0C7B                     u2090:	
  6903  0C7B                     l2592:	
  6904  0C7B  3001               	movlw	1
  6905  0C7C                     u2105:	
  6906  0C7C  1003               	clrc
  6907  0C7D  0DAF               	rlf	___awdiv@quotient,f
  6908  0C7E  0DB0               	rlf	___awdiv@quotient+1,f
  6909  0C7F  3EFF               	addlw	-1
  6910  0C80  1D03               	skipz
  6911  0C81  2C7C               	goto	u2105
  6912  0C82  0829               	movf	___awdiv@divisor+1,w
  6913  0C83  022B               	subwf	___awdiv@dividend+1,w
  6914  0C84  1D03               	skipz
  6915  0C85  2C88               	goto	u2115
  6916  0C86  0828               	movf	___awdiv@divisor,w
  6917  0C87  022A               	subwf	___awdiv@dividend,w
  6918  0C88                     u2115:	
  6919  0C88  1C03               	skipc
  6920  0C89  2C8B               	goto	u2111
  6921  0C8A  2C8C               	goto	u2110
  6922  0C8B                     u2111:	
  6923  0C8B  2C93               	goto	l2598
  6924  0C8C                     u2110:	
  6925  0C8C                     l2594:	
  6926  0C8C  0828               	movf	___awdiv@divisor,w
  6927  0C8D  02AA               	subwf	___awdiv@dividend,f
  6928  0C8E  0829               	movf	___awdiv@divisor+1,w
  6929  0C8F  1C03               	skipc
  6930  0C90  03AB               	decf	___awdiv@dividend+1,f
  6931  0C91  02AB               	subwf	___awdiv@dividend+1,f
  6932  0C92                     l2596:	
  6933  0C92  142F               	bsf	___awdiv@quotient,0
  6934  0C93                     l2598:	
  6935  0C93  3001               	movlw	1
  6936  0C94                     u2125:	
  6937  0C94  1003               	clrc
  6938  0C95  0CA9               	rrf	___awdiv@divisor+1,f
  6939  0C96  0CA8               	rrf	___awdiv@divisor,f
  6940  0C97  3EFF               	addlw	-1
  6941  0C98  1D03               	skipz
  6942  0C99  2C94               	goto	u2125
  6943  0C9A                     l2600:	
  6944  0C9A  3001               	movlw	1
  6945  0C9B  02AD               	subwf	___awdiv@counter,f
  6946  0C9C  1D03               	btfss	3,2
  6947  0C9D  2C9F               	goto	u2131
  6948  0C9E  2CA0               	goto	u2130
  6949  0C9F                     u2131:	
  6950  0C9F  2C7B               	goto	l2592
  6951  0CA0                     u2130:	
  6952  0CA0                     l2602:	
  6953  0CA0  082E               	movf	___awdiv@sign,w
  6954  0CA1  1903               	btfsc	3,2
  6955  0CA2  2CA4               	goto	u2141
  6956  0CA3  2CA5               	goto	u2140
  6957  0CA4                     u2141:	
  6958  0CA4  2CAA               	goto	l2606
  6959  0CA5                     u2140:	
  6960  0CA5                     l2604:	
  6961  0CA5  09AF               	comf	___awdiv@quotient,f
  6962  0CA6  09B0               	comf	___awdiv@quotient+1,f
  6963  0CA7  0AAF               	incf	___awdiv@quotient,f
  6964  0CA8  1903               	skipnz
  6965  0CA9  0AB0               	incf	___awdiv@quotient+1,f
  6966  0CAA                     l2606:	
  6967  0CAA  0830               	movf	___awdiv@quotient+1,w
  6968  0CAB  00A9               	movwf	?___awdiv+1
  6969  0CAC  082F               	movf	___awdiv@quotient,w
  6970  0CAD  00A8               	movwf	?___awdiv
  6971  0CAE                     l653:	
  6972  0CAE  0008               	return
  6973  0CAF                     __end_of___awdiv:	
  6974                           
  6975                           	psect	text29
  6976  171A                     __ptext29:	
  6977 ;; *************** function _ssd_turn_off *****************
  6978 ;; Defined at:
  6979 ;;		line 138 in file "SSD.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6993 ;;      Params:         0       0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0
  6995 ;;      Temps:          0       1       0       0       0
  6996 ;;      Totals:         0       1       0       0       0
  6997 ;;Total ram usage:        1 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    3
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_ssd_blink
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           
  7008                           ;psect for function _ssd_turn_off
  7009  171A                     _ssd_turn_off:	
  7010  171A                     l2458:	
  7011                           ;incstack = 0
  7012                           ; Regs used in _ssd_turn_off: [wreg+status,2+status,0]
  7013                           
  7014                           
  7015                           ;SSD.c: 139:     (PORTD &= ~(255 << 0));
  7016  171A  1283               	bcf	3,5	;RP0=0, select bank0
  7017  171B  1303               	bcf	3,6	;RP1=0, select bank0
  7018  171C  0188               	clrf	8	;volatile
  7019  171D                     l2460:	
  7020                           
  7021                           ;SSD.c: 140:     (PORTA &= ~(1 << 4));
  7022  171D  30EF               	movlw	239
  7023  171E  00A8               	movwf	??_ssd_turn_off
  7024  171F  0828               	movf	??_ssd_turn_off,w
  7025  1720  0585               	andwf	5,f	;volatile
  7026  1721                     l2462:	
  7027                           
  7028                           ;SSD.c: 141:     (PORTA &= ~(1 << 5));
  7029  1721  30DF               	movlw	223
  7030  1722  00A8               	movwf	??_ssd_turn_off
  7031  1723  0828               	movf	??_ssd_turn_off,w
  7032  1724  0585               	andwf	5,f	;volatile
  7033  1725                     l192:	
  7034  1725  0008               	return
  7035  1726                     __end_of_ssd_turn_off:	
  7036                           
  7037                           	psect	text30
  7038  093D                     __ptext30:	
  7039 ;; *************** function _EEPROM_read *****************
  7040 ;; Defined at:
  7041 ;;		line 32 in file "eeprom.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  address         2    9[BANK0 ] unsigned int 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  _x              1   12[BANK0 ] unsigned char 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  1    wreg      unsigned char 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0, pclath, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       2       0       0       0
  7056 ;;      Locals:         0       1       0       0       0
  7057 ;;      Temps:          0       1       0       0       0
  7058 ;;      Totals:         0       4       0       0       0
  7059 ;;Total ram usage:        4 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    5
  7062 ;; This function calls:
  7063 ;;		_I2C1_Rd
  7064 ;;		_I2C1_Start
  7065 ;;		_I2C1_Stop
  7066 ;;		_I2C1_Wr
  7067 ;; This function is called by:
  7068 ;;		_get_set_temp
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           
  7073                           ;psect for function _EEPROM_read
  7074  093D                     _EEPROM_read:	
  7075  093D                     l2324:	
  7076                           ;incstack = 0
  7077                           ; Regs used in _EEPROM_read: [wreg+status,2+status,0+pclath+cstack]
  7078                           
  7079  093D                     l2326:	
  7080                           
  7081                           ;eeprom.c: 34:     I2C1_Start();
  7082  093D  160A  118A  26F3  120A  158A  	fcall	_I2C1_Start
  7083  0942                     l2328:	
  7084                           
  7085                           ;eeprom.c: 35:     I2C1_Wr(0XA2);
  7086  0942  30A2               	movlw	162
  7087  0943  160A  118A  276F  120A  158A  	fcall	_I2C1_Wr
  7088  0948                     l2330:	
  7089                           
  7090                           ;eeprom.c: 36:     I2C1_Wr(address);
  7091  0948  1283               	bcf	3,5	;RP0=0, select bank0
  7092  0949  1303               	bcf	3,6	;RP1=0, select bank0
  7093  094A  0829               	movf	EEPROM_read@address,w
  7094  094B  160A  118A  276F  120A  158A  	fcall	_I2C1_Wr
  7095  0950                     l2332:	
  7096                           
  7097                           ;eeprom.c: 37:     I2C1_Start();
  7098  0950  160A  118A  26F3  120A  158A  	fcall	_I2C1_Start
  7099  0955                     l2334:	
  7100                           
  7101                           ;eeprom.c: 38:     I2C1_Wr(0XA3);
  7102  0955  30A3               	movlw	163
  7103  0956  160A  118A  276F  120A  158A  	fcall	_I2C1_Wr
  7104  095B                     l2336:	
  7105                           
  7106                           ;eeprom.c: 39:     _x = I2C1_Rd();
  7107  095B  160A  118A  2733  120A  158A  	fcall	_I2C1_Rd
  7108  0960  1283               	bcf	3,5	;RP0=0, select bank0
  7109  0961  1303               	bcf	3,6	;RP1=0, select bank0
  7110  0962  00AB               	movwf	??_EEPROM_read
  7111  0963  082B               	movf	??_EEPROM_read,w
  7112  0964  00AC               	movwf	EEPROM_read@_x
  7113  0965                     l2338:	
  7114                           
  7115                           ;eeprom.c: 40:     I2C1_Stop();
  7116  0965  160A  118A  26FC  120A  158A  	fcall	_I2C1_Stop
  7117  096A                     l2340:	
  7118                           
  7119                           ;eeprom.c: 41:     return _x ;
  7120  096A  1283               	bcf	3,5	;RP0=0, select bank0
  7121  096B  1303               	bcf	3,6	;RP1=0, select bank0
  7122  096C  082C               	movf	EEPROM_read@_x,w
  7123  096D                     l122:	
  7124  096D  0008               	return
  7125  096E                     __end_of_EEPROM_read:	
  7126                           
  7127                           	psect	text31
  7128  176F                     __ptext31:	
  7129 ;; *************** function _I2C1_Wr *****************
  7130 ;; Defined at:
  7131 ;;		line 51 in file "I2C_drive.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  _data           1    wreg     unsigned char 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  _data           1    8[BANK0 ] unsigned char 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  1    wreg      void 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, status,0, pclath, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7145 ;;      Params:         0       0       0       0       0
  7146 ;;      Locals:         0       1       0       0       0
  7147 ;;      Temps:          0       0       0       0       0
  7148 ;;      Totals:         0       1       0       0       0
  7149 ;;Total ram usage:        1 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    4
  7152 ;; This function calls:
  7153 ;;		_I2C_Wait
  7154 ;; This function is called by:
  7155 ;;		_EEPROM_write
  7156 ;;		_EEPROM_read
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           
  7161                           ;psect for function _I2C1_Wr
  7162  176F                     _I2C1_Wr:	
  7163                           
  7164                           ;incstack = 0
  7165 ;; hardware stack exceeded
  7166                           ; Regs used in _I2C1_Wr: [wreg+status,2+status,0+pclath+cstack]
  7167                           ;I2C1_Wr@_data stored from wreg
  7168  176F  1283               	bcf	3,5	;RP0=0, select bank0
  7169  1770  1303               	bcf	3,6	;RP1=0, select bank0
  7170  1771  00A8               	movwf	I2C1_Wr@_data
  7171  1772                     l2262:	
  7172                           
  7173                           ;I2C_drive.c: 52:     I2C_Wait();
  7174  1772  160A  118A  2726  160A  118A  	fcall	_I2C_Wait
  7175  1777                     l2264:	
  7176                           
  7177                           ;I2C_drive.c: 53:     SSPBUF = _data ;
  7178  1777  1283               	bcf	3,5	;RP0=0, select bank0
  7179  1778  1303               	bcf	3,6	;RP1=0, select bank0
  7180  1779  0828               	movf	I2C1_Wr@_data,w
  7181  177A  0093               	movwf	19	;volatile
  7182  177B                     l2266:	
  7183                           
  7184                           ;I2C_drive.c: 54:     I2C_Wait();
  7185  177B  160A  118A  2726  160A  118A  	fcall	_I2C_Wait
  7186  1780                     l95:	
  7187  1780  0008               	return
  7188  1781                     __end_of_I2C1_Wr:	
  7189                           
  7190                           	psect	text32
  7191  16FC                     __ptext32:	
  7192 ;; *************** function _I2C1_Stop *****************
  7193 ;; Defined at:
  7194 ;;		line 41 in file "I2C_drive.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;		None
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7208 ;;      Params:         0       0       0       0       0
  7209 ;;      Locals:         0       0       0       0       0
  7210 ;;      Temps:          0       0       0       0       0
  7211 ;;      Totals:         0       0       0       0       0
  7212 ;;Total ram usage:        0 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    4
  7215 ;; This function calls:
  7216 ;;		_I2C_Wait
  7217 ;; This function is called by:
  7218 ;;		_EEPROM_write
  7219 ;;		_EEPROM_read
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           
  7224                           ;psect for function _I2C1_Stop
  7225  16FC                     _I2C1_Stop:	
  7226  16FC                     l2258:	
  7227                           ;incstack = 0
  7228 ;; hardware stack exceeded
  7229                           ; Regs used in _I2C1_Stop: [wreg+status,2+status,0+pclath+cstack]
  7230                           
  7231                           
  7232                           ;I2C_drive.c: 42:     I2C_Wait();
  7233  16FC  160A  118A  2726  160A  118A  	fcall	_I2C_Wait
  7234  1701                     l2260:	
  7235                           
  7236                           ;I2C_drive.c: 43:     (SSPCON2 |= (1 << 2));
  7237  1701  1683               	bsf	3,5	;RP0=1, select bank1
  7238  1702  1303               	bcf	3,6	;RP1=0, select bank1
  7239  1703  1511               	bsf	17,2	;volatile
  7240  1704                     l92:	
  7241  1704  0008               	return
  7242  1705                     __end_of_I2C1_Stop:	
  7243                           
  7244                           	psect	text33
  7245  16F3                     __ptext33:	
  7246 ;; *************** function _I2C1_Start *****************
  7247 ;; Defined at:
  7248 ;;		line 31 in file "I2C_drive.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0, pclath, cstack
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7262 ;;      Params:         0       0       0       0       0
  7263 ;;      Locals:         0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0
  7265 ;;      Totals:         0       0       0       0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:    4
  7269 ;; This function calls:
  7270 ;;		_I2C_Wait
  7271 ;; This function is called by:
  7272 ;;		_EEPROM_write
  7273 ;;		_EEPROM_read
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           
  7278                           ;psect for function _I2C1_Start
  7279  16F3                     _I2C1_Start:	
  7280  16F3                     l2254:	
  7281                           ;incstack = 0
  7282 ;; hardware stack exceeded
  7283                           ; Regs used in _I2C1_Start: [wreg+status,2+status,0+pclath+cstack]
  7284                           
  7285                           
  7286                           ;I2C_drive.c: 32:     I2C_Wait();
  7287  16F3  160A  118A  2726  160A  118A  	fcall	_I2C_Wait
  7288  16F8                     l2256:	
  7289                           
  7290                           ;I2C_drive.c: 33:     (SSPCON2 |= (1 << 0));
  7291  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  7292  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  7293  16FA  1411               	bsf	17,0	;volatile
  7294  16FB                     l89:	
  7295  16FB  0008               	return
  7296  16FC                     __end_of_I2C1_Start:	
  7297                           
  7298                           	psect	text34
  7299  1726                     __ptext34:	
  7300 ;; *************** function _I2C_Wait *****************
  7301 ;; Defined at:
  7302 ;;		line 8 in file "I2C_drive.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;		None
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      void 
  7309 ;; Registers used:
  7310 ;;		wreg, status,2
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7316 ;;      Params:         0       0       0       0       0
  7317 ;;      Locals:         0       0       0       0       0
  7318 ;;      Temps:          0       0       0       0       0
  7319 ;;      Totals:         0       0       0       0       0
  7320 ;;Total ram usage:        0 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:    3
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_I2C1_Start
  7327 ;;		_I2C1_Stop
  7328 ;;		_I2C1_Wr
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           
  7333                           ;psect for function _I2C_Wait
  7334  1726                     _I2C_Wait:	
  7335  1726                     l2250:	
  7336                           ;incstack = 0
  7337 ;; hardware stack exceeded
  7338                           ; Regs used in _I2C_Wait: [wreg+status,2]
  7339                           
  7340  1726                     l80:	
  7341                           ;I2C_drive.c: 9:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7342                           
  7343  1726  1683               	bsf	3,5	;RP0=1, select bank1
  7344  1727  1303               	bcf	3,6	;RP1=0, select bank1
  7345  1728  1914               	btfsc	20,2	;volatile
  7346  1729  2F2B               	goto	u1731
  7347  172A  2F2C               	goto	u1730
  7348  172B                     u1731:	
  7349  172B  2F26               	goto	l80
  7350  172C                     u1730:	
  7351  172C                     l2252:	
  7352  172C  0811               	movf	17,w	;volatile
  7353  172D  391F               	andlw	31
  7354  172E  1D03               	btfss	3,2
  7355  172F  2F31               	goto	u1741
  7356  1730  2F32               	goto	u1740
  7357  1731                     u1741:	
  7358  1731  2F26               	goto	l80
  7359  1732                     u1740:	
  7360  1732                     l83:	
  7361  1732  0008               	return
  7362  1733                     __end_of_I2C_Wait:	
  7363                           
  7364                           	psect	text35
  7365  1733                     __ptext35:	
  7366 ;; *************** function _I2C1_Rd *****************
  7367 ;; Defined at:
  7368 ;;		line 62 in file "I2C_drive.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;		None
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      unsigned char 
  7375 ;; Registers used:
  7376 ;;		wreg
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7382 ;;      Params:         0       0       0       0       0
  7383 ;;      Locals:         0       0       0       0       0
  7384 ;;      Temps:          0       0       0       0       0
  7385 ;;      Totals:         0       0       0       0       0
  7386 ;;Total ram usage:        0 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:    3
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_EEPROM_read
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           
  7397                           ;psect for function _I2C1_Rd
  7398  1733                     _I2C1_Rd:	
  7399  1733                     l2268:	
  7400                           ;incstack = 0
  7401                           ; Regs used in _I2C1_Rd: [wreg]
  7402                           
  7403                           
  7404                           ;I2C_drive.c: 63:     SSPIF = 0;
  7405  1733  1283               	bcf	3,5	;RP0=0, select bank0
  7406  1734  1303               	bcf	3,6	;RP1=0, select bank0
  7407  1735  118C               	bcf	12,3	;volatile
  7408                           
  7409                           ;I2C_drive.c: 64:     (SSPCON2 |= (1 << 3));
  7410  1736  1683               	bsf	3,5	;RP0=1, select bank1
  7411  1737  1303               	bcf	3,6	;RP1=0, select bank1
  7412  1738  1591               	bsf	17,3	;volatile
  7413  1739                     l98:	
  7414                           ;I2C_drive.c: 65:     while(!SSPIF);
  7415                           
  7416  1739  1283               	bcf	3,5	;RP0=0, select bank0
  7417  173A  1D8C               	btfss	12,3	;volatile
  7418  173B  2F3D               	goto	u1751
  7419  173C  2F3E               	goto	u1750
  7420  173D                     u1751:	
  7421  173D  2F39               	goto	l98
  7422  173E                     u1750:	
  7423  173E                     l100:	
  7424                           
  7425                           ;I2C_drive.c: 66:     SSPIF = 0;
  7426  173E  118C               	bcf	12,3	;volatile
  7427  173F                     l2270:	
  7428                           
  7429                           ;I2C_drive.c: 67:     return SSPBUF;
  7430  173F  0813               	movf	19,w	;volatile
  7431  1740                     l101:	
  7432  1740  0008               	return
  7433  1741                     __end_of_I2C1_Rd:	
  7434                           
  7435                           	psect	text36
  7436  0003                     __ptext36:	
  7437 ;; *************** function _SCH_Report_Status *****************
  7438 ;; Defined at:
  7439 ;;		line 248 in file "Sch_16f.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;		None
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      void 
  7446 ;; Registers used:
  7447 ;;		None
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7453 ;;      Params:         0       0       0       0       0
  7454 ;;      Locals:         0       0       0       0       0
  7455 ;;      Temps:          0       0       0       0       0
  7456 ;;      Totals:         0       0       0       0       0
  7457 ;;Total ram usage:        0 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:    3
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_SCH_Dispatch_Tasks
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           
  7468                           ;psect for function _SCH_Report_Status
  7469  0003                     _SCH_Report_Status:	
  7470  0003                     l414:	
  7471                           ;incstack = 0
  7472                           ; Regs used in _SCH_Report_Status: []
  7473                           
  7474  0003  0008               	return
  7475  0004                     __end_of_SCH_Report_Status:	
  7476                           
  7477                           	psect	text37
  7478  16E2                     __ptext37:	
  7479 ;; *************** function _SCH_Go_To_Sleep *****************
  7480 ;; Defined at:
  7481 ;;		line 179 in file "Sch_16f.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;		None
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		None
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7495 ;;      Params:         0       0       0       0       0
  7496 ;;      Locals:         0       0       0       0       0
  7497 ;;      Temps:          0       0       0       0       0
  7498 ;;      Totals:         0       0       0       0       0
  7499 ;;Total ram usage:        0 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    3
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		_SCH_Dispatch_Tasks
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           
  7510                           ;psect for function _SCH_Go_To_Sleep
  7511  16E2                     _SCH_Go_To_Sleep:	
  7512  16E2                     l3162:	
  7513                           ;incstack = 0
  7514                           ; Regs used in _SCH_Go_To_Sleep: []
  7515                           
  7516  16E2  0063               	sleep	;# 
  7517  16E3                     l399:	
  7518  16E3  0008               	return
  7519  16E4                     __end_of_SCH_Go_To_Sleep:	
  7520                           
  7521                           	psect	text38
  7522  0B18                     __ptext38:	
  7523 ;; *************** function _SCH_Delete_Task *****************
  7524 ;; Defined at:
  7525 ;;		line 221 in file "Sch_16f.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  TASK_INDEX      1    wreg     const unsigned char 
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;  TASK_INDEX      1   14[BANK0 ] const unsigned char 
  7530 ;;  Return_code     1    0        unsigned char 
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      unsigned char 
  7533 ;; Registers used:
  7534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7540 ;;      Params:         0       0       0       0       0
  7541 ;;      Locals:         0       2       0       0       0
  7542 ;;      Temps:          0       1       0       0       0
  7543 ;;      Totals:         0       3       0       0       0
  7544 ;;Total ram usage:        3 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:    4
  7547 ;; This function calls:
  7548 ;;		___bmul
  7549 ;; This function is called by:
  7550 ;;		_SCH_Init
  7551 ;;		_SCH_Dispatch_Tasks
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function _SCH_Delete_Task
  7557  0B18                     _SCH_Delete_Task:	
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in _SCH_Delete_Task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7561                           ;SCH_Delete_Task@TASK_INDEX stored from wreg
  7562  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  7563  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  7564  0B1A  00AE               	movwf	SCH_Delete_Task@TASK_INDEX
  7565  0B1B                     l3144:	
  7566                           
  7567                           ;Sch_16f.c: 221: tByte SCH_Delete_Task(const tByte TASK_INDEX);Sch_16f.c: 222: {;Sch_16f
      +                          .c: 223:     tByte Return_code;;Sch_16f.c: 224:     if (SCH_tasks_G[TASK_INDEX].pTask ==
      +                           0)
  7568  0B1B  3006               	movlw	6
  7569  0B1C  00AC               	movwf	??_SCH_Delete_Task
  7570  0B1D  082C               	movf	??_SCH_Delete_Task,w
  7571  0B1E  00A8               	movwf	___bmul@multiplicand
  7572  0B1F  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7573  0B20  120A  158A  2005  120A  158A  	fcall	___bmul
  7574  0B25  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  7575  0B26  0084               	movwf	4
  7576  0B27  1383               	bcf	3,7	;select IRP bank1
  7577  0B28  0800               	movf	0,w
  7578  0B29  1D03               	btfss	3,2
  7579  0B2A  2B2C               	goto	u3281
  7580  0B2B  2B2D               	goto	u3280
  7581  0B2C                     u3281:	
  7582  0B2C  2B36               	goto	l3150
  7583  0B2D                     u3280:	
  7584  0B2D                     l3146:	
  7585                           
  7586                           ;Sch_16f.c: 225:     {;Sch_16f.c: 229:         Error_code_G = (2);
  7587  0B2D  3002               	movlw	2
  7588  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  7589  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  7590  0B30  00AC               	movwf	??_SCH_Delete_Task
  7591  0B31  082C               	movf	??_SCH_Delete_Task,w
  7592  0B32  1683               	bsf	3,5	;RP0=1, select bank1
  7593  0B33  1303               	bcf	3,6	;RP1=0, select bank1
  7594  0B34  00D6               	movwf	_Error_code_G^(0+128)
  7595  0B35                     l3148:	
  7596                           
  7597                           ;Sch_16f.c: 231:     }
  7598  0B35  2B36               	goto	l3152
  7599  0B36                     l3150:	
  7600  0B36                     l3152:	
  7601                           
  7602                           ;Sch_16f.c: 236:     SCH_tasks_G[TASK_INDEX].pTask = 0x0000;
  7603  0B36  3006               	movlw	6
  7604  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  7605  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  7606  0B39  00AC               	movwf	??_SCH_Delete_Task
  7607  0B3A  082C               	movf	??_SCH_Delete_Task,w
  7608  0B3B  00A8               	movwf	___bmul@multiplicand
  7609  0B3C  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7610  0B3D  120A  158A  2005  120A  158A  	fcall	___bmul
  7611  0B42  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  7612  0B43  0084               	movwf	4
  7613  0B44  1383               	bcf	3,7	;select IRP bank1
  7614  0B45  0180               	clrf	0
  7615  0B46                     l3154:	
  7616                           
  7617                           ;Sch_16f.c: 237:     SCH_tasks_G[TASK_INDEX].Delay = 0;
  7618  0B46  3006               	movlw	6
  7619  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  7620  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  7621  0B49  00AC               	movwf	??_SCH_Delete_Task
  7622  0B4A  082C               	movf	??_SCH_Delete_Task,w
  7623  0B4B  00A8               	movwf	___bmul@multiplicand
  7624  0B4C  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7625  0B4D  120A  158A  2005  120A  158A  	fcall	___bmul
  7626  0B52  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  7627  0B53  0084               	movwf	4
  7628  0B54  1383               	bcf	3,7	;select IRP bank1
  7629  0B55  0180               	clrf	0
  7630  0B56  0A84               	incf	4,f
  7631  0B57  0180               	clrf	0
  7632  0B58                     l3156:	
  7633                           
  7634                           ;Sch_16f.c: 238:     SCH_tasks_G[TASK_INDEX].Period = 0;
  7635  0B58  3006               	movlw	6
  7636  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  7637  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  7638  0B5B  00AC               	movwf	??_SCH_Delete_Task
  7639  0B5C  082C               	movf	??_SCH_Delete_Task,w
  7640  0B5D  00A8               	movwf	___bmul@multiplicand
  7641  0B5E  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7642  0B5F  120A  158A  2005  120A  158A  	fcall	___bmul
  7643  0B64  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  7644  0B65  0084               	movwf	4
  7645  0B66  1383               	bcf	3,7	;select IRP bank1
  7646  0B67  0180               	clrf	0
  7647  0B68  0A84               	incf	4,f
  7648  0B69  0180               	clrf	0
  7649  0B6A                     l3158:	
  7650                           
  7651                           ;Sch_16f.c: 239:     SCH_tasks_G[TASK_INDEX].RunMe = 0;
  7652  0B6A  3006               	movlw	6
  7653  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  7654  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  7655  0B6D  00AC               	movwf	??_SCH_Delete_Task
  7656  0B6E  082C               	movf	??_SCH_Delete_Task,w
  7657  0B6F  00A8               	movwf	___bmul@multiplicand
  7658  0B70  082E               	movf	SCH_Delete_Task@TASK_INDEX,w
  7659  0B71  120A  158A  2005  120A  158A  	fcall	___bmul
  7660  0B76  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  7661  0B77  0084               	movwf	4
  7662  0B78  1383               	bcf	3,7	;select IRP bank1
  7663  0B79  0180               	clrf	0
  7664  0B7A                     l411:	
  7665  0B7A  0008               	return
  7666  0B7B                     __end_of_SCH_Delete_Task:	
  7667                           
  7668                           	psect	text39
  7669  0CAF                     __ptext39:	
  7670 ;; *************** function _SCH_Add_Task *****************
  7671 ;; Defined at:
  7672 ;;		line 146 in file "Sch_16f.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  pFunction       1    wreg     PTR FTN()void 
  7675 ;;		 -> ssd_blink(1), switch_scan(1), temp_set(1), led(1), 
  7676 ;;		 -> ssd_update(1), temp_sensor_read(1), get_set_temp(1), 
  7677 ;;  DELAY           2   12[BANK0 ] const unsigned int 
  7678 ;;  PERIOD          2   14[BANK0 ] const unsigned int 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;  pFunction       1   18[BANK0 ] PTR FTN()void 
  7681 ;;		 -> ssd_blink(1), switch_scan(1), temp_set(1), led(1), 
  7682 ;;		 -> ssd_update(1), temp_sensor_read(1), get_set_temp(1), 
  7683 ;;  Index           1   19[BANK0 ] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      unsigned char 
  7686 ;; Registers used:
  7687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7693 ;;      Params:         0       4       0       0       0
  7694 ;;      Locals:         0       2       0       0       0
  7695 ;;      Temps:          0       2       0       0       0
  7696 ;;      Totals:         0       8       0       0       0
  7697 ;;Total ram usage:        8 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    4
  7700 ;; This function calls:
  7701 ;;		___bmul
  7702 ;; This function is called by:
  7703 ;;		_main
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           
  7708                           ;psect for function _SCH_Add_Task
  7709  0CAF                     _SCH_Add_Task:	
  7710                           
  7711                           ;incstack = 0
  7712                           ; Regs used in _SCH_Add_Task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7713                           ;SCH_Add_Task@pFunction stored from wreg
  7714  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  7715  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  7716  0CB1  00B2               	movwf	SCH_Add_Task@pFunction
  7717  0CB2                     l3228:	
  7718                           
  7719                           ;Sch_16f.c: 146: tByte SCH_Add_Task(void (* pFunction)(),;Sch_16f.c: 147:     const tWor
      +                          d DELAY,;Sch_16f.c: 148:     const tWord PERIOD);Sch_16f.c: 149:     {;Sch_16f.c: 150:  
      +                             tByte Index = 0;
  7720  0CB2  01B3               	clrf	SCH_Add_Task@Index
  7721                           
  7722                           ;Sch_16f.c: 152:     while ((SCH_tasks_G[Index].pTask != 0) && (Index < (8)))
  7723  0CB3  2CB8               	goto	l3232
  7724  0CB4                     l3230:	
  7725                           
  7726                           ;Sch_16f.c: 153:     {;Sch_16f.c: 154:         Index++;
  7727  0CB4  3001               	movlw	1
  7728  0CB5  00B0               	movwf	??_SCH_Add_Task
  7729  0CB6  0830               	movf	??_SCH_Add_Task,w
  7730  0CB7  07B3               	addwf	SCH_Add_Task@Index,f
  7731  0CB8                     l3232:	
  7732                           
  7733                           ;Sch_16f.c: 152:     while ((SCH_tasks_G[Index].pTask != 0) && (Index < (8)))
  7734  0CB8  3006               	movlw	6
  7735  0CB9  00B0               	movwf	??_SCH_Add_Task
  7736  0CBA  0830               	movf	??_SCH_Add_Task,w
  7737  0CBB  00A8               	movwf	___bmul@multiplicand
  7738  0CBC  0833               	movf	SCH_Add_Task@Index,w
  7739  0CBD  120A  158A  2005  120A  158A  	fcall	___bmul
  7740  0CC2  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  7741  0CC3  0084               	movwf	4
  7742  0CC4  1383               	bcf	3,7	;select IRP bank1
  7743  0CC5  0800               	movf	0,w
  7744  0CC6  1903               	btfsc	3,2
  7745  0CC7  2CC9               	goto	u3321
  7746  0CC8  2CCA               	goto	u3320
  7747  0CC9                     u3321:	
  7748  0CC9  2CD2               	goto	l3236
  7749  0CCA                     u3320:	
  7750  0CCA                     l3234:	
  7751  0CCA  3008               	movlw	8
  7752  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  7753  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  7754  0CCD  0233               	subwf	SCH_Add_Task@Index,w
  7755  0CCE  1C03               	skipc
  7756  0CCF  2CD1               	goto	u3331
  7757  0CD0  2CD2               	goto	u3330
  7758  0CD1                     u3331:	
  7759  0CD1  2CB4               	goto	l3230
  7760  0CD2                     u3330:	
  7761  0CD2                     l3236:	
  7762                           
  7763                           ;Sch_16f.c: 157:     if (Index == (8))
  7764  0CD2  3008               	movlw	8
  7765  0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  7766  0CD4  1303               	bcf	3,6	;RP1=0, select bank0
  7767  0CD5  0633               	xorwf	SCH_Add_Task@Index,w
  7768  0CD6  1D03               	btfss	3,2
  7769  0CD7  2CD9               	goto	u3341
  7770  0CD8  2CDA               	goto	u3340
  7771  0CD9                     u3341:	
  7772  0CD9  2CDB               	goto	l3240
  7773  0CDA                     u3340:	
  7774  0CDA  2D24               	goto	l396
  7775  0CDB                     l3240:	
  7776                           
  7777                           ;Sch_16f.c: 167:     SCH_tasks_G[Index].pTask = pFunction;
  7778  0CDB  0832               	movf	SCH_Add_Task@pFunction,w
  7779  0CDC  00B0               	movwf	??_SCH_Add_Task
  7780  0CDD  3006               	movlw	6
  7781  0CDE  00B1               	movwf	??_SCH_Add_Task+1
  7782  0CDF  0831               	movf	??_SCH_Add_Task+1,w
  7783  0CE0  00A8               	movwf	___bmul@multiplicand
  7784  0CE1  0833               	movf	SCH_Add_Task@Index,w
  7785  0CE2  120A  158A  2005  120A  158A  	fcall	___bmul
  7786  0CE7  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  7787  0CE8  0084               	movwf	4
  7788  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  7789  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  7790  0CEB  0830               	movf	??_SCH_Add_Task,w
  7791  0CEC  1383               	bcf	3,7	;select IRP bank1
  7792  0CED  0080               	movwf	0
  7793                           
  7794                           ;Sch_16f.c: 168:     SCH_tasks_G[Index].Delay = DELAY;
  7795  0CEE  3006               	movlw	6
  7796  0CEF  00B0               	movwf	??_SCH_Add_Task
  7797  0CF0  0830               	movf	??_SCH_Add_Task,w
  7798  0CF1  00A8               	movwf	___bmul@multiplicand
  7799  0CF2  0833               	movf	SCH_Add_Task@Index,w
  7800  0CF3  120A  158A  2005  120A  158A  	fcall	___bmul
  7801  0CF8  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  7802  0CF9  0084               	movwf	4
  7803  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  7804  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  7805  0CFC  082C               	movf	SCH_Add_Task@DELAY,w
  7806  0CFD  1383               	bcf	3,7	;select IRP bank1
  7807  0CFE  0080               	movwf	0
  7808  0CFF  0A84               	incf	4,f
  7809  0D00  082D               	movf	SCH_Add_Task@DELAY+1,w
  7810  0D01  0080               	movwf	0
  7811                           
  7812                           ;Sch_16f.c: 169:     SCH_tasks_G[Index].Period = PERIOD;
  7813  0D02  3006               	movlw	6
  7814  0D03  00B0               	movwf	??_SCH_Add_Task
  7815  0D04  0830               	movf	??_SCH_Add_Task,w
  7816  0D05  00A8               	movwf	___bmul@multiplicand
  7817  0D06  0833               	movf	SCH_Add_Task@Index,w
  7818  0D07  120A  158A  2005  120A  158A  	fcall	___bmul
  7819  0D0C  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  7820  0D0D  0084               	movwf	4
  7821  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  7822  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  7823  0D10  082E               	movf	SCH_Add_Task@PERIOD,w
  7824  0D11  1383               	bcf	3,7	;select IRP bank1
  7825  0D12  0080               	movwf	0
  7826  0D13  0A84               	incf	4,f
  7827  0D14  082F               	movf	SCH_Add_Task@PERIOD+1,w
  7828  0D15  0080               	movwf	0
  7829                           
  7830                           ;Sch_16f.c: 170:     SCH_tasks_G[Index].RunMe = 0;
  7831  0D16  3006               	movlw	6
  7832  0D17  00B0               	movwf	??_SCH_Add_Task
  7833  0D18  0830               	movf	??_SCH_Add_Task,w
  7834  0D19  00A8               	movwf	___bmul@multiplicand
  7835  0D1A  0833               	movf	SCH_Add_Task@Index,w
  7836  0D1B  120A  158A  2005  120A  158A  	fcall	___bmul
  7837  0D20  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  7838  0D21  0084               	movwf	4
  7839  0D22  1383               	bcf	3,7	;select IRP bank1
  7840  0D23  0180               	clrf	0
  7841  0D24                     l396:	
  7842  0D24  0008               	return
  7843  0D25                     __end_of_SCH_Add_Task:	
  7844                           
  7845                           	psect	text40
  7846  0805                     __ptext40:	
  7847 ;; *************** function ___bmul *****************
  7848 ;; Defined at:
  7849 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  multiplier      1    wreg     unsigned char 
  7852 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  multiplier      1   11[BANK0 ] unsigned char 
  7855 ;;  product         1   10[BANK0 ] unsigned char 
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      unsigned char 
  7858 ;; Registers used:
  7859 ;;		wreg, status,2, status,0
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7865 ;;      Params:         0       1       0       0       0
  7866 ;;      Locals:         0       2       0       0       0
  7867 ;;      Temps:          0       1       0       0       0
  7868 ;;      Totals:         0       4       0       0       0
  7869 ;;Total ram usage:        4 bytes
  7870 ;; Hardware stack levels used:    1
  7871 ;; Hardware stack levels required when called:    3
  7872 ;; This function calls:
  7873 ;;		Nothing
  7874 ;; This function is called by:
  7875 ;;		_SCH_Update
  7876 ;;		_SCH_Stop
  7877 ;;		_SCH_Add_Task
  7878 ;;		_SCH_Dispatch_Tasks
  7879 ;;		_SCH_Delete_Task
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           
  7884                           ;psect for function ___bmul
  7885  0805                     ___bmul:	
  7886                           
  7887                           ;incstack = 0
  7888                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7889                           ;___bmul@multiplier stored from wreg
  7890  0805  1283               	bcf	3,5	;RP0=0, select bank0
  7891  0806  1303               	bcf	3,6	;RP1=0, select bank0
  7892  0807  00AB               	movwf	___bmul@multiplier
  7893  0808                     l2528:	
  7894  0808  01AA               	clrf	___bmul@product
  7895  0809                     l2530:	
  7896  0809  1C2B               	btfss	___bmul@multiplier,0
  7897  080A  280C               	goto	u1961
  7898  080B  280D               	goto	u1960
  7899  080C                     u1961:	
  7900  080C  2811               	goto	l2534
  7901  080D                     u1960:	
  7902  080D                     l2532:	
  7903  080D  0828               	movf	___bmul@multiplicand,w
  7904  080E  00A9               	movwf	??___bmul
  7905  080F  0829               	movf	??___bmul,w
  7906  0810  07AA               	addwf	___bmul@product,f
  7907  0811                     l2534:	
  7908  0811  1003               	clrc
  7909  0812  0DA8               	rlf	___bmul@multiplicand,f
  7910  0813                     l2536:	
  7911  0813  1003               	clrc
  7912  0814  0CAB               	rrf	___bmul@multiplier,f
  7913  0815  082B               	movf	___bmul@multiplier,w
  7914  0816  1D03               	btfss	3,2
  7915  0817  2819               	goto	u1971
  7916  0818  281A               	goto	u1970
  7917  0819                     u1971:	
  7918  0819  2809               	goto	l2530
  7919  081A                     u1970:	
  7920  081A                     l2538:	
  7921  081A  082A               	movf	___bmul@product,w
  7922  081B                     l526:	
  7923  081B  0008               	return
  7924  081C                     __end_of___bmul:	
  7925                           
  7926                           	psect	text41
  7927  175F                     __ptext41:	
  7928 ;; *************** function _EEPROM_init *****************
  7929 ;; Defined at:
  7930 ;;		line 9 in file "eeprom.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;		None
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      void 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0, pclath, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7944 ;;      Params:         0       0       0       0       0
  7945 ;;      Locals:         0       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0
  7947 ;;      Totals:         0       0       0       0       0
  7948 ;;Total ram usage:        0 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    5
  7951 ;; This function calls:
  7952 ;;		_I2C1_Init
  7953 ;; This function is called by:
  7954 ;;		_main
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           
  7959                           ;psect for function _EEPROM_init
  7960  175F                     _EEPROM_init:	
  7961  175F                     l3196:	
  7962                           ;incstack = 0
  7963                           ; Regs used in _EEPROM_init: [wreg+status,2+status,0+pclath+cstack]
  7964                           
  7965                           
  7966                           ;eeprom.c: 10:      I2C1_Init(100000);
  7967  175F  3000               	movlw	0
  7968  1760  1283               	bcf	3,5	;RP0=0, select bank0
  7969  1761  1303               	bcf	3,6	;RP1=0, select bank0
  7970  1762  00B9               	movwf	I2C1_Init@freq+3
  7971  1763  3001               	movlw	1
  7972  1764  00B8               	movwf	I2C1_Init@freq+2
  7973  1765  3086               	movlw	134
  7974  1766  00B7               	movwf	I2C1_Init@freq+1
  7975  1767  30A0               	movlw	160
  7976  1768  00B6               	movwf	I2C1_Init@freq
  7977  1769  120A  158A  216E  160A  118A  	fcall	_I2C1_Init
  7978  176E                     l116:	
  7979  176E  0008               	return
  7980  176F                     __end_of_EEPROM_init:	
  7981                           
  7982                           	psect	text42
  7983  096E                     __ptext42:	
  7984 ;; *************** function _I2C1_Init *****************
  7985 ;; Defined at:
  7986 ;;		line 17 in file "I2C_drive.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  freq            4   22[BANK0 ] unsigned long 
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;		None
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  1    wreg      void 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0, pclath, cstack
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8000 ;;      Params:         0       4       0       0       0
  8001 ;;      Locals:         0       0       0       0       0
  8002 ;;      Temps:          0       4       0       0       0
  8003 ;;      Totals:         0       8       0       0       0
  8004 ;;Total ram usage:        8 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    4
  8007 ;; This function calls:
  8008 ;;		___lldiv
  8009 ;; This function is called by:
  8010 ;;		_EEPROM_init
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           
  8015                           ;psect for function _I2C1_Init
  8016  096E                     _I2C1_Init:	
  8017  096E                     l3016:	
  8018                           ;incstack = 0
  8019                           ; Regs used in _I2C1_Init: [wreg+status,2+status,0+pclath+cstack]
  8020                           
  8021                           
  8022                           ;I2C_drive.c: 18:     (SSPCON |= (1 << 5));
  8023  096E  1283               	bcf	3,5	;RP0=0, select bank0
  8024  096F  1303               	bcf	3,6	;RP1=0, select bank0
  8025  0970  1694               	bsf	20,5	;volatile
  8026                           
  8027                           ;I2C_drive.c: 19:     (SSPCON |= (1 << 3));
  8028  0971  1594               	bsf	20,3	;volatile
  8029  0972                     l3018:	
  8030                           
  8031                           ;I2C_drive.c: 20:     SSPADD = (8000000 / (freq * 4) ) - 1 ;
  8032  0972  0836               	movf	I2C1_Init@freq,w
  8033  0973  00BA               	movwf	??_I2C1_Init
  8034  0974  0837               	movf	I2C1_Init@freq+1,w
  8035  0975  00BB               	movwf	??_I2C1_Init+1
  8036  0976  0838               	movf	I2C1_Init@freq+2,w
  8037  0977  00BC               	movwf	??_I2C1_Init+2
  8038  0978  0839               	movf	I2C1_Init@freq+3,w
  8039  0979  00BD               	movwf	??_I2C1_Init+3
  8040  097A  3002               	movlw	2
  8041  097B                     u3145:	
  8042  097B  1003               	clrc
  8043  097C  0DBA               	rlf	??_I2C1_Init,f
  8044  097D  0DBB               	rlf	??_I2C1_Init+1,f
  8045  097E  0DBC               	rlf	??_I2C1_Init+2,f
  8046  097F  0DBD               	rlf	??_I2C1_Init+3,f
  8047  0980                     u3140:	
  8048  0980  3EFF               	addlw	-1
  8049  0981  1D03               	skipz
  8050  0982  297B               	goto	u3145
  8051  0983  083D               	movf	??_I2C1_Init+3,w
  8052  0984  00AB               	movwf	___lldiv@divisor+3
  8053  0985  083C               	movf	??_I2C1_Init+2,w
  8054  0986  00AA               	movwf	___lldiv@divisor+2
  8055  0987  083B               	movf	??_I2C1_Init+1,w
  8056  0988  00A9               	movwf	___lldiv@divisor+1
  8057  0989  083A               	movf	??_I2C1_Init,w
  8058  098A  00A8               	movwf	___lldiv@divisor
  8059  098B  3000               	movlw	0
  8060  098C  00AF               	movwf	___lldiv@dividend+3
  8061  098D  307A               	movlw	122
  8062  098E  00AE               	movwf	___lldiv@dividend+2
  8063  098F  3012               	movlw	18
  8064  0990  00AD               	movwf	___lldiv@dividend+1
  8065  0991  3000               	movlw	0
  8066  0992  00AC               	movwf	___lldiv@dividend
  8067  0993  120A  158A  23DE  120A  158A  	fcall	___lldiv
  8068  0998  1283               	bcf	3,5	;RP0=0, select bank0
  8069  0999  1303               	bcf	3,6	;RP1=0, select bank0
  8070  099A  0828               	movf	?___lldiv,w
  8071  099B  3EFF               	addlw	255
  8072  099C  1683               	bsf	3,5	;RP0=1, select bank1
  8073  099D  1303               	bcf	3,6	;RP1=0, select bank1
  8074  099E  0093               	movwf	19	;volatile
  8075  099F                     l3020:	
  8076                           
  8077                           ;I2C_drive.c: 22:     TRISC |= (1 << 3);
  8078  099F  1587               	bsf	7,3	;volatile
  8079  09A0                     l3022:	
  8080                           
  8081                           ;I2C_drive.c: 23:     TRISC |= (1 << 4);
  8082  09A0  1607               	bsf	7,4	;volatile
  8083  09A1                     l86:	
  8084  09A1  0008               	return
  8085  09A2                     __end_of_I2C1_Init:	
  8086                           
  8087                           	psect	text43
  8088  0BDE                     __ptext43:	
  8089 ;; *************** function ___lldiv *****************
  8090 ;; Defined at:
  8091 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  divisor         4    8[BANK0 ] unsigned long 
  8094 ;;  dividend        4   12[BANK0 ] unsigned long 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;  quotient        4   17[BANK0 ] unsigned long 
  8097 ;;  counter         1   21[BANK0 ] unsigned char 
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  4    8[BANK0 ] unsigned long 
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, status,0
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8107 ;;      Params:         0       8       0       0       0
  8108 ;;      Locals:         0       5       0       0       0
  8109 ;;      Temps:          0       1       0       0       0
  8110 ;;      Totals:         0      14       0       0       0
  8111 ;;Total ram usage:       14 bytes
  8112 ;; Hardware stack levels used:    1
  8113 ;; Hardware stack levels required when called:    3
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_I2C1_Init
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           
  8122                           ;psect for function ___lldiv
  8123  0BDE                     ___lldiv:	
  8124  0BDE                     l2542:	
  8125                           ;incstack = 0
  8126                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8127                           
  8128  0BDE  3000               	movlw	0
  8129  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  8130  0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  8131  0BE1  00B4               	movwf	___lldiv@quotient+3
  8132  0BE2  3000               	movlw	0
  8133  0BE3  00B3               	movwf	___lldiv@quotient+2
  8134  0BE4  3000               	movlw	0
  8135  0BE5  00B2               	movwf	___lldiv@quotient+1
  8136  0BE6  3000               	movlw	0
  8137  0BE7  00B1               	movwf	___lldiv@quotient
  8138  0BE8  082B               	movf	___lldiv@divisor+3,w
  8139  0BE9  042A               	iorwf	___lldiv@divisor+2,w
  8140  0BEA  0429               	iorwf	___lldiv@divisor+1,w
  8141  0BEB  0428               	iorwf	___lldiv@divisor,w
  8142  0BEC  1903               	skipnz
  8143  0BED  2BEF               	goto	u1981
  8144  0BEE  2BF0               	goto	u1980
  8145  0BEF                     u1981:	
  8146  0BEF  2C3D               	goto	l2562
  8147  0BF0                     u1980:	
  8148  0BF0                     l2544:	
  8149  0BF0  01B5               	clrf	___lldiv@counter
  8150  0BF1  0AB5               	incf	___lldiv@counter,f
  8151  0BF2  2C00               	goto	l2548
  8152  0BF3                     l2546:	
  8153  0BF3  3001               	movlw	1
  8154  0BF4  00B0               	movwf	??___lldiv
  8155  0BF5                     u1995:	
  8156  0BF5  1003               	clrc
  8157  0BF6  0DA8               	rlf	___lldiv@divisor,f
  8158  0BF7  0DA9               	rlf	___lldiv@divisor+1,f
  8159  0BF8  0DAA               	rlf	___lldiv@divisor+2,f
  8160  0BF9  0DAB               	rlf	___lldiv@divisor+3,f
  8161  0BFA  0BB0               	decfsz	??___lldiv,f
  8162  0BFB  2BF5               	goto	u1995
  8163  0BFC  3001               	movlw	1
  8164  0BFD  00B0               	movwf	??___lldiv
  8165  0BFE  0830               	movf	??___lldiv,w
  8166  0BFF  07B5               	addwf	___lldiv@counter,f
  8167  0C00                     l2548:	
  8168  0C00  1FAB               	btfss	___lldiv@divisor+3,7
  8169  0C01  2C03               	goto	u2001
  8170  0C02  2C04               	goto	u2000
  8171  0C03                     u2001:	
  8172  0C03  2BF3               	goto	l2546
  8173  0C04                     u2000:	
  8174  0C04                     l2550:	
  8175  0C04  3001               	movlw	1
  8176  0C05  00B0               	movwf	??___lldiv
  8177  0C06                     u2015:	
  8178  0C06  1003               	clrc
  8179  0C07  0DB1               	rlf	___lldiv@quotient,f
  8180  0C08  0DB2               	rlf	___lldiv@quotient+1,f
  8181  0C09  0DB3               	rlf	___lldiv@quotient+2,f
  8182  0C0A  0DB4               	rlf	___lldiv@quotient+3,f
  8183  0C0B  0BB0               	decfsz	??___lldiv,f
  8184  0C0C  2C06               	goto	u2015
  8185  0C0D                     l2552:	
  8186  0C0D  082B               	movf	___lldiv@divisor+3,w
  8187  0C0E  022F               	subwf	___lldiv@dividend+3,w
  8188  0C0F  1D03               	skipz
  8189  0C10  2C1B               	goto	u2025
  8190  0C11  082A               	movf	___lldiv@divisor+2,w
  8191  0C12  022E               	subwf	___lldiv@dividend+2,w
  8192  0C13  1D03               	skipz
  8193  0C14  2C1B               	goto	u2025
  8194  0C15  0829               	movf	___lldiv@divisor+1,w
  8195  0C16  022D               	subwf	___lldiv@dividend+1,w
  8196  0C17  1D03               	skipz
  8197  0C18  2C1B               	goto	u2025
  8198  0C19  0828               	movf	___lldiv@divisor,w
  8199  0C1A  022C               	subwf	___lldiv@dividend,w
  8200  0C1B                     u2025:	
  8201  0C1B  1C03               	skipc
  8202  0C1C  2C1E               	goto	u2021
  8203  0C1D  2C1F               	goto	u2020
  8204  0C1E                     u2021:	
  8205  0C1E  2C2E               	goto	l2558
  8206  0C1F                     u2020:	
  8207  0C1F                     l2554:	
  8208  0C1F  0828               	movf	___lldiv@divisor,w
  8209  0C20  02AC               	subwf	___lldiv@dividend,f
  8210  0C21  0829               	movf	___lldiv@divisor+1,w
  8211  0C22  1C03               	skipc
  8212  0C23  0F29               	incfsz	___lldiv@divisor+1,w
  8213  0C24  02AD               	subwf	___lldiv@dividend+1,f
  8214  0C25  082A               	movf	___lldiv@divisor+2,w
  8215  0C26  1C03               	skipc
  8216  0C27  0F2A               	incfsz	___lldiv@divisor+2,w
  8217  0C28  02AE               	subwf	___lldiv@dividend+2,f
  8218  0C29  082B               	movf	___lldiv@divisor+3,w
  8219  0C2A  1C03               	skipc
  8220  0C2B  0F2B               	incfsz	___lldiv@divisor+3,w
  8221  0C2C  02AF               	subwf	___lldiv@dividend+3,f
  8222  0C2D                     l2556:	
  8223  0C2D  1431               	bsf	___lldiv@quotient,0
  8224  0C2E                     l2558:	
  8225  0C2E  3001               	movlw	1
  8226  0C2F                     u2035:	
  8227  0C2F  1003               	clrc
  8228  0C30  0CAB               	rrf	___lldiv@divisor+3,f
  8229  0C31  0CAA               	rrf	___lldiv@divisor+2,f
  8230  0C32  0CA9               	rrf	___lldiv@divisor+1,f
  8231  0C33  0CA8               	rrf	___lldiv@divisor,f
  8232  0C34  3EFF               	addlw	-1
  8233  0C35  1D03               	skipz
  8234  0C36  2C2F               	goto	u2035
  8235  0C37                     l2560:	
  8236  0C37  3001               	movlw	1
  8237  0C38  02B5               	subwf	___lldiv@counter,f
  8238  0C39  1D03               	btfss	3,2
  8239  0C3A  2C3C               	goto	u2041
  8240  0C3B  2C3D               	goto	u2040
  8241  0C3C                     u2041:	
  8242  0C3C  2C04               	goto	l2550
  8243  0C3D                     u2040:	
  8244  0C3D                     l2562:	
  8245  0C3D  0834               	movf	___lldiv@quotient+3,w
  8246  0C3E  00AB               	movwf	?___lldiv+3
  8247  0C3F  0833               	movf	___lldiv@quotient+2,w
  8248  0C40  00AA               	movwf	?___lldiv+2
  8249  0C41  0832               	movf	___lldiv@quotient+1,w
  8250  0C42  00A9               	movwf	?___lldiv+1
  8251  0C43  0831               	movf	___lldiv@quotient,w
  8252  0C44  00A8               	movwf	?___lldiv
  8253  0C45                     l536:	
  8254  0C45  0008               	return
  8255  0C46                     __end_of___lldiv:	
  8256                           
  8257                           	psect	text44
  8258  059E                     __ptext44:	
  8259 ;; *************** function _SCH_Update *****************
  8260 ;; Defined at:
  8261 ;;		line 35 in file "Sch_16f.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  Index           1   10[COMMON] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8275 ;;      Params:         0       0       0       0       0
  8276 ;;      Locals:         1       0       0       0       0
  8277 ;;      Temps:          0       8       0       0       0
  8278 ;;      Totals:         1       8       0       0       0
  8279 ;;Total ram usage:        9 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    2
  8282 ;; This function calls:
  8283 ;;		_SCH_Start
  8284 ;;		_SCH_Stop
  8285 ;;		i1___bmul
  8286 ;;		i1_ssd_turn_off
  8287 ;;		i1_temp_control_off
  8288 ;; This function is called by:
  8289 ;;		Interrupt level 1
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function _SCH_Update
  8295  059E                     _SCH_Update:	
  8296  059E                     i1l3318:	
  8297                           
  8298                           ;Sch_16f.c: 36:     if (PIR1 & (1 << 0)){
  8299  059E  1C0C               	btfss	12,0	;volatile
  8300  059F  2DA1               	goto	u339_21
  8301  05A0  2DA2               	goto	u339_20
  8302  05A1                     u339_21:	
  8303  05A1  2E50               	goto	i1l362
  8304  05A2                     u339_20:	
  8305  05A2                     i1l3320:	
  8306                           
  8307                           ;Sch_16f.c: 38:         TMR1L = timer_value ;
  8308  05A2  087B               	movf	_timer_value,w
  8309  05A3  008E               	movwf	14	;volatile
  8310  05A4                     i1l3322:	
  8311                           
  8312                           ;Sch_16f.c: 39:         TMR1H = ( timer_value >> 8 ) ;
  8313  05A4  087C               	movf	_timer_value+1,w
  8314  05A5  008F               	movwf	15	;volatile
  8315  05A6                     i1l3324:	
  8316                           
  8317                           ;Sch_16f.c: 40:         PIR1 &= ~ (1 << 0) ;
  8318  05A6  30FE               	movlw	254
  8319  05A7  00A0               	movwf	??_SCH_Update
  8320  05A8  0820               	movf	??_SCH_Update,w
  8321  05A9  058C               	andwf	12,f	;volatile
  8322  05AA                     i1l3326:	
  8323                           
  8324                           ;Sch_16f.c: 41:         tByte Index;;Sch_16f.c: 43:         for (Index = 0; Index < (8);
      +                           Index++)
  8325  05AA  01FA               	clrf	SCH_Update@Index
  8326  05AB                     i1l3332:	
  8327                           
  8328                           ;Sch_16f.c: 44:         {;Sch_16f.c: 46:             if (SCH_tasks_G[Index].pTask)
  8329  05AB  3006               	movlw	6
  8330  05AC  00A0               	movwf	??_SCH_Update
  8331  05AD  0820               	movf	??_SCH_Update,w
  8332  05AE  00F0               	movwf	i1___bmul@multiplicand
  8333  05AF  087A               	movf	SCH_Update@Index,w
  8334  05B0  160A  118A  2781  120A  118A  	fcall	i1___bmul
  8335  05B5  3EA0               	addlw	(low (_SCH_tasks_G| 0))& (0+255)
  8336  05B6  0084               	movwf	4
  8337  05B7  1383               	bcf	3,7	;select IRP bank1
  8338  05B8  0800               	movf	0,w
  8339  05B9  1903               	btfsc	3,2
  8340  05BA  2DBC               	goto	u340_21
  8341  05BB  2DBD               	goto	u340_20
  8342  05BC                     u340_21:	
  8343  05BC  2E44               	goto	i1l3342
  8344  05BD                     u340_20:	
  8345  05BD                     i1l3334:	
  8346                           
  8347                           ;Sch_16f.c: 47:             {;Sch_16f.c: 48:                 if (SCH_tasks_G[Index].Dela
      +                          y == 0)
  8348  05BD  3006               	movlw	6
  8349  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  8350  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  8351  05C0  00A0               	movwf	??_SCH_Update
  8352  05C1  0820               	movf	??_SCH_Update,w
  8353  05C2  00F0               	movwf	i1___bmul@multiplicand
  8354  05C3  087A               	movf	SCH_Update@Index,w
  8355  05C4  160A  118A  2781  120A  118A  	fcall	i1___bmul
  8356  05C9  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  8357  05CA  0084               	movwf	4
  8358  05CB  1383               	bcf	3,7	;select IRP bank1
  8359  05CC  0800               	movf	0,w
  8360  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  8361  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  8362  05CF  00A1               	movwf	??_SCH_Update+1
  8363  05D0  0A84               	incf	4,f
  8364  05D1  0800               	movf	0,w
  8365  05D2  00A2               	movwf	??_SCH_Update+2
  8366  05D3  0821               	movf	??_SCH_Update+1,w
  8367  05D4  0422               	iorwf	??_SCH_Update+2,w
  8368  05D5  1D03               	btfss	3,2
  8369  05D6  2DD8               	goto	u341_21
  8370  05D7  2DD9               	goto	u341_20
  8371  05D8                     u341_21:	
  8372  05D8  2E2F               	goto	i1l3340
  8373  05D9                     u341_20:	
  8374  05D9                     i1l3336:	
  8375                           
  8376                           ;Sch_16f.c: 49:                 {;Sch_16f.c: 51:                     SCH_tasks_G[Index].
      +                          RunMe += 1;
  8377  05D9  3001               	movlw	1
  8378  05DA  00A0               	movwf	??_SCH_Update
  8379  05DB  3006               	movlw	6
  8380  05DC  00A1               	movwf	??_SCH_Update+1
  8381  05DD  0821               	movf	??_SCH_Update+1,w
  8382  05DE  00F0               	movwf	i1___bmul@multiplicand
  8383  05DF  087A               	movf	SCH_Update@Index,w
  8384  05E0  160A  118A  2781  120A  118A  	fcall	i1___bmul
  8385  05E5  3EA5               	addlw	(low ((_SCH_tasks_G| 0+5)))& (0+255)
  8386  05E6  0084               	movwf	4
  8387  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  8388  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  8389  05E9  0820               	movf	??_SCH_Update,w
  8390  05EA  1383               	bcf	3,7	;select IRP bank1
  8391  05EB  0780               	addwf	0,f
  8392                           
  8393                           ;Sch_16f.c: 52:                     if (SCH_tasks_G[Index].Period)
  8394  05EC  3006               	movlw	6
  8395  05ED  00A0               	movwf	??_SCH_Update
  8396  05EE  0820               	movf	??_SCH_Update,w
  8397  05EF  00F0               	movwf	i1___bmul@multiplicand
  8398  05F0  087A               	movf	SCH_Update@Index,w
  8399  05F1  160A  118A  2781  120A  118A  	fcall	i1___bmul
  8400  05F6  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  8401  05F7  0084               	movwf	4
  8402  05F8  1383               	bcf	3,7	;select IRP bank1
  8403  05F9  0800               	movf	0,w
  8404  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  8405  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  8406  05FC  00A1               	movwf	??_SCH_Update+1
  8407  05FD  0A84               	incf	4,f
  8408  05FE  0800               	movf	0,w
  8409  05FF  00A2               	movwf	??_SCH_Update+2
  8410  0600  0821               	movf	??_SCH_Update+1,w
  8411  0601  0422               	iorwf	??_SCH_Update+2,w
  8412  0602  1903               	btfsc	3,2
  8413  0603  2E05               	goto	u342_21
  8414  0604  2E06               	goto	u342_20
  8415  0605                     u342_21:	
  8416  0605  2E44               	goto	i1l3342
  8417  0606                     u342_20:	
  8418  0606                     i1l3338:	
  8419                           
  8420                           ;Sch_16f.c: 53:                     {;Sch_16f.c: 55:                         SCH_tasks_G
      +                          [Index].Delay = SCH_tasks_G[Index].Period;
  8421  0606  3006               	movlw	6
  8422  0607  00A0               	movwf	??_SCH_Update
  8423  0608  0820               	movf	??_SCH_Update,w
  8424  0609  00F0               	movwf	i1___bmul@multiplicand
  8425  060A  087A               	movf	SCH_Update@Index,w
  8426  060B  160A  118A  2781  120A  118A  	fcall	i1___bmul
  8427  0610  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  8428  0611  0084               	movwf	4
  8429  0612  1383               	bcf	3,7	;select IRP bank1
  8430  0613  0800               	movf	0,w
  8431  0614  1283               	bcf	3,5	;RP0=0, select bank0
  8432  0615  1303               	bcf	3,6	;RP1=0, select bank0
  8433  0616  00A1               	movwf	??_SCH_Update+1
  8434  0617  0A84               	incf	4,f
  8435  0618  0800               	movf	0,w
  8436  0619  00A2               	movwf	??_SCH_Update+2
  8437  061A  3006               	movlw	6
  8438  061B  00A3               	movwf	??_SCH_Update+3
  8439  061C  0823               	movf	??_SCH_Update+3,w
  8440  061D  00F0               	movwf	i1___bmul@multiplicand
  8441  061E  087A               	movf	SCH_Update@Index,w
  8442  061F  160A  118A  2781  120A  118A  	fcall	i1___bmul
  8443  0624  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  8444  0625  0084               	movwf	4
  8445  0626  1283               	bcf	3,5	;RP0=0, select bank0
  8446  0627  1303               	bcf	3,6	;RP1=0, select bank0
  8447  0628  0821               	movf	??_SCH_Update+1,w
  8448  0629  1383               	bcf	3,7	;select IRP bank1
  8449  062A  0080               	movwf	0
  8450  062B  0A84               	incf	4,f
  8451  062C  0822               	movf	??_SCH_Update+2,w
  8452  062D  0080               	movwf	0
  8453  062E  2E44               	goto	i1l3342
  8454  062F                     i1l3340:	
  8455                           
  8456                           ;Sch_16f.c: 59:                 {;Sch_16f.c: 61:                     SCH_tasks_G[Index].
      +                          Delay -= (10);
  8457  062F  3006               	movlw	6
  8458  0630  00A0               	movwf	??_SCH_Update
  8459  0631  0820               	movf	??_SCH_Update,w
  8460  0632  00F0               	movwf	i1___bmul@multiplicand
  8461  0633  087A               	movf	SCH_Update@Index,w
  8462  0634  160A  118A  2781  120A  118A  	fcall	i1___bmul
  8463  0639  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  8464  063A  0084               	movwf	4
  8465  063B  300A               	movlw	10
  8466  063C  1383               	bcf	3,7	;select IRP bank1
  8467  063D  0280               	subwf	0,f
  8468  063E  0F84               	incfsz	4,f
  8469  063F  3000               	movlw	0
  8470  0640  1C03               	skipc
  8471  0641  0380               	decf	0,f
  8472  0642  0280               	subwf	0,f
  8473  0643  0384               	decf	4,f
  8474  0644                     i1l3342:	
  8475                           
  8476                           ;Sch_16f.c: 64:         }
  8477  0644  3001               	movlw	1
  8478  0645  1283               	bcf	3,5	;RP0=0, select bank0
  8479  0646  1303               	bcf	3,6	;RP1=0, select bank0
  8480  0647  00A0               	movwf	??_SCH_Update
  8481  0648  0820               	movf	??_SCH_Update,w
  8482  0649  07FA               	addwf	SCH_Update@Index,f
  8483  064A                     i1l3344:	
  8484  064A  3008               	movlw	8
  8485  064B  027A               	subwf	SCH_Update@Index,w
  8486  064C  1C03               	skipc
  8487  064D  2E4F               	goto	u343_21
  8488  064E  2E50               	goto	u343_20
  8489  064F                     u343_21:	
  8490  064F  2DAB               	goto	i1l3332
  8491  0650                     u343_20:	
  8492  0650                     i1l362:	
  8493                           ;Sch_16f.c: 65:     }
  8494                           
  8495                           
  8496                           ;Sch_16f.c: 67:     if (INTCON & (1 << 1)){
  8497  0650  1C8B               	btfss	11,1	;volatile
  8498  0651  2E53               	goto	u344_21
  8499  0652  2E54               	goto	u344_20
  8500  0653                     u344_21:	
  8501  0653  2E82               	goto	i1l374
  8502  0654                     u344_20:	
  8503  0654                     i1l3346:	
  8504                           
  8505                           ;Sch_16f.c: 68:         (INTCON &= ~(1 << 1));
  8506  0654  30FD               	movlw	253
  8507  0655  00A0               	movwf	??_SCH_Update
  8508  0656  0820               	movf	??_SCH_Update,w
  8509  0657  058B               	andwf	11,f	;volatile
  8510                           
  8511                           ;Sch_16f.c: 69:         switch (power_mode){
  8512  0658  2E72               	goto	i1l3358
  8513  0659                     i1l371:	
  8514                           ;Sch_16f.c: 71:             case ON_STATE :
  8515                           
  8516                           
  8517                           ;Sch_16f.c: 72:                 power_mode = OFF_STATE ;
  8518  0659  01FD               	clrf	_power_mode
  8519  065A  0AFD               	incf	_power_mode,f
  8520  065B                     i1l3348:	
  8521                           
  8522                           ;Sch_16f.c: 73:                 ssd_turn_off();
  8523  065B  160A  118A  270E  120A  118A  	fcall	i1_ssd_turn_off
  8524                           
  8525                           ;Sch_16f.c: 74:                 temp_control_off();
  8526  0660  160A  118A  2741  120A  118A  	fcall	i1_temp_control_off
  8527  0665                     i1l3350:	
  8528                           
  8529                           ;Sch_16f.c: 75:                 SCH_Stop();
  8530  0665  120A  158A  21D6  120A  118A  	fcall	_SCH_Stop
  8531                           
  8532                           ;Sch_16f.c: 76:                 break;
  8533  066A  2E82               	goto	i1l374
  8534  066B                     i1l3352:	
  8535                           
  8536                           ;Sch_16f.c: 79:                 power_mode = ON_STATE ;
  8537  066B  01FD               	clrf	_power_mode
  8538  066C                     i1l3354:	
  8539                           
  8540                           ;Sch_16f.c: 80:                 SCH_Start();
  8541  066C  120A  158A  2001  120A  118A  	fcall	_SCH_Start
  8542                           
  8543                           ;Sch_16f.c: 81:                 break;
  8544  0671  2E82               	goto	i1l374
  8545  0672                     i1l3358:	
  8546  0672  087D               	movf	_power_mode,w
  8547  0673  00A0               	movwf	??_SCH_Update
  8548  0674  01A1               	clrf	??_SCH_Update+1
  8549                           
  8550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8551                           ; Switch size 1, requested type "simple"
  8552                           ; Number of cases is 1, Range of values is 0 to 0
  8553                           ; switch strategies available:
  8554                           ; Name         Instructions Cycles
  8555                           ; simple_byte            4     3 (average)
  8556                           ; direct_byte           11     8 (fixed)
  8557                           ; jumptable            260     6 (fixed)
  8558                           ;	Chosen strategy is simple_byte
  8559  0675  0821               	movf	??_SCH_Update+1,w
  8560  0676  3A00               	xorlw	0	; case 0
  8561  0677  1903               	skipnz
  8562  0678  2E7A               	goto	i1l3694
  8563  0679  2E82               	goto	i1l374
  8564  067A                     i1l3694:	
  8565                           
  8566                           ; Switch size 1, requested type "simple"
  8567                           ; Number of cases is 2, Range of values is 0 to 1
  8568                           ; switch strategies available:
  8569                           ; Name         Instructions Cycles
  8570                           ; simple_byte            7     4 (average)
  8571                           ; direct_byte           14     8 (fixed)
  8572                           ; jumptable            260     6 (fixed)
  8573                           ;	Chosen strategy is simple_byte
  8574  067A  0820               	movf	??_SCH_Update,w
  8575  067B  3A00               	xorlw	0	; case 0
  8576  067C  1903               	skipnz
  8577  067D  2E59               	goto	i1l371
  8578  067E  3A01               	xorlw	1	; case 1
  8579  067F  1903               	skipnz
  8580  0680  2E6B               	goto	i1l3352
  8581  0681  2E82               	goto	i1l374
  8582  0682                     i1l374:	
  8583  0682  1283               	bcf	3,5	;RP0=0, select bank0
  8584  0683  1303               	bcf	3,6	;RP1=0, select bank0
  8585  0684  0827               	movf	??_SCH_Update+7,w
  8586  0685  00FF               	movwf	btemp+1
  8587  0686  0826               	movf	??_SCH_Update+6,w
  8588  0687  008A               	movwf	10
  8589  0688  0825               	movf	??_SCH_Update+5,w
  8590  0689  0084               	movwf	4
  8591  068A  0E24               	swapf	(??_SCH_Update+4)^0,w
  8592  068B  0083               	movwf	3
  8593  068C  0EFE               	swapf	btemp,f
  8594  068D  0E7E               	swapf	btemp,w
  8595  068E  0009               	retfie
  8596  068F                     __end_of_SCH_Update:	
  8597                           
  8598                           	psect	intentry
  8599  0004                     __pintentry:	
  8600                           ;incstack = 0
  8601 ;; hardware stack exceeded
  8602                           ; Regs used in _SCH_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8603                           
  8604  0004                     interrupt_function:	
  8605  007E                     saved_w	set	btemp
  8606  0004  00FE               	movwf	btemp
  8607  0005  0E03               	swapf	3,w
  8608  0006  1283               	bcf	3,5	;RP0=0, select bank0
  8609  0007  1303               	bcf	3,6	;RP1=0, select bank0
  8610  0008  00A4               	movwf	??_SCH_Update+4
  8611  0009  0804               	movf	4,w
  8612  000A  00A5               	movwf	??_SCH_Update+5
  8613  000B  080A               	movf	10,w
  8614  000C  00A6               	movwf	??_SCH_Update+6
  8615  000D  087F               	movf	btemp+1,w
  8616  000E  00A7               	movwf	??_SCH_Update+7
  8617  000F  120A  118A  2D9E   	ljmp	_SCH_Update
  8618                           
  8619                           	psect	text45
  8620  1741                     __ptext45:	
  8621 ;; *************** function i1_temp_control_off *****************
  8622 ;; Defined at:
  8623 ;;		line 86 in file "temp_control.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;		None
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1    wreg      void 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8637 ;;      Params:         0       0       0       0       0
  8638 ;;      Locals:         0       0       0       0       0
  8639 ;;      Temps:          1       0       0       0       0
  8640 ;;      Totals:         1       0       0       0       0
  8641 ;;Total ram usage:        1 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_SCH_Update
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           
  8651                           ;psect for function i1_temp_control_off
  8652  1741                     i1_temp_control_off:	
  8653  1741                     i1l3290:	
  8654                           ;incstack = 0
  8655                           ; Regs used in i1_temp_control_off: [wreg+status,2+status,0]
  8656                           
  8657                           
  8658                           ;temp_control.c: 87:     (PORTC &= ~(1 << 5));
  8659  1741  30DF               	movlw	223
  8660  1742  00F0               	movwf	??i1_temp_control_off
  8661  1743  0870               	movf	??i1_temp_control_off,w
  8662  1744  1283               	bcf	3,5	;RP0=0, select bank0
  8663  1745  1303               	bcf	3,6	;RP1=0, select bank0
  8664  1746  0587               	andwf	7,f	;volatile
  8665                           
  8666                           ;temp_control.c: 88:     (PORTC &= ~(1 << 2));
  8667  1747  30FB               	movlw	251
  8668  1748  00F0               	movwf	??i1_temp_control_off
  8669  1749  0870               	movf	??i1_temp_control_off,w
  8670  174A  0587               	andwf	7,f	;volatile
  8671                           
  8672                           ;temp_control.c: 89:     (PORTB &= ~(1 << 4));
  8673  174B  30EF               	movlw	239
  8674  174C  00F0               	movwf	??i1_temp_control_off
  8675  174D  0870               	movf	??i1_temp_control_off,w
  8676  174E  0586               	andwf	6,f	;volatile
  8677  174F                     i1l294:	
  8678  174F  0008               	return
  8679  1750                     __end_ofi1_temp_control_off:	
  8680                           
  8681                           	psect	text46
  8682  170E                     __ptext46:	
  8683 ;; *************** function i1_ssd_turn_off *****************
  8684 ;; Defined at:
  8685 ;;		line 138 in file "SSD.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2, status,0
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8699 ;;      Params:         0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0
  8701 ;;      Temps:          1       0       0       0       0
  8702 ;;      Totals:         1       0       0       0       0
  8703 ;;Total ram usage:        1 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_SCH_Update
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           
  8713                           ;psect for function i1_ssd_turn_off
  8714  170E                     i1_ssd_turn_off:	
  8715  170E                     i1l3284:	
  8716                           ;incstack = 0
  8717                           ; Regs used in i1_ssd_turn_off: [wreg+status,2+status,0]
  8718                           
  8719                           
  8720                           ;SSD.c: 139:     (PORTD &= ~(255 << 0));
  8721  170E  1283               	bcf	3,5	;RP0=0, select bank0
  8722  170F  1303               	bcf	3,6	;RP1=0, select bank0
  8723  1710  0188               	clrf	8	;volatile
  8724  1711                     i1l3286:	
  8725                           
  8726                           ;SSD.c: 140:     (PORTA &= ~(1 << 4));
  8727  1711  30EF               	movlw	239
  8728  1712  00F0               	movwf	??i1_ssd_turn_off
  8729  1713  0870               	movf	??i1_ssd_turn_off,w
  8730  1714  0585               	andwf	5,f	;volatile
  8731  1715                     i1l3288:	
  8732                           
  8733                           ;SSD.c: 141:     (PORTA &= ~(1 << 5));
  8734  1715  30DF               	movlw	223
  8735  1716  00F0               	movwf	??i1_ssd_turn_off
  8736  1717  0870               	movf	??i1_ssd_turn_off,w
  8737  1718  0585               	andwf	5,f	;volatile
  8738  1719                     i1l192:	
  8739  1719  0008               	return
  8740  171A                     __end_ofi1_ssd_turn_off:	
  8741                           
  8742                           	psect	text47
  8743  09D6                     __ptext47:	
  8744 ;; *************** function _SCH_Stop *****************
  8745 ;; Defined at:
  8746 ;;		line 131 in file "Sch_16f.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  i               2    8[COMMON] int 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8760 ;;      Params:         0       0       0       0       0
  8761 ;;      Locals:         2       0       0       0       0
  8762 ;;      Temps:          4       0       0       0       0
  8763 ;;      Totals:         6       0       0       0       0
  8764 ;;Total ram usage:        6 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    1
  8767 ;; This function calls:
  8768 ;;		i1___bmul
  8769 ;; This function is called by:
  8770 ;;		_SCH_Update
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           
  8775                           ;psect for function _SCH_Stop
  8776  09D6                     _SCH_Stop:	
  8777  09D6                     i1l3266:	
  8778                           ;incstack = 0
  8779 ;; hardware stack exceeded
  8780                           ; Regs used in _SCH_Stop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8781                           
  8782                           
  8783                           ;Sch_16f.c: 133:     (T1CON &= ~(1 << 0));
  8784  09D6  30FE               	movlw	254
  8785  09D7  00F4               	movwf	??_SCH_Stop
  8786  09D8  0874               	movf	??_SCH_Stop,w
  8787  09D9  1283               	bcf	3,5	;RP0=0, select bank0
  8788  09DA  1303               	bcf	3,6	;RP1=0, select bank0
  8789  09DB  0590               	andwf	16,f	;volatile
  8790  09DC                     i1l3268:	
  8791  09DC                     i1l3270:	
  8792                           
  8793                           ;Sch_16f.c: 135:     for (i = 0 ; i < (8) ; i++){
  8794  09DC  01F8               	clrf	SCH_Stop@i
  8795  09DD  01F9               	clrf	SCH_Stop@i+1
  8796  09DE                     i1l3276:	
  8797                           
  8798                           ;Sch_16f.c: 136:         SCH_tasks_G[i].Delay = SCH_tasks_G[i].Period;
  8799  09DE  3006               	movlw	6
  8800  09DF  00F4               	movwf	??_SCH_Stop
  8801  09E0  0874               	movf	??_SCH_Stop,w
  8802  09E1  00F0               	movwf	i1___bmul@multiplicand
  8803  09E2  0878               	movf	SCH_Stop@i,w
  8804  09E3  160A  118A  2781  120A  158A  	fcall	i1___bmul
  8805  09E8  3EA3               	addlw	(low ((_SCH_tasks_G| 0+3)))& (0+255)
  8806  09E9  0084               	movwf	4
  8807  09EA  1383               	bcf	3,7	;select IRP bank1
  8808  09EB  0800               	movf	0,w
  8809  09EC  00F5               	movwf	??_SCH_Stop+1
  8810  09ED  0A84               	incf	4,f
  8811  09EE  0800               	movf	0,w
  8812  09EF  00F6               	movwf	??_SCH_Stop+2
  8813  09F0  3006               	movlw	6
  8814  09F1  00F7               	movwf	??_SCH_Stop+3
  8815  09F2  0877               	movf	??_SCH_Stop+3,w
  8816  09F3  00F0               	movwf	i1___bmul@multiplicand
  8817  09F4  0878               	movf	SCH_Stop@i,w
  8818  09F5  160A  118A  2781  120A  158A  	fcall	i1___bmul
  8819  09FA  3EA1               	addlw	(low ((_SCH_tasks_G| 0+1)))& (0+255)
  8820  09FB  0084               	movwf	4
  8821  09FC  0875               	movf	??_SCH_Stop+1,w
  8822  09FD  1383               	bcf	3,7	;select IRP bank1
  8823  09FE  0080               	movwf	0
  8824  09FF  0A84               	incf	4,f
  8825  0A00  0876               	movf	??_SCH_Stop+2,w
  8826  0A01  0080               	movwf	0
  8827  0A02                     i1l3278:	
  8828                           
  8829                           ;Sch_16f.c: 137:     }
  8830  0A02  3001               	movlw	1
  8831  0A03  07F8               	addwf	SCH_Stop@i,f
  8832  0A04  1803               	skipnc
  8833  0A05  0AF9               	incf	SCH_Stop@i+1,f
  8834  0A06  3000               	movlw	0
  8835  0A07  07F9               	addwf	SCH_Stop@i+1,f
  8836  0A08                     i1l3280:	
  8837  0A08  0879               	movf	SCH_Stop@i+1,w
  8838  0A09  3A80               	xorlw	128
  8839  0A0A  00FF               	movwf	btemp+1
  8840  0A0B  3080               	movlw	128
  8841  0A0C  027F               	subwf	btemp+1,w
  8842  0A0D  1D03               	skipz
  8843  0A0E  2A11               	goto	u338_25
  8844  0A0F  3008               	movlw	8
  8845  0A10  0278               	subwf	SCH_Stop@i,w
  8846  0A11                     u338_25:	
  8847  0A11  1C03               	skipc
  8848  0A12  2A14               	goto	u338_21
  8849  0A13  2A15               	goto	u338_20
  8850  0A14                     u338_21:	
  8851  0A14  29DE               	goto	i1l3276
  8852  0A15                     u338_20:	
  8853  0A15                     i1l387:	
  8854  0A15  0008               	return
  8855  0A16                     __end_of_SCH_Stop:	
  8856                           
  8857                           	psect	text48
  8858  1781                     __ptext48:	
  8859 ;; *************** function i1___bmul *****************
  8860 ;; Defined at:
  8861 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  multiplier      1    wreg     unsigned char 
  8864 ;;  multiplicand    1    0[COMMON] unsigned char 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;  multiplier      1    2[COMMON] unsigned char 
  8867 ;;  __bmul          1    3[COMMON] unsigned char 
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      unsigned char 
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8877 ;;      Params:         1       0       0       0       0
  8878 ;;      Locals:         2       0       0       0       0
  8879 ;;      Temps:          1       0       0       0       0
  8880 ;;      Totals:         4       0       0       0       0
  8881 ;;Total ram usage:        4 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_SCH_Update
  8887 ;;		_SCH_Stop
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           
  8892                           ;psect for function i1___bmul
  8893  1781                     i1___bmul:	
  8894                           
  8895                           ;incstack = 0
  8896                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  8897                           ;i1___bmul@multiplier stored from wreg
  8898  1781  00F2               	movwf	i1___bmul@multiplier
  8899  1782                     i1l3164:	
  8900  1782  01F3               	clrf	i1___bmul@product
  8901  1783                     i1l3166:	
  8902  1783  1C72               	btfss	i1___bmul@multiplier,0
  8903  1784  2F86               	goto	u329_21
  8904  1785  2F87               	goto	u329_20
  8905  1786                     u329_21:	
  8906  1786  2F8B               	goto	i1l3170
  8907  1787                     u329_20:	
  8908  1787                     i1l3168:	
  8909  1787  0870               	movf	i1___bmul@multiplicand,w
  8910  1788  00F1               	movwf	??i1___bmul
  8911  1789  0871               	movf	??i1___bmul,w
  8912  178A  07F3               	addwf	i1___bmul@product,f
  8913  178B                     i1l3170:	
  8914  178B  1003               	clrc
  8915  178C  0DF0               	rlf	i1___bmul@multiplicand,f
  8916  178D                     i1l3172:	
  8917  178D  1003               	clrc
  8918  178E  0CF2               	rrf	i1___bmul@multiplier,f
  8919  178F  0872               	movf	i1___bmul@multiplier,w
  8920  1790  1D03               	btfss	3,2
  8921  1791  2F93               	goto	u330_21
  8922  1792  2F94               	goto	u330_20
  8923  1793                     u330_21:	
  8924  1793  2F83               	goto	i1l3166
  8925  1794                     u330_20:	
  8926  1794                     i1l3174:	
  8927  1794  0873               	movf	i1___bmul@product,w
  8928  1795                     i1l526:	
  8929  1795  0008               	return
  8930  1796                     __end_ofi1___bmul:	
  8931                           
  8932                           	psect	text49
  8933  0801                     __ptext49:	
  8934 ;; *************** function _SCH_Start *****************
  8935 ;; Defined at:
  8936 ;;		line 122 in file "Sch_16f.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;		None
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  1    wreg      void 
  8943 ;; Registers used:
  8944 ;;		None
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8950 ;;      Params:         0       0       0       0       0
  8951 ;;      Locals:         0       0       0       0       0
  8952 ;;      Temps:          0       0       0       0       0
  8953 ;;      Totals:         0       0       0       0       0
  8954 ;;Total ram usage:        0 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; This function calls:
  8957 ;;		Nothing
  8958 ;; This function is called by:
  8959 ;;		_SCH_Update
  8960 ;; This function uses a non-reentrant model
  8961 ;;
  8962                           
  8963                           
  8964                           ;psect for function _SCH_Start
  8965  0801                     _SCH_Start:	
  8966  0801                     i1l3282:	
  8967                           ;incstack = 0
  8968                           ; Regs used in _SCH_Start: []
  8969                           
  8970                           
  8971                           ;Sch_16f.c: 124:     (T1CON |= (1 << 0));
  8972  0801  1283               	bcf	3,5	;RP0=0, select bank0
  8973  0802  1303               	bcf	3,6	;RP1=0, select bank0
  8974  0803  1410               	bsf	16,0	;volatile
  8975  0804                     i1l382:	
  8976  0804  0008               	return
  8977  0805                     __end_of_SCH_Start:	
  8978  000E                     
  8979                           	psect	functab
  8980  0045                     __pfunctab:	
  8981  0045                     __fptable:	
  8982  0045                     fptable:	
  8983  0045  00FF               	movwf	(btemp+1)& (0+127)
  8984  0046  3000               	movlw	high fptable
  8985  0047  008A               	movwf	10
  8986  0048  087F               	movf	(btemp+1)& (0+127),w
  8987  0049  0782               	addwf	2,f
  8988  004A                     fpbase:	
  8989  004A  284A               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  8990  004B                     fp__temp_set:	
  8991  004B  120A  158A  2B7B   	ljmp	_temp_set
  8992  004E                     fp__get_set_temp:	
  8993  004E  120A  158A  2866   	ljmp	_get_set_temp
  8994  0051                     fp__temp_sensor_read:	
  8995  0051  120A  118A  2E8F   	ljmp	_temp_sensor_read
  8996  0054                     fp__ssd_update:	
  8997  0054  120A  158A  2EB0   	ljmp	_ssd_update
  8998  0057                     fp__led:	
  8999  0057  160A  118A  2F96   	ljmp	_led
  9000  005A                     fp__switch_scan:	
  9001  005A  160A  118A  2FAB   	ljmp	_switch_scan
  9002  005D                     fp__ssd_blink:	
  9003  005D  120A  158A  281C   	ljmp	_ssd_blink
  9004  0060                     __end_of__fptable:	
  9005  007E                     btemp	set	126	;btemp
  9006  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     64      72
    BANK1            80      9      69
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    SCH_Add_Task@pFunction	PTR FTN()void  size(1) Largest target is 1
		 -> ssd_blink(), switch_scan(), temp_set(), led(), 
		 -> ssd_update(), temp_sensor_read(), get_set_temp(), 

    S244$pTask	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), ssd_blink(), switch_scan(), temp_set(), 
		 -> led(), ssd_update(), temp_sensor_read(), get_set_temp(), 

    SCH_tasks_G.pTask	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), ssd_blink(), switch_scan(), temp_set(), 
		 -> led(), ssd_update(), temp_sensor_read(), get_set_temp(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SCH_Update in COMMON

    _SCH_Update->_SCH_Stop
    _SCH_Stop->i1___bmul

Critical Paths under _main in BANK0

    _temp_sensor_init->_ADC_Init
    _SCH_Init->_SCH_Delete_Task
    _temp_set->_temp_control_off
    _temp_sensor_read->___fltol
    _average->___lwdiv
    ___xxtofl->_ADC_Read
    ___fltol->___fldiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _switch_scan->_sw_action
    _sw_action->_EEPROM_write
    _EEPROM_write->_I2C1_Wr
    _ssd_update->___awdiv
    _ssd_blink->_ssd_turn_off
    _get_set_temp->_EEPROM_read
    _EEPROM_read->_I2C1_Wr
    _SCH_Delete_Task->___bmul
    _SCH_Add_Task->___bmul
    _EEPROM_init->_I2C1_Init
    _I2C1_Init->___lldiv

Critical Paths under _SCH_Update in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SCH_Dispatch_Tasks
    _SCH_Dispatch_Tasks->_temp_sensor_read

Critical Paths under _SCH_Update in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SCH_Update in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SCH_Update in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10663
                        _EEPROM_init
                       _SCH_Add_Task
                 _SCH_Dispatch_Tasks
                           _SCH_Init
                           _ssd_init
                        _switch_init
                  _temp_control_init
                   _temp_sensor_init
 ---------------------------------------------------------------------------------
 (1) _temp_sensor_init                                     0     0      0       0
                           _ADC_Init
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _temp_control_init                                    1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _switch_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssd_init                                             1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SCH_Init                                             2     2      0     705
                                             15 BANK0      2     2      0
                    _SCH_Delete_Task
 ---------------------------------------------------------------------------------
 (1) _SCH_Dispatch_Tasks                                   4     4      0    7735
                                              5 BANK1      4     4      0
                   Absolute function *
                    _SCH_Delete_Task
                    _SCH_Go_To_Sleep
                  _SCH_Report_Status
                             ___bmul
                       _get_set_temp *
                                _led *
                          _ssd_blink *
                         _ssd_update *
                        _switch_scan *
                   _temp_sensor_read *
                           _temp_set *
 ---------------------------------------------------------------------------------
 (2) _temp_set                                             3     3      0       0
                                              9 BANK0      3     3      0
                   _temp_control_off
 ---------------------------------------------------------------------------------
 (3) _temp_control_off                                     1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _temp_sensor_read                                     5     5      0    4996
                                              0 BANK1      5     5      0
                           _ADC_Read
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _average
 ---------------------------------------------------------------------------------
 (3) _average                                              6     6      0     429
                                             16 BANK0      6     6      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                             13 BANK0     14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             53 BANK0     11     7      4
                           _ADC_Read (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2417
                                             27 BANK0     26    18      8
                           _ADC_Read (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              8 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1273
                                             27 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      22
                                              8 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _switch_scan                                          0     0      0     218
                          _sw_action
 ---------------------------------------------------------------------------------
 (3) _sw_action                                            2     2      0     218
                                             12 BANK0      2     2      0
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (4) _EEPROM_write                                         3     0      3     218
                                              9 BANK0      3     0      3
                         _I2C1_Start
                          _I2C1_Stop
                            _I2C1_Wr
 ---------------------------------------------------------------------------------
 (2) _ssd_update                                           3     3      0     922
                                             17 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                          _display7s
 ---------------------------------------------------------------------------------
 (3) _display7s                                            3     3      0      22
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _ssd_blink                                            2     2      0       0
                                              9 BANK0      2     2      0
                       _ssd_turn_off
 ---------------------------------------------------------------------------------
 (3) _ssd_turn_off                                         1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _led                                                  1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_set_temp                                         1     1      0     220
                                             13 BANK0      1     1      0
                        _EEPROM_read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_read                                          4     2      2     220
                                              9 BANK0      4     2      2
                            _I2C1_Rd
                         _I2C1_Start
                          _I2C1_Stop
                            _I2C1_Wr
 ---------------------------------------------------------------------------------
 (5) _I2C1_Wr                                              1     1      0      22
                                              8 BANK0      1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C1_Stop                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C1_Start                                           0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_Rd                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SCH_Report_Status                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SCH_Go_To_Sleep                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SCH_Delete_Task                                      3     3      0     637
                                             12 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCH_Add_Task                                         8     4      4    1811
                                             12 BANK0      8     4      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     519
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_init                                          0     0      0     412
                          _I2C1_Init
 ---------------------------------------------------------------------------------
 (2) _I2C1_Init                                            8     4      4     412
                                             22 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              8 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SCH_Update                                           9     9      0     769
                                             10 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _SCH_Start
                           _SCH_Stop
                           i1___bmul
                     i1_ssd_turn_off
                 i1_temp_control_off
 ---------------------------------------------------------------------------------
 (8) i1_temp_control_off                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_ssd_turn_off                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _SCH_Stop                                             6     6      0     330
                                              4 COMMON     6     6      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             4     3      1     239
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) _SCH_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_init
     _I2C1_Init
       ___lldiv
   _SCH_Add_Task
     ___bmul
   _SCH_Dispatch_Tasks
     Absolute function(Fake) *
     _SCH_Delete_Task *
       ___bmul
     _SCH_Go_To_Sleep *
     _SCH_Report_Status *
     ___bmul *
     _get_set_temp *
       _EEPROM_read
         _I2C1_Rd
         _I2C1_Start
           _I2C_Wait
         _I2C1_Stop
           _I2C_Wait
         _I2C1_Wr
           _I2C_Wait
     _led *
     _ssd_blink *
       _ssd_turn_off
     _ssd_update *
       ___awdiv
       ___awmod
       _display7s
     _switch_scan *
       _sw_action
         _EEPROM_write
           _I2C1_Start
             _I2C_Wait
           _I2C1_Stop
             _I2C_Wait
           _I2C1_Wr
             _I2C_Wait
     _temp_sensor_read *
       _ADC_Read
       ___fldiv
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___flmul
         _ADC_Read (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___fltol
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
         ___flmul (ARG)
           _ADC_Read (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl
         _ADC_Read (ARG)
       _average
         ___lwdiv
     _temp_set *
       _temp_control_off
   _SCH_Init
     _SCH_Delete_Task
       ___bmul
   _ssd_init
   _switch_init
   _temp_control_init
   _temp_sensor_init
     _ADC_Init

 _SCH_Update (ROOT)
   _SCH_Start
   _SCH_Stop
     i1___bmul
   i1___bmul
   i1_ssd_turn_off
   i1_temp_control_off

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      14       9       20.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      9      45       7       86.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AF      12        0.0%
ABS                  0      0      AF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jul 12 01:55:26 2020

               _ssd_turn_off 171A                 ___fldiv@aexp 0054                 ___fldiv@bexp 0053  
                          _i 0060              _SCH_Delete_Task 0B18                            pc 0002  
               ___fldiv@sign 004C               ___bmul@product 002A                  __CFG_CP$OFF 0000  
              ?_get_set_temp 0070                           l60 08D4                           l63 08E0  
                         l80 1726                           l57 090C                           l83 1732  
                         l92 1704                           l86 09A1                           l95 1780  
                         l89 16FB                           l98 1739                 ___awdiv@sign 002E  
                         fsr 0004           EEPROM_read@address 0029          __Umul8_16@word_mpld 002E  
                __CFG_LVP$ON 0000              __end_of_I2C1_Rd 1741                          l100 173E  
                        l101 1740                          l201 083E                          l122 096D  
                        l116 176E              __end_of_I2C1_Wr 1781                          l119 17FF  
                        l127 088D                          l231 17B4                          l311 170D  
                        l321 076D                          l242 0E30                          l154 17DE  
                        l411 0B7A                          l235 17BF                          l316 09D5  
                        l228 16EA                          l253 0EAF                          l414 0003  
                        l406 0E24                          l159 0B17                  fp__temp_set 004B  
                        l192 1725                          l274 0865                          l291 17AA  
                        l285 0BDD                          l189 0F43                          l197 0824  
                        l526 081B                          l294 175E                          l279 0BD7  
                        l536 0C45                          l379 093C                          l396 0D24  
                        l653 0CAE                          l901 03B4                          l399 16E3  
                        l666 0AB6                          l851 059D                          l940 0FC9  
                        l772 0A5B                          l693 0D8B                          l941 0FD5  
                        l933 0FAD                          l686 0DA0                          l871 0581  
                        l927 0F68                          l696 0DA0                          l873 0591  
                        l865 050F                          l849 041D                          l929 0FFF  
                        l946 08A4                          l948 08B6                          l895 032C  
                        l889 03C0                 __CFG_CPD$OFF 0000                          _led 1796  
                        fsr0 0004                          indf 0000                 ___awmod@sign 002E  
  __size_of_temp_control_off 000F                 ___flmul@aexp 004D                 ___flmul@bexp 004E  
               ___flmul@sign 0048                 ___flmul@temp 0053                 ___flmul@prod 004F  
               ___fltol@exp1 005F                         l3000 0FED                         l3002 0FF2  
                       l3010 08E1                         l3020 099F                         l3004 0FF6  
                       l3100 0B82                         l3012 08E9                         l3022 09A0  
                       l2310 08AD                         l2302 0891                         l3006 0FF7  
                       l3110 0BB5                         l3102 0B94                         l3030 0EB0  
                       l3014 0909                         l3016 096E                         l2400 0ACD  
                       l2320 08D8                         l2312 08B2                         l2304 0893  
                       l3120 0BCA                         l3112 0BB8                         l3104 0B97  
                       l3024 0866                         l3040 0EC2                         l3018 0972  
                       l2250 1726                         l2330 0948                         l2306 089A  
                       l3114 0BBC                         l3106 0B9B                         l3026 087A  
                       l3050 0EFC                         l3042 0ED2                         l3034 0EB8  
                       l3130 17A4                         l3210 0922                         l2252 172C  
                       l2260 1701                         l2340 096A                         l2332 0950  
                       l2324 093D                         l2412 0AD1                         l2500 0E99  
                       l2316 08BA                         l2308 089E                         l3116 0BBD  
                       l3108 0B9F                         l3124 0BD8                         l3028 087F  
                       l3060 0F2B                         l3052 0F01                         l3044 0EEA  
                       l3036 0EBD                         l3220 0931                         l3212 0925  
                       l3204 0910                         l3230 0CB4                         l3150 0B36  
                       l2270 173F                         l2254 16F3                         l2262 1772  
                       l2334 0955                         l2326 093D                         l2430 0AD7  
                       l2406 0ACF                         l2318 08D3                         l2510 1750  
                       l3118 0BC2                         l3054 0F19                         l3046 0EED  
                       l3126 1796                         l3222 0932                         l3214 0929  
                       l3206 0916                         l3240 0CDB                         l3232 0CB8  
                       l3152 0B36                         l3144 0B1B                         l2256 16F8  
                       l2264 1777                         l2336 095B                         l2328 0942  
                       l2600 0C9A                         l2424 0AD5                         l2352 0ABD  
                       l2344 0ABA                         l2504 0E9D                         l2280 0A20  
                       l2520 09BB                         l2512 09A2                         l3056 0F1C  
                       l3048 0EF1                         l3064 0F2F                         l3128 179D  
                       l3080 082C                         l3224 0936                         l3216 092D  
                       l3208 091C              _SCH_Go_To_Sleep 16E2                         l2530 0809  
                       l3234 0CCA                         l3154 0B46                         l3146 0B2D  
                       l3162 16E2                         l2258 16FC                         l2266 177B  
                       l2338 0965                         l2602 0CA0                         l2610 0A5C  
                       l2442 0ADB                         l2418 0AD3                         l2370 0AC3  
                       l2346 0ABB                         l2450 0ADD                         l2274 17DF  
                       l2290 0A43                         l2282 0A23                         l2522 09BF  
                       l3058 0F20                         l3090 17AB                         l3074 081C  
                       l3226 093A                         l3218 0930                         l2532 080D  
                       l3236 0CD2                         l3228 0CB2                         l3156 0B58  
                       l3148 0B35                         l2268 1733                         l2460 171D  
                       l2604 0CA5                         l2620 0A6E                         l2612 0A5F  
                       l2436 0AD9                         l2364 0AC1                         l2700 03E6  
                       l2292 0A49                         l2284 0A2A                         l2276 0A16  
                       l2524 09C5                         l3500 075A                         l3092 17B1  
                       l3084 082E                         l3180 170A                         l2550 0C04  
                       l2542 0BDE                         l2534 0811                         l3158 0B6A  
                       l2462 1721                         l2606 0CAA                         l2630 0A87  
                       l2622 0A73                         l2614 0A63                         l2382 0AC7  
                       l2358 0ABF                         l2470 0E32                         l2710 03FF  
                       l2702 03E8                         l2294 0A4A                         l2286 0A2E  
                       l2278 0A1A                         l2518 09A8                         l3502 0760  
                       l3094 17B8                         l3078 0826                         l3190 17CC  
                       l3182 083F                         l2560 0C37                         l2552 0C0D  
                       l2544 0BF0                         l2536 0813                         l2528 0808  
                       l2632 0A8B                         l2624 0A79                         l2640 0AA8  
                       l2616 0A68                         l2376 0AC5                         l2480 0E57  
                       l2472 0E3B                         l2464 0E25                         l2800 052B  
                       l2720 0413                         l2712 0400                         l2704 03F0  
                       l2296 0A51                         l2288 0A32                         l3504 0761  
                       l3096 17BA                         l3520 0E08                         l3512 0DA4  
                       l3192 17D2                         l3184 16E4                         l2554 0C1F  
                       l2546 0BF3                         l2562 0C3D                         l2538 081A  
                       l2458 171A                         l2570 0C4D                         l2642 0AAD  
                       l2634 0A95                         l2626 0A7C                         l2618 0A6A  
                       l2394 0ACB                         l2490 0E6F                         l2482 0E5B  
                       l2474 0E46                         l2466 0E26                         l2810 0574  
                       l2802 0544                         l2714 0405                         l2722 0415  
                       l2706 03F5                         l2650 0D32                         l2298 0A57  
                       l3098 0B7B                         l3514 0DBA                         l3522 0E0E  
                       l3506 0DA1                         l3194 17D8                         l3186 17C0  
                       l3178 1705                         l3530 0778                         l2556 0C2D  
                       l2548 0C00                         l3196 175F                         l2580 0C61  
                       l2572 0C52                         l2644 0AB2                         l2636 0A9B  
                       l2628 0A83                         l2388 0AC9                         l2492 0E73  
                       l2476 0E4D                         l2484 0E62                         l2468 0E2B  
                       l2820 058D                         l2812 0578                         l2804 054A  
                       l2740 045E                         l2724 0425                         l2732 043E  
                       l2716 040A                         l2708 03FB                         l2900 024D  
                       l2660 0D59                         l3524 0E14                         l3516 0DD3  
                       l3188 17C6                         l3540 079A                         l3532 077D  
                       l2558 0C2E                         l2590 0C77                         l2582 0C63  
                       l2574 0C54                         l2566 0C46                         l2638 0AA2  
                       l2486 0E67                         l2494 0E7A                         l2478 0E53  
                       l2814 0580                         l2806 0557                         l2750 047D  
                       l2742 0466                         l2734 0443                         l2726 0431  
                       l2718 0412                         l2910 02E1                         l2902 025D  
                       l2830 006D                         l2670 0D67                         l2662 0D5B  
                       l2654 0D3B                         l3526 0E1A                         l3518 0DE8  
                       l3198 090D                         l3550 07E5                         l3542 07A9  
                       l3534 0782                         ?_led 0070                         l2592 0C7B  
                       l2584 0C69                         l2576 0C58                         l2568 0C49  
                       l2488 0E6D                         l2496 0E83                         l2816 0587  
                       l2808 0565                         l2760 04AF                         l2752 048F  
                       l2744 046E                         l2728 0435                         l2920 0306  
                       l2912 02EF                         l2904 028A                         l2840 0084  
                       l2832 0071                         l2680 0D90                         l2664 0D5F  
                       l2672 0D79                         l2656 0D50                         l2648 0D25  
                       l3552 07F4                         l3544 07B8                         l3536 0787  
                       l3528 076E                         l2594 0C8C                         l2586 0C6C  
                       l2578 0C5D                         l2498 0E8A                         l2818 058B  
                       l2770 04D0                         l2762 04B0                         l2754 0493  
                       l2746 0476                         l2738 044C                         l2690 03D2  
                       l2930 0329                         l2914 02F8                         l2922 030C  
                       l2906 02B0                         l2850 009D                         l2842 0086  
                       l2834 0072                         l2826 0060                         l2682 0D95  
                       l2658 0D51                         l3546 07C7                         l3538 078C  
                       l2596 0C92                         l2588 0C73                         l2780 04E9  
                       l2772 04D2                         l2764 04BE                         l2756 0494  
                       l2748 0478                         l2692 03D3                         l2684 03C1  
                       l2940 0348                         l2924 0310                         l2916 02FC  
                       l2908 02D8                         l2860 00B2                         l2852 009E  
                       l2844 008E                         l2836 0077                         l2828 0067  
                       l3548 07D6                         l2598 0C93                         l2790 050C  
                       l2774 04DB                         l2782 04EF                         l2758 049D  
                       l2766 04C2                         l2694 03D8                         l2686 03C8  
                       l2950 038E                         l2942 0361                         l2934 0331  
                       l2926 0311                         l2918 02FD                         l2870 00CD  
                       l2862 00BA                         l2854 00A3                         l2846 0093  
                       l2838 007C                         l2678 0D80                         l3494 068F  
                       l2784 04F3                         l2776 04DF                         l2768 04C8  
                       l2696 03DD                         l2688 03CE                         l2960 03AD  
                       l2952 0398                         l2936 0336                         l2944 0367  
                       l2928 0315                         l2880 014F                         l2872 00DD  
                       l2864 00BF                         l2856 00A8                         l2848 0099  
                       l3496 0696                         l3690 0EA7                         l2794 0514  
                       l2786 04F4                         l2778 04E0                         l2698 03E5  
                       l2962 03B8                         l2954 039A                         l2946 0374  
                       l2938 0344                         l2890 01BD                         l2882 016B  
                       l2874 00EA                         l2866 00C4                         l2858 00B0  
                       l2970 0F50                         l3498 0752                         l3692 0AE5  
                       l2796 0519                         l2788 04F8                         l2956 03A8  
                       l2948 037F                         l2892 01CD                         l2884 0187  
                       l2876 0107                         l2980 0F7E                         l2972 0F60  
                       l3684 0836                         l2798 0527                         l2958 03AC  
                       l2894 01EA                         l2886 0190                         l2878 0123  
                       l2990 0FB4                         l2982 0F8B                         l2974 0F70  
                       l2966 0F47                         l3686 0ECA                         l2896 0203  
                       l2888 01A0                         l2992 0FBF                         l2984 0F92  
                       l2968 0F4C                         l3688 0F3B                         l2898 0220  
                       l2994 0FC3                         l2986 0F96                         l2978 0F79  
                       l2996 0FCD                         l2988 0FA4                         l2998 0FD7  
                       u2000 0C04                         u2001 0C03                         u2020 0C1F  
                       u2021 0C1E                         u2110 0C8C                         u2015 0C06  
                       u2111 0C8B                         u2040 0C3D                         u2200 0A95  
                       u3000 0F4C                         u2041 0C3C                         u2025 0C1B  
                       u2105 0C7C                         u2201 0A94                         u3001 0F4B  
                       u2130 0CA0                         u2050 0C4D                         u3010 0F50  
                       u2035 0C2F                         u2131 0C9F                         u2115 0C88  
                       u2051 0C4C                         u3011 0F4F                         u2140 0CA5  
                       u2060 0C58                         u2220 0AA8                         u2300 0D7F  
                       u3100 0FCD                         u3020 0F70                         u2141 0CA4  
                       u2125 0C94                         u2061 0C57                         u2221 0AA7  
                       u2205 0A91                         u2301 0D7E                         u3101 0FCC  
                       u3021 0F6F                         u2070 0C69                         u2230 0AAD  
                       u2150 0A63                         u3110 0FE2                         u2071 0C68  
                       u2231 0AAC                         u2215 0A9C                         u2151 0A62  
                       u2160 0A6E                         u2400 0425                         u2320 0D90  
                       u2240 0D32                         u3120 0FF2                         u3040 0F91  
                       u3200 0B82                         u2161 0A6D                         u2401 0424  
                       u2321 0D8F                         u2241 0D31                         u3121 0FF1  
                       u3041 0F90                         u3201 0B81                         u2090 0C7B  
                       u2170 0A79                         u2410 0443                         u2330 0D95  
                       u2250 0D49                         u3130 0FF6                         u3210 0B94  
                       u2091 0C7A                         u2171 0A78                         u2411 0442  
                       u2331 0D94                         u2315 0D82                         u3131 0FF5  
                       u3115 0FDD                         u3035 0F83                         u3211 0B93  
                       u3140 0980                         u2420 047D                         u2340 03D2  
                       u2260 0D5F                         u3060 0FB3                         u3220 0BB5  
                       u2085 0C6D                         u2421 047C                         u2341 03D1  
                       u2261 0D5E                         u3061 0FB2                         u3221 0BB4  
                       u2190 0A8B                         u2510 04DF                         u2350 03D8  
                       u2270 0D66                         u3230 0BCA                         u3150 087A  
                       u3310 0922                         u2191 0A8A                         u2511 04DE  
                       u2351 03D7                         u2271 0D65                         u2255 0D44  
                       u3055 0FA5                         u3231 0BC9                         u3215 0B90  
                       u3151 0879                         u3311 0921                         u3320 0CCA  
                       u2600 0557                         u2360 03DD                         u3080 0FC3  
                       u1800 0A43                         u3160 0EB7                         u3240 179D  
                       u3145 097B                         u3321 0CC9                         u2185 0A7D  
                       u2601 0556                         u2505 04D4                         u2361 03DC  
                       u3081 0FC2                         u1801 0A42                         u3225 0BB1  
                       u3161 0EB6                         u3241 179C                         u3330 0CD2  
                       u1730 172C                         u2610 0574                         u2530 04F3  
                       u2450 0493                         u2370 03FF                         u2290 0D78  
                       u3090 0FC9                         u3250 17A4                         u3170 0823  
                       u3331 0CD1                         u1731 172B                         u2611 0573  
                       u2531 04F2                         u2451 0492                         u2435 047F  
                       u2371 03FE                         u2291 0D77                         u3091 0FC8  
                       u3075 0FB8                         u3251 17A3                         u3171 0822  
                       u3340 0CDA                         u1740 1732                         u1900 0E46  
                       u2620 058B                         u2540 04F8                         u2380 0405  
                       u2700 00C4                         u1820 0A57                         u3180 17B1  
                       u3341 0CD9                         u1741 1731                         u1901 0E45  
                       u2621 058A                         u2605 0553                         u2541 04F7  
                       u2525 04E2                         u2445 0488                         u2381 0404  
                       u2701 00C3                         u2285 0D68                         u1821 0A56  
                       u1805 0A3F                         u3181 17B0                         u1750 173E  
                       u1910 0E4D                         u2550 050C                         u2470 04AF  
                       u2390 040A                         u1830 089E                         u2630 0071  
                       u3190 17B8                         u1751 173D                         u1911 0E4C  
                       u2615 0570                         u2551 050B                         u2471 04AE  
                       u2391 0409                         u1831 089D                         u2711 0115  
                       u2631 0070                         u1815 0A4B                         u3191 17B7  
                       _PIE1 008C                         u3280 0B2D                         u1920 0E53  
                       u2560 0513                         u2480 04C8                         u2712 011C  
                       u2640 0077                         u1760 0A20                         u3281 0B2C  
                       u1921 0E52                         u2561 0512                         u2481 04C7  
                       u2465 0496                         u2801 023F                         u2721 0131  
                       u2713 0123                         u2641 0076                         u1761 0A1F  
                       u1930 0E67                         u2570 0519                         u2490 04D0  
                       u1850 08B2                         u2802 0246                         u2722 0138  
                       u2650 007C                         u3450 0696                         u1931 0E66  
                       u2571 0518                         u2491 04CF                         u2475 04AB  
                       u1851 08B1                         u2811 026C                         u2803 024D  
                       u2731 015D                         u2723 013F                         u2651 007B  
                       u3451 0695                         u1940 0E6D                         u2580 052B  
                       u2900 0310                         u2820 0296                         u2812 0273  
                       u2732 0164                         u2660 009D                         u1780 0A32  
                       u3460 0760                         u1941 0E6C                         u2581 052A  
                       u1845 08A5                         u2901 030F                         u2813 027A  
                       u2741 0179                         u2733 016B                         u2661 009C  
                       u1781 0A31                         u3461 075F                         u1870 08D8  
                       u2590 053A                         u2910 0315                         u2742 0180  
                       u2670 00A3                         u1950 09C5                         u3470 0DBA  
                       u1871 08D7                         u2911 0314                         u2831 02A2  
                       u2743 0187                         u2671 00A2                         u1775 0A24  
                       u1951 09C4                         u3471 0DB9                         u1960 080D  
                       u1880 0E2B                         u2920 0329                         u2840 02BE  
                       u2832 02A9                         u2680 00A8                         u3480 0E08  
                       u1961 080C                         u1881 0E2A                         u1865 08C9  
                       u2921 0328                         u2833 02B0                         u2825 0291  
                       u2761 01AF                         u2681 00A7                         u3481 0E07  
                       u1970 081A                         u1890 0E30                         u2930 0330  
                       u2762 01B6                         u2690 00BF                         u3490 0E1A  
                       u1971 0819                         u1891 0E2F                         u2595 0535  
                       u2931 032F                         u2851 02CA                         u2771 01DC  
                       u2763 01BD                         u2755 0189                         u2691 00BE  
                       u1795 0A33                         u3491 0E19                         u1980 0BF0  
                       u2940 0336                         u2852 02D1                         u2772 01E3  
                       u1981 0BEF                         u2941 0335                         u2853 02D8  
                       u2845 02B9                         u2773 01EA                         u2950 0348  
                       u2951 0347                         u2791 0212                         u2960 0357  
                       u2880 02FC                         u2792 0219                         u2881 02FB  
                       u2865 02DA                         u2793 0220                         u2785 01EC  
                       u2970 0374                         u1995 0BF5                         u2971 0373  
                       u2875 02F1                         u2980 038E                         u2981 038D  
                       u2965 0352                         u2990 03AC                         u2991 03AB  
                       u2975 0370                         u2895 02FF                         u2985 038A  
                       _PIR1 000C                 __CFG_WRT$OFF 0000                 fp__ssd_blink 005D  
                       _main 076E                         _mode 0063                         _ones 00DA  
                       _temp 0062                         _tens 00DB                         btemp 007E  
           __end_of_I2C_Wait 1733    SCH_Delete_Task@TASK_INDEX 002E  __size_of_SCH_Dispatch_Tasks 0084  
           __end_of_ADC_Init 090D             __end_of_ADC_Read 08E1                         start 0012  
            ___fldiv@new_exp 004D            ___bmul@multiplier 002B                  _switch_init 16E4  
                _switch_scan 17AB               ??_get_set_temp 002D                  _switch_wait 00D4  
                      ??_led 0028               i1_ssd_turn_off 170E                  ?_SCH_Update 0070  
       __end_of_EEPROM_write 1800            __end_of_I2C1_Init 09A2                ___fltol@sign1 005E  
                      ?_main 0070              __end_of___fldiv 059E              __end_of___awdiv 0CAF  
          __end_of_I2C1_Stop 1705                __CFG_WDTE$OFF 0000              __end_of___awmod 0AB7  
            __end_of___flmul 03C1              __end_of___fltol 0DA1              __end_of___lldiv 0C46  
            ___awdiv@divisor 0028                        _T1CON 0010              __end_of___lwdiv 0A5C  
                      i1l192 1719                        i1l362 0650                        i1l371 0659  
                      i1l382 0804                        i1l526 1795                        i1l294 174F  
                      i1l374 0682                        i1l387 0A15              ___awdiv@counter 002D  
                      _TMR1H 000F                        _TMR1L 000E                        _PORTA 0005  
                      _PORTB 0006                        _PORTC 0007                        _PORTD 0008  
         __size_of_SCH_Start 0004                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        _SSPIF 0063  
           __end_of_SCH_Init 093D             __end_of_SCH_Stop 0A16               EEPROM_write@_x 002B  
            __end_of_average 09D6                        _blink 0061                        _state 00D8  
                      _up_sw 0067                        fpbase 004A                fp__ssd_update 0054  
           __end_ofi1___bmul 1796               __CFG_BOREN$OFF 0000                        pclath 000A  
                      status 0003                        wtemp0 007E   __end_ofi1_temp_control_off 1750  
    __end_of_SCH_Delete_Task 0B7B              _temp_hold_array 0190                 ??_I2C1_Start 0028  
       __size_of_EEPROM_init 0010         __size_of_EEPROM_read 0031              __initialization 0015  
               __end_of_main 07FD       __end_ofi1_ssd_turn_off 171A                    ??_I2C1_Rd 0028  
                  ??_I2C1_Wr 0028                       ??_main 0060            _SCH_Report_Status 0003  
    __end_of_SCH_Go_To_Sleep 16E4           ?_SCH_Report_Status 0070          EEPROM_write@address 0029  
                     _ADCON0 001F                       _ADCON1 009F           __end_of_I2C1_Start 16FC  
                     _ADRESH 001E                       _ADRESL 009E             ___awdiv@dividend 002A  
        ??_SCH_Report_Status 0028                       i1l3320 05A2                       i1l3170 178B  
                     i1l3322 05A4                       i1l3172 178D                       i1l3164 1782  
                     i1l3340 062F                       i1l3332 05AB                       i1l3324 05A6  
                     i1l3174 1794                       i1l3166 1783                       i1l3270 09DC  
                     i1l3350 0665                       i1l3334 05BD                       i1l3342 0644  
                     i1l3326 05AA                       i1l3318 059E                       i1l3168 1787  
                     i1l3280 0A08                       i1l3352 066B                       i1l3344 064A  
                     i1l3336 05D9                       i1l3282 0801                       i1l3266 09D6  
                     i1l3290 1741                       i1l3354 066C                       i1l3346 0654  
                     i1l3338 0606                       i1l3276 09DE                       i1l3268 09DC  
                     i1l3284 170E                       i1l3348 065B                       i1l3278 0A02  
                     i1l3286 1711                       i1l3358 0672                       i1l3288 1715  
                     i1l3694 067A                       _INTCON 000B                       u330_20 1794  
                     u330_21 1793                       u340_20 05BD                       u340_21 05BC  
                     u341_20 05D9                       u341_21 05D8                       u342_20 0606  
                     u342_21 0605                       u343_20 0650                       u343_21 064F  
                     u344_20 0654                       u344_21 0653                       u329_20 1787  
                     u329_21 1786                       u338_20 0A15                       u338_21 0A14  
                     u338_25 0A11                       u339_20 05A2                       u339_21 05A1  
        __size_of_SCH_Update 00F1                       _SSPADD 0093                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__fptable 0060             __end_of___xxtofl 1000  
             __CFG_PWRTE$OFF 0000            __end_of_SCH_Start 0805                       ___bmul 0805  
            ?i1_ssd_turn_off 0070                    ??___fldiv 0043                    ??___awdiv 002C  
                  ??___awmod 002C                    ??___flmul 0043                    ??___fltol 0059  
                  ??___lldiv 0030                    ??___lwdiv 002C              ADC_Read@channel 002C  
  __size_of_temp_sensor_init 0009    __size_of_temp_sensor_read 00DF    __end_of_SCH_Report_Status 0004  
           ___awdiv@quotient 002F              ___awmod@divisor 0028              ___awmod@counter 002D  
                     fp__led 0057                    ??_average 0030                       fptable 0045  
               __pdataCOMMON 007D                       fptotal 000E                    ?_I2C_Wait 0070  
         __size_of__Umul8_16 0029             __end_of_temp_set 0BDE                    ?_ADC_Init 0070  
                  ?_ADC_Read 0028                _measured_temp 0064                       saved_w 007E  
           _temp_control_off 1750             __end_of_ssd_init 17DF            _Last_error_code_G 00D7  
       __end_of_get_set_temp 088E                 ___xxtofl@arg 0037              __CFG_FOSC$EXTRC 0000  
               ___xxtofl@exp 0036                 ___xxtofl@val 002D      __end_of__initialization 0041  
           ?_SCH_Delete_Task 0070                   ___fltol@f1 0055          ___bmul@multiplicand 0028  
              ?_SCH_Add_Task 002C               __pcstackCOMMON 0070                    ?_SCH_Init 0070  
      __size_of_EEPROM_write 0021                    ?_SCH_Stop 0070            SCH_Add_Task@DELAY 002C  
               __pidataBANK0 07FD            SCH_Add_Task@Index 0033                    ?i1___bmul 0070  
                 ??_I2C_Wait 0028             ?_SCH_Go_To_Sleep 0070                   ??_ADC_Init 0028  
                 ??_ADC_Read 002A               fp__switch_scan 005A           __size_of_display7s 0061  
           i1___bmul@product 0073                   __pbssBANK0 0060                   __pbssBANK1 00A0  
                 __pbssBANK3 0190                 _EEPROM_write 17DF               ??_SCH_Add_Task 0030  
          __end_of__Umul8_16 08B7                   __pmaintext 076E                    SCH_Init@i 0030  
                 ??_SCH_Init 002F                      ?___bmul 0028                   ??_SCH_Stop 0074  
               ?_switch_init 0070                 ?_switch_scan 0070                    SCH_Stop@i 0078  
                    _I2C1_Rd 1733                      _I2C1_Wr 176F                   __pintentry 0004  
 __size_of_SCH_Report_Status 0001                 ??_SCH_Update 0020                   ??i1___bmul 0071  
                  ?___xxtofl 002D           __size_of_ssd_blink 0023                    _I2C1_Init 096E  
                  _I2C1_Stop 16FC           __size_of_sw_action 008B                      _SSPCON2 0091  
                    _SSPSTAT 0094   __end_of_SCH_Dispatch_Tasks 0E25           __end_of_SCH_Update 068F  
                  ?_temp_set 0070            __end_of_display7s 0B18              __size_of___bmul 0017  
                  ?_ssd_init 0070                      ___fldiv 03C1                      ___awdiv 0C46  
                    ___awmod 0A5C                      ___flmul 0060                      ___fltol 0D25  
                    ___lldiv 0BDE                      ___lwdiv 0A16             _temp_sensor_init 1705  
           _temp_sensor_read 068F           i1_temp_control_off 1741                      __ptext1 1705  
                    __ptext2 08E1                      __ptext3 083F                      __ptext4 16E4  
                    __ptext5 17C0                      __ptext6 090D                      __ptext7 0DA1  
                    __ptext8 081C                      __ptext9 17AB                      _average 09A2  
                    _down_sw 0066                 __size_of_led 0015                   ??___xxtofl 0031  
           ___awmod@dividend 002A        __size_of_get_set_temp 0028          ?i1_temp_control_off 0070  
                 ?_I2C1_Init 0036                      _samples 00D2          i1___bmul@multiplier 0072  
                 ?_I2C1_Stop 0070                      clrloop0 16EC         end_of_initialization 0041  
              ??_EEPROM_init 003E                ??_EEPROM_read 002B             ??i1_ssd_turn_off 0070  
            ___lldiv@divisor 0028         ??i1_temp_control_off 0070            _temp_control_init 083F  
            ___lldiv@counter 0035            __end_of_ssd_blink 083F     __end_of_temp_control_off 175F  
                 ??_temp_set 0029            __end_of_sw_action 0EB0           ?_temp_control_init 0070  
                 ??_ssd_init 0028                    _SCH_Start 0801                 _get_set_temp 0866  
        ??_temp_control_init 0028                   _ssd_select 00D9                ___xxtofl@sign 0035  
                 _power_mode 007D                   _ssd_update 0EB0         __end_of_SCH_Add_Task 0D25  
                ___fldiv@grs 004F                  ___fldiv@rem 0048            __size_of_I2C_Wait 000D  
          __size_of_ADC_Init 002C            __size_of_ADC_Read 002A                   average@sum 0033  
                ___flmul@grs 0049    __end_of_temp_control_init 0866                   display7s@v 002A  
              EEPROM_read@_x 002C                ?_ssd_turn_off 0070          __end_of_EEPROM_init 176F  
        __end_of_EEPROM_read 096E                   ?_SCH_Start 0070               __end_of___bmul 081C  
          __size_of_SCH_Init 0030            __size_of_SCH_Stop 0040         __size_of_switch_init 0007  
       __size_of_switch_scan 0015                __pidataCOMMON 07FF           SCH_Add_Task@PERIOD 002E  
          __size_ofi1___bmul 0015          start_initialization 0015                  ??_I2C1_Init 003A  
                ??_I2C1_Stop 0028                  __end_of_led 17AB                 _Error_code_G 00D6  
    SCH_Dispatch_Tasks@Index 00E4               ??_ssd_turn_off 0028        SCH_Add_Task@pFunction 0032  
                   ??___bmul 0029                     ?_I2C1_Rd 0070                     ?_I2C1_Wr 0070  
                  __Umul8_16 088E                  __pdataBANK0 0066     __size_of_SCH_Delete_Task 0063  
        fp__temp_sensor_read 0051                    ___fldiv@a 003B                    ___fldiv@b 003F  
                  ___flmul@a 003F                    ___flmul@b 003B                  __pbssCOMMON 007B  
                  ___latbits 0002                  ?_ssd_update 0070                __pcstackBANK0 0020  
              __pcstackBANK1 00DC            __size_of__fptable 001B            __size_of___xxtofl 00BC  
   __end_of_temp_sensor_init 170E     __end_of_temp_sensor_read 076E     __size_of_SCH_Go_To_Sleep 0002  
 __size_of_temp_control_init 0027                  _EEPROM_init 175F                  _EEPROM_read 093D  
           ___lwdiv@dividend 002A                    __pfunctab 0045           _SCH_Dispatch_Tasks 0DA1  
                   ?___fldiv 003B                     ?___awdiv 0028                  ??_SCH_Start 0070  
                   ?___awmod 0028                     ?___flmul 003B                     ?___fltol 0055  
                   ?___lldiv 0028                   ?__Umul8_16 0028                     ?___lwdiv 0028  
          __size_of_temp_set 0063            __size_of_ssd_init 001F        __size_of_SCH_Add_Task 0076  
                  _display7s 0AB7                     ?_average 0070          ?_SCH_Dispatch_Tasks 0070  
                   _I2C_Wait 1726                     _ADC_Init 08E1                     _ADC_Read 08B7  
           ___lwdiv@quotient 002D            interrupt_function 0004         ??_SCH_Dispatch_Tasks 00E1  
                  clear_ram0 16EB        i1___bmul@multiplicand 0070                   _I2C1_Start 16F3  
               _SCH_Add_Task 0CAF            ?_temp_control_off 0070                     _SCH_Init 090D  
        __size_of_ssd_update 0094                     _SCH_Stop 09D6           ??_temp_control_off 0028  
                  _ssd_blink 081C             __size_of_I2C1_Rd 000E             __size_of_I2C1_Wr 0012  
                  _sw_action 0E25                     i1___bmul 1781                   ?_display7s 0070  
            SCH_Update@Index 007A            ??_SCH_Delete_Task 002C         __end_of_ssd_turn_off 1726  
         _Error_tick_count_G 00D0  __size_ofi1_temp_control_off 000F            ??_SCH_Go_To_Sleep 0028  
                ??__Umul8_16 002A                   ?_ssd_blink 0070             __size_of___fldiv 01DD  
           __size_of___awdiv 0069             __size_of___awmod 005B             __size_of___flmul 0361  
           __size_of___fltol 007C             __size_of___lldiv 0068             __size_of___lwdiv 0046  
                 ?_sw_action 0070             __size_of_average 0034                     __fptable 0045  
                   ___xxtofl 0F44              ___lwdiv@divisor 0028              ___lwdiv@counter 002F  
                   __ptext10 1796                     __ptext11 0EB0                     __ptext20 0060  
                   __ptext12 068F                     __ptext21 088E                     __ptext13 0866  
                   __ptext30 093D                     __ptext22 03C1                     __ptext14 0B7B  
                   __ptext31 176F                     __ptext23 08B7                     __ptext15 1750  
                   __ptext40 0805                     __ptext32 16FC                     __ptext24 0E25  
                   __ptext16 09A2                     __ptext41 175F                     __ptext33 16F3  
                   __ptext25 17DF                     __ptext17 0A16                     __ptext42 096E  
                   __ptext34 1726                     __ptext26 0AB7                     __ptext18 0F44  
                   __ptext43 0BDE                     __ptext35 1733                     __ptext27 0A5C  
                   __ptext19 0D25                     __ptext44 059E                     __ptext36 0003  
                   __ptext28 0C46                     __ptext45 1741                     __ptext37 16E2  
                   __ptext29 171A                     __ptext46 170E                     __ptext38 0B18  
                   __ptext47 09D6                     __ptext39 0CAF                     __ptext48 1781  
                   __ptext49 0801                ?_EEPROM_write 0029                __size_of_main 008F  
                ?_I2C1_Start 0070                     _set_temp 0065                     _temp_set 0B7B  
              ??_switch_init 0028                ??_switch_scan 002E                     _ssd_init 17C0  
                   average@i 0035      __size_ofi1_ssd_turn_off 000C                  ??_display7s 0028  
               ??_ssd_update 0031                     intlevel1 0045               ??_EEPROM_write 002C  
          ?_temp_sensor_init 0070            ?_temp_sensor_read 0070             ___lldiv@dividend 002C  
               ?_EEPROM_init 0070                 ?_EEPROM_read 0029           ??_temp_sensor_init 0029  
         ??_temp_sensor_read 00DC                  _SCH_tasks_G 00A0              fp__get_set_temp 004E  
              I2C1_Init@freq 0036           __end_of_ssd_update 0F44                  ??_ssd_blink 0029  
                 _SCH_Update 059E                  ??_sw_action 002C       __Umul8_16@multiplicand 0028  
        __end_of_switch_init 16EB          __end_of_switch_scan 17C0        __size_of_ssd_turn_off 000C  
           ___lldiv@quotient 0031          __size_of_I2C1_Start 0009                  _timer_value 007B  
               I2C1_Wr@_data 0028           __size_of_I2C1_Init 0034           __size_of_I2C1_Stop 0009  
       __Umul8_16@multiplier 0030            __Umul8_16@product 002C  
