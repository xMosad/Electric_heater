Version 4.0 HI-TECH Software Intermediate Code
"7 SSD.c
[; ;SSD.c: 7: SSD_SELECT_t ssd_select = SSD_LEFT ;
[c E872 0 1 .. ]
[n E872 . SSD_LEFT SSD_RIGHT  ]
"8
[; ;SSD.c: 8: SSD_BLINK_t blink = SSD_ON ;
[c E876 0 1 .. ]
[n E876 . SSD_ON SSD_OFF  ]
"1499 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1499: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"340
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 340: extern volatile unsigned char PORTD __attribute__((address(0x008)));
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"1325
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1325: extern volatile unsigned char TRISA __attribute__((address(0x085)));
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"166
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 166: extern volatile unsigned char PORTA __attribute__((address(0x005)));
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"4 SSD.c
[; ;SSD.c: 4: extern uint8_t ssd_delay ;
[v _ssd_delay `uc ~T0 @X0 0 e ]
"5
[; ;SSD.c: 5: extern uint16_t ssd_timer;
[v _ssd_timer `ui ~T0 @X0 0 e ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"3 SSD.c
[; ;SSD.c: 3: uint8_t tens , ones ;
[v _tens `uc ~T0 @X0 1 e ]
[v _ones `uc ~T0 @X0 1 e ]
"7
[; ;SSD.c: 7: SSD_SELECT_t ssd_select = SSD_LEFT ;
[v _ssd_select `E872 ~T0 @X0 1 e ]
[i _ssd_select
. `E872 0
]
"8
[; ;SSD.c: 8: SSD_BLINK_t blink = SSD_ON ;
[v _blink `E876 ~T0 @X0 1 e ]
[i _blink
. `E876 0
]
"15
[; ;SSD.c: 15: void ssd_init(void){
[v _ssd_init `(v ~T0 @X0 1 ef ]
{
[e :U _ssd_init ]
[f ]
"17
[; ;SSD.c: 17:      (TRISD &= ~(255 << 0));
[e =& _TRISD -> ~ << -> 255 `i -> 0 `i `Vuc ]
"18
[; ;SSD.c: 18:      (PORTD &= ~(255 << 0));
[e =& _PORTD -> ~ << -> 255 `i -> 0 `i `Vuc ]
"20
[; ;SSD.c: 20:      (TRISA &= ~(1 << 4));
[e =& _TRISA -> ~ << -> 1 `i -> 4 `i `Vuc ]
"21
[; ;SSD.c: 21:      (PORTA &= ~(1 << 4));
[e =& _PORTA -> ~ << -> 1 `i -> 4 `i `Vuc ]
"22
[; ;SSD.c: 22:      (TRISA &= ~(1 << 5));
[e =& _TRISA -> ~ << -> 1 `i -> 5 `i `Vuc ]
"23
[; ;SSD.c: 23:      (PORTA &= ~(1 << 5));
[e =& _PORTA -> ~ << -> 1 `i -> 5 `i `Vuc ]
"24
[; ;SSD.c: 24: }
[e :UE 95 ]
}
"31
[; ;SSD.c: 31: uint8_t display7s(uint8_t v)
[v _display7s `(uc ~T0 @X0 1 ef1`uc ]
"32
[; ;SSD.c: 32: {
{
[e :U _display7s ]
"31
[; ;SSD.c: 31: uint8_t display7s(uint8_t v)
[v _v `uc ~T0 @X0 1 r1 ]
"32
[; ;SSD.c: 32: {
[f ]
"33
[; ;SSD.c: 33:   switch(v)
[e $U 98  ]
"34
[; ;SSD.c: 34:   {
{
"35
[; ;SSD.c: 35:     case 0:
[e :U 99 ]
"36
[; ;SSD.c: 36:       return 0x3F;
[e ) -> -> 63 `i `uc ]
[e $UE 96  ]
"37
[; ;SSD.c: 37:       break;
[e $U 97  ]
"38
[; ;SSD.c: 38:     case 1:
[e :U 100 ]
"39
[; ;SSD.c: 39:       return 0x06;
[e ) -> -> 6 `i `uc ]
[e $UE 96  ]
"40
[; ;SSD.c: 40:       break;
[e $U 97  ]
"41
[; ;SSD.c: 41:     case 2:
[e :U 101 ]
"42
[; ;SSD.c: 42:       return 0x5B;
[e ) -> -> 91 `i `uc ]
[e $UE 96  ]
"43
[; ;SSD.c: 43:       break;
[e $U 97  ]
"44
[; ;SSD.c: 44:     case 3:
[e :U 102 ]
"45
[; ;SSD.c: 45:       return 0x4F;
[e ) -> -> 79 `i `uc ]
[e $UE 96  ]
"46
[; ;SSD.c: 46:       break;
[e $U 97  ]
"47
[; ;SSD.c: 47:     case 4:
[e :U 103 ]
"48
[; ;SSD.c: 48:       return 0x66;
[e ) -> -> 102 `i `uc ]
[e $UE 96  ]
"49
[; ;SSD.c: 49:       break;
[e $U 97  ]
"50
[; ;SSD.c: 50:     case 5:
[e :U 104 ]
"51
[; ;SSD.c: 51:       return 0x6D;
[e ) -> -> 109 `i `uc ]
[e $UE 96  ]
"52
[; ;SSD.c: 52:       break;
[e $U 97  ]
"53
[; ;SSD.c: 53:     case 6:
[e :U 105 ]
"54
[; ;SSD.c: 54:       return 0x7D;
[e ) -> -> 125 `i `uc ]
[e $UE 96  ]
"55
[; ;SSD.c: 55:       break;
[e $U 97  ]
"56
[; ;SSD.c: 56:     case 7:
[e :U 106 ]
"57
[; ;SSD.c: 57:       return 0x07;
[e ) -> -> 7 `i `uc ]
[e $UE 96  ]
"58
[; ;SSD.c: 58:       break;
[e $U 97  ]
"59
[; ;SSD.c: 59:     case 8:
[e :U 107 ]
"60
[; ;SSD.c: 60:       return 0x7F;
[e ) -> -> 127 `i `uc ]
[e $UE 96  ]
"61
[; ;SSD.c: 61:       break;
[e $U 97  ]
"62
[; ;SSD.c: 62:     case 9:
[e :U 108 ]
"63
[; ;SSD.c: 63:       return 0x6F;
[e ) -> -> 111 `i `uc ]
[e $UE 96  ]
"64
[; ;SSD.c: 64:       break;
[e $U 97  ]
"65
[; ;SSD.c: 65:     case 10:
[e :U 109 ]
"66
[; ;SSD.c: 66:       return 0x77;
[e ) -> -> 119 `i `uc ]
[e $UE 96  ]
"67
[; ;SSD.c: 67:       break;
[e $U 97  ]
"68
[; ;SSD.c: 68:     case 11:
[e :U 110 ]
"69
[; ;SSD.c: 69:       return 0x7c;
[e ) -> -> 124 `i `uc ]
[e $UE 96  ]
"70
[; ;SSD.c: 70:       break;
[e $U 97  ]
"71
[; ;SSD.c: 71:     case 12:
[e :U 111 ]
"72
[; ;SSD.c: 72:       return 0x58;
[e ) -> -> 88 `i `uc ]
[e $UE 96  ]
"73
[; ;SSD.c: 73:       break;
[e $U 97  ]
"74
[; ;SSD.c: 74:     case 13:
[e :U 112 ]
"75
[; ;SSD.c: 75:       return 0x5E;
[e ) -> -> 94 `i `uc ]
[e $UE 96  ]
"76
[; ;SSD.c: 76:       break;
[e $U 97  ]
"77
[; ;SSD.c: 77:     case 14:
[e :U 113 ]
"78
[; ;SSD.c: 78:       return 0x79;
[e ) -> -> 121 `i `uc ]
[e $UE 96  ]
"79
[; ;SSD.c: 79:       break;
[e $U 97  ]
"80
[; ;SSD.c: 80:     case 15:
[e :U 114 ]
"81
[; ;SSD.c: 81:       return 0x71;
[e ) -> -> 113 `i `uc ]
[e $UE 96  ]
"82
[; ;SSD.c: 82:       break;
[e $U 97  ]
"83
[; ;SSD.c: 83:     default:
[e :U 115 ]
"84
[; ;SSD.c: 84:       return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 96  ]
"85
[; ;SSD.c: 85:       break;
[e $U 97  ]
"86
[; ;SSD.c: 86:   }
}
[e $U 97  ]
[e :U 98 ]
[e [\ -> _v `i , $ -> 0 `i 99
 , $ -> 1 `i 100
 , $ -> 2 `i 101
 , $ -> 3 `i 102
 , $ -> 4 `i 103
 , $ -> 5 `i 104
 , $ -> 6 `i 105
 , $ -> 7 `i 106
 , $ -> 8 `i 107
 , $ -> 9 `i 108
 , $ -> 10 `i 109
 , $ -> 11 `i 110
 , $ -> 12 `i 111
 , $ -> 13 `i 112
 , $ -> 14 `i 113
 , $ -> 15 `i 114
 115 ]
[e :U 97 ]
"88
[; ;SSD.c: 88: }
[e :UE 96 ]
}
"95
[; ;SSD.c: 95: void ssd_update(uint8_t temp){
[v _ssd_update `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _ssd_update ]
[v _temp `uc ~T0 @X0 1 r1 ]
[f ]
"96
[; ;SSD.c: 96:     ssd_delay += 1;
[e =+ _ssd_delay -> -> 1 `i `uc ]
"98
[; ;SSD.c: 98:     if (ssd_delay == 50){
[e $ ! == -> _ssd_delay `i -> 50 `i 117  ]
{
"100
[; ;SSD.c: 100:         switch (ssd_select){
[e $U 119  ]
{
"101
[; ;SSD.c: 101:             case SSD_LEFT :
[e :U 120 ]
"102
[; ;SSD.c: 102:                 tens = temp / 10 ;
[e = _tens -> / -> _temp `i -> 10 `i `uc ]
"103
[; ;SSD.c: 103:                 (PORTA |= (1 << 4));
[e =| _PORTA -> << -> 1 `i -> 4 `i `Vuc ]
"104
[; ;SSD.c: 104:                 (PORTA &= ~(1 << 5));
[e =& _PORTA -> ~ << -> 1 `i -> 5 `i `Vuc ]
"105
[; ;SSD.c: 105:                 PORTD = display7s(tens);
[e = _PORTD ( _display7s (1 _tens ]
"106
[; ;SSD.c: 106:                 ssd_delay = 0 ;
[e = _ssd_delay -> -> 0 `i `uc ]
"107
[; ;SSD.c: 107:                 ssd_select = SSD_RIGHT ;
[e = _ssd_select . `E872 1 ]
"108
[; ;SSD.c: 108:                 break ;
[e $U 118  ]
"109
[; ;SSD.c: 109:             case SSD_RIGHT :
[e :U 121 ]
"110
[; ;SSD.c: 110:                  ones = temp % 10 ;
[e = _ones -> % -> _temp `i -> 10 `i `uc ]
"111
[; ;SSD.c: 111:                  (PORTA |= (1 << 5));
[e =| _PORTA -> << -> 1 `i -> 5 `i `Vuc ]
"112
[; ;SSD.c: 112:                  (PORTA &= ~(1 << 4));
[e =& _PORTA -> ~ << -> 1 `i -> 4 `i `Vuc ]
"113
[; ;SSD.c: 113:                  PORTD = display7s(ones);
[e = _PORTD ( _display7s (1 _ones ]
"114
[; ;SSD.c: 114:                  ssd_delay = 0 ;
[e = _ssd_delay -> -> 0 `i `uc ]
"115
[; ;SSD.c: 115:                  ssd_select = SSD_LEFT ;
[e = _ssd_select . `E872 0 ]
"116
[; ;SSD.c: 116:                  break;
[e $U 118  ]
"117
[; ;SSD.c: 117:             default :
[e :U 122 ]
"118
[; ;SSD.c: 118:                 break ;
[e $U 118  ]
"119
[; ;SSD.c: 119:         }
}
[e $U 118  ]
[e :U 119 ]
[e [\ -> _ssd_select `ui , $ -> . `E872 0 `ui 120
 , $ -> . `E872 1 `ui 121
 122 ]
[e :U 118 ]
"120
[; ;SSD.c: 120:     }
}
[e :U 117 ]
"121
[; ;SSD.c: 121: }
[e :UE 116 ]
}
"128
[; ;SSD.c: 128: void ssd_turn_off(void){
[v _ssd_turn_off `(v ~T0 @X0 1 ef ]
{
[e :U _ssd_turn_off ]
[f ]
"129
[; ;SSD.c: 129:     (PORTD &= ~(255 << 0));
[e =& _PORTD -> ~ << -> 255 `i -> 0 `i `Vuc ]
"130
[; ;SSD.c: 130:     (PORTA &= ~(1 << 4));
[e =& _PORTA -> ~ << -> 1 `i -> 4 `i `Vuc ]
"131
[; ;SSD.c: 131:     (PORTA &= ~(1 << 5));
[e =& _PORTA -> ~ << -> 1 `i -> 5 `i `Vuc ]
"132
[; ;SSD.c: 132:     ssd_delay = 0 ;
[e = _ssd_delay -> -> 0 `i `uc ]
"133
[; ;SSD.c: 133: }
[e :UE 123 ]
}
"140
[; ;SSD.c: 140: void ssd_blink(uint8_t e_temp){
[v _ssd_blink `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _ssd_blink ]
[v _e_temp `uc ~T0 @X0 1 r1 ]
[f ]
"141
[; ;SSD.c: 141:      ssd_timer += 1;
[e =+ _ssd_timer -> -> 1 `i `ui ]
"143
[; ;SSD.c: 143:      switch (blink){
[e $U 126  ]
{
"145
[; ;SSD.c: 145:         case SSD_ON :
[e :U 127 ]
"146
[; ;SSD.c: 146:             if (ssd_timer < 1000){
[e $ ! < _ssd_timer -> -> 1000 `i `ui 128  ]
{
"147
[; ;SSD.c: 147:                 ssd_update(e_temp);
[e ( _ssd_update (1 _e_temp ]
"148
[; ;SSD.c: 148:                 }
}
[e $U 129  ]
"149
[; ;SSD.c: 149:             else{
[e :U 128 ]
{
"150
[; ;SSD.c: 150:                 blink = SSD_OFF ;
[e = _blink . `E876 1 ]
"151
[; ;SSD.c: 151:                 ssd_timer = 0 ;
[e = _ssd_timer -> -> 0 `i `ui ]
"152
[; ;SSD.c: 152:                 ssd_turn_off();
[e ( _ssd_turn_off ..  ]
"153
[; ;SSD.c: 153:             }
}
[e :U 129 ]
"154
[; ;SSD.c: 154:             break ;
[e $U 125  ]
"156
[; ;SSD.c: 156:         case SSD_OFF :
[e :U 130 ]
"157
[; ;SSD.c: 157:             if (ssd_timer == 1000){
[e $ ! == _ssd_timer -> -> 1000 `i `ui 131  ]
{
"158
[; ;SSD.c: 158:                 blink = SSD_ON ;
[e = _blink . `E876 0 ]
"159
[; ;SSD.c: 159:                 ssd_timer = 0 ;
[e = _ssd_timer -> -> 0 `i `ui ]
"160
[; ;SSD.c: 160:             }
}
[e $U 132  ]
"161
[; ;SSD.c: 161:             else {
[e :U 131 ]
{
"163
[; ;SSD.c: 163:             }
}
[e :U 132 ]
"164
[; ;SSD.c: 164:             break;
[e $U 125  ]
"165
[; ;SSD.c: 165:         default : break ;
[e :U 133 ]
[e $U 125  ]
"166
[; ;SSD.c: 166:      }
}
[e $U 125  ]
[e :U 126 ]
[e [\ -> _blink `ui , $ -> . `E876 0 `ui 127
 , $ -> . `E876 1 `ui 130
 133 ]
[e :U 125 ]
"167
[; ;SSD.c: 167: }
[e :UE 124 ]
}
