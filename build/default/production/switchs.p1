Version 4.0 HI-TECH Software Intermediate Code
"11 switchs.c
[; ;switchs.c: 11: SWITCH_STATE_t up_sw = RELEASED ;
[c E930 0 1 2 3 .. ]
[n E930 . PRE_PRESSED PRESSED PRE_RELEASED RELEASED  ]
"1375 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1375: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 454: extern volatile unsigned char INTCON __attribute__((address(0x00B)));
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"216
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 216: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"26 ./switchs.h
[; ;./switchs.h: 26: void sw_action(void);
[v _sw_action `(v ~T0 @X0 0 ef ]
"59 switchs.c
[; ;switchs.c: 59:                 mode = SETTING_MODE ;
[c E8 0 1 .. ]
[n E8 . NORMAL_MODE SETTING_MODE  ]
"6
[; ;switchs.c: 6: extern MODE_STATE_t mode ;
[v _mode `E8 ~T0 @X0 0 e ]
"5
[; ;switchs.c: 5: extern uint8_t set_temp ;
[v _set_temp `uc ~T0 @X0 0 e ]
"8 ./eeprom.h
[; ;./eeprom.h: 8: void EEPROM_write (uint16_t address , uint8_t _x);
[v _EEPROM_write `(v ~T0 @X0 0 ef2`ui`uc ]
"89 switchs.c
[; ;switchs.c: 89:                 blink = SSD_ON ;
[c E903 0 1 .. ]
[n E903 . SSD_ON SSD_OFF  ]
"7
[; ;switchs.c: 7: extern SSD_BLINK_t blink ;
[v _blink `E903 ~T0 @X0 0 e ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"10 switchs.c
[; ;switchs.c: 10: uint16_t switch_wait;
[v _switch_wait `ui ~T0 @X0 1 e ]
"11
[; ;switchs.c: 11: SWITCH_STATE_t up_sw = RELEASED ;
[v _up_sw `E930 ~T0 @X0 1 e ]
[i _up_sw
. `E930 3
]
"12
[; ;switchs.c: 12: SWITCH_STATE_t down_sw = RELEASED ;
[v _down_sw `E930 ~T0 @X0 1 e ]
[i _down_sw
. `E930 3
]
"13
[; ;switchs.c: 13: SWITCH_STATE_t samples[2];
[v _samples `E930 ~T0 @X0 -> 2 `i e ]
"21
[; ;switchs.c: 21: void switch_init(void){
[v _switch_init `(v ~T0 @X0 1 ef ]
{
[e :U _switch_init ]
[f ]
"23
[; ;switchs.c: 23:      (TRISB |= (1 << 2));
[e =| _TRISB -> << -> 1 `i -> 2 `i `Vuc ]
"24
[; ;switchs.c: 24:      (TRISB |= (1 << 1));
[e =| _TRISB -> << -> 1 `i -> 1 `i `Vuc ]
"25
[; ;switchs.c: 25:      (TRISB |= (1 << 0));
[e =| _TRISB -> << -> 1 `i -> 0 `i `Vuc ]
"26
[; ;switchs.c: 26:      (INTCON |= (1 << 4));
[e =| _INTCON -> << -> 1 `i -> 4 `i `Vuc ]
"27
[; ;switchs.c: 27: }
[e :UE 96 ]
}
"34
[; ;switchs.c: 34: void switch_scan(void){
[v _switch_scan `(v ~T0 @X0 1 ef ]
{
[e :U _switch_scan ]
[f ]
"37
[; ;switchs.c: 37:        if ( !((PORTB & (1<<2)))){
[e $ ! ! != & -> _PORTB `i << -> 1 `i -> 2 `i -> 0 `i 98  ]
{
"38
[; ;switchs.c: 38:           up_sw = PRESSED ;
[e = _up_sw . `E930 1 ]
"39
[; ;switchs.c: 39:        }
}
[e $U 99  ]
"40
[; ;switchs.c: 40:        else if ( !((PORTB & (1<<1)))){
[e :U 98 ]
[e $ ! ! != & -> _PORTB `i << -> 1 `i -> 1 `i -> 0 `i 100  ]
{
"41
[; ;switchs.c: 41:           down_sw = PRESSED ;
[e = _down_sw . `E930 1 ]
"42
[; ;switchs.c: 42:        }
}
[e $U 101  ]
"43
[; ;switchs.c: 43:        else {
[e :U 100 ]
{
"45
[; ;switchs.c: 45:        }
}
[e :U 101 ]
[e :U 99 ]
"46
[; ;switchs.c: 46:        sw_action();
[e ( _sw_action ..  ]
"47
[; ;switchs.c: 47: }
[e :UE 97 ]
}
"54
[; ;switchs.c: 54: void sw_action(void){
[v _sw_action `(v ~T0 @X0 1 ef ]
{
[e :U _sw_action ]
[f ]
"55
[; ;switchs.c: 55:     switch (mode){
[e $U 104  ]
{
"57
[; ;switchs.c: 57:         case NORMAL_MODE :
[e :U 105 ]
"58
[; ;switchs.c: 58:             if ( (up_sw == PRESSED ) || (down_sw == PRESSED) ) {
[e $ ! || == -> _up_sw `ui -> . `E930 1 `ui == -> _down_sw `ui -> . `E930 1 `ui 106  ]
{
"59
[; ;switchs.c: 59:                 mode = SETTING_MODE ;
[e = _mode . `E8 1 ]
"60
[; ;switchs.c: 60:                 up_sw = RELEASED ;
[e = _up_sw . `E930 3 ]
"61
[; ;switchs.c: 61:                 down_sw = RELEASED ;
[e = _down_sw . `E930 3 ]
"62
[; ;switchs.c: 62:             }
}
[e $U 107  ]
"63
[; ;switchs.c: 63:             else{
[e :U 106 ]
{
"65
[; ;switchs.c: 65:             }
}
[e :U 107 ]
"66
[; ;switchs.c: 66:             break;
[e $U 103  ]
"68
[; ;switchs.c: 68:         case SETTING_MODE :
[e :U 108 ]
"70
[; ;switchs.c: 70:             if (switch_wait < 5000){
[e $ ! < _switch_wait -> -> 5000 `i `ui 109  ]
{
"71
[; ;switchs.c: 71:                 if ( (up_sw == PRESSED) && (set_temp < 75)){
[e $ ! && == -> _up_sw `ui -> . `E930 1 `ui < -> _set_temp `i -> 75 `i 110  ]
{
"72
[; ;switchs.c: 72:                     set_temp += 5 ;
[e =+ _set_temp -> -> 5 `i `uc ]
"73
[; ;switchs.c: 73:                     switch_wait = 0 ;
[e = _switch_wait -> -> 0 `i `ui ]
"74
[; ;switchs.c: 74:                     up_sw = RELEASED ;
[e = _up_sw . `E930 3 ]
"75
[; ;switchs.c: 75:                 }
}
[e $U 111  ]
"76
[; ;switchs.c: 76:                 else if ( (down_sw == PRESSED) && (set_temp > 35)){
[e :U 110 ]
[e $ ! && == -> _down_sw `ui -> . `E930 1 `ui > -> _set_temp `i -> 35 `i 112  ]
{
"77
[; ;switchs.c: 77:                     set_temp -= 5 ;
[e =- _set_temp -> -> 5 `i `uc ]
"78
[; ;switchs.c: 78:                     switch_wait = 0 ;
[e = _switch_wait -> -> 0 `i `ui ]
"79
[; ;switchs.c: 79:                     down_sw = RELEASED ;
[e = _down_sw . `E930 3 ]
"80
[; ;switchs.c: 80:                 }
}
[e $U 113  ]
"81
[; ;switchs.c: 81:                 else {
[e :U 112 ]
{
"82
[; ;switchs.c: 82:                     switch_wait += (200) ;
[e =+ _switch_wait -> -> 200 `i `ui ]
"83
[; ;switchs.c: 83:                 }
}
[e :U 113 ]
[e :U 111 ]
"84
[; ;switchs.c: 84:             }
}
[e $U 114  ]
"85
[; ;switchs.c: 85:             else {
[e :U 109 ]
{
"86
[; ;switchs.c: 86:                 mode = NORMAL_MODE ;
[e = _mode . `E8 0 ]
"87
[; ;switchs.c: 87:                 switch_wait = 0 ;
[e = _switch_wait -> -> 0 `i `ui ]
"88
[; ;switchs.c: 88:                 EEPROM_write(0xff , set_temp);
[e ( _EEPROM_write (2 , -> -> 255 `i `ui _set_temp ]
"89
[; ;switchs.c: 89:                 blink = SSD_ON ;
[e = _blink . `E903 0 ]
"90
[; ;switchs.c: 90:             }
}
[e :U 114 ]
"91
[; ;switchs.c: 91:             break;
[e $U 103  ]
"92
[; ;switchs.c: 92:         default :
[e :U 115 ]
"94
[; ;switchs.c: 94:             break ;
[e $U 103  ]
"95
[; ;switchs.c: 95:     }
}
[e $U 103  ]
[e :U 104 ]
[e [\ -> _mode `ui , $ -> . `E8 0 `ui 105
 , $ -> . `E8 1 `ui 108
 115 ]
[e :U 103 ]
"96
[; ;switchs.c: 96: }
[e :UE 102 ]
}
