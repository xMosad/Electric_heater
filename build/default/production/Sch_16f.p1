Version 4.0 HI-TECH Software Intermediate Code
[v F924 `(v ~T0 @X0 0 tf ]
"55 ./Sch_16f.h
[; ;./Sch_16f.h: 55: {
[s S95 `*F924 1 `ui 1 `ui 1 `uc 1 ]
[n S95 . pTask Delay Period RunMe ]
[t ~ __interrupt . k ]
[t T2 __interrupt ]
"532 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 532: extern volatile unsigned char PIR1 __attribute__((address(0x00C)));
[v _PIR1 `Vuc ~T0 @X0 0 e@12 ]
"641
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 641: extern volatile unsigned char TMR1L __attribute__((address(0x00E)));
[v _TMR1L `Vuc ~T0 @X0 0 e@14 ]
"648
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 648: extern volatile unsigned char TMR1H __attribute__((address(0x00F)));
[v _TMR1H `Vuc ~T0 @X0 0 e@15 ]
[v F955 `(v ~T0 @X0 0 tf ]
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 454: extern volatile unsigned char INTCON __attribute__((address(0x00B)));
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"72 Sch_16f.c
[; ;Sch_16f.c: 72:                 power_mode = OFF_STATE ;
[c E860 0 1 .. ]
[n E860 . ON_STATE OFF_STATE  ]
"19
[; ;Sch_16f.c: 19: extern POWER_MODES_t power_mode ;
[v _power_mode `E860 ~T0 @X0 0 e ]
"12 ./SSD.h
[; ;./SSD.h: 12: void ssd_turn_off(void);
[v _ssd_turn_off `(v ~T0 @X0 0 ef ]
"18 ./temp_control.h
[; ;./temp_control.h: 18: void temp_control_off(void);
[v _temp_control_off `(v ~T0 @X0 0 ef ]
"76 ./Sch_16f.h
[; ;./Sch_16f.h: 76: void SCH_Stop(void);
[v _SCH_Stop `(v ~T0 @X0 0 ef ]
"75
[; ;./Sch_16f.h: 75: void SCH_Start(void);
[v _SCH_Start `(v ~T0 @X0 0 ef ]
"70
[; ;./Sch_16f.h: 70: tByte SCH_Delete_Task(const tByte);
[v _SCH_Delete_Task `(uc ~T0 @X0 0 ef1`Cuc ]
"655 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 655: extern volatile unsigned char T1CON __attribute__((address(0x010)));
[v _T1CON `Vuc ~T0 @X0 0 e@16 ]
"1618
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1618: extern volatile unsigned char PIE1 __attribute__((address(0x08C)));
[v _PIE1 `Vuc ~T0 @X0 0 e@140 ]
[v F962 `(v ~T0 @X0 0 tf ]
[v F964 `(v ~T0 @X0 0 t? ]
[v F969 `(v ~T0 @X0 0 tf ]
[v F971 `(v ~T0 @X0 0 tf ]
"74 ./Sch_16f.h
[; ;./Sch_16f.h: 74: void SCH_Report_Status(void);
[v _SCH_Report_Status `(v ~T0 @X0 0 ef ]
[v F981 `(v ~T0 @X0 0 tf ]
[v F983 `(v ~T0 @X0 0 tf ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"8 Sch_16f.c
[; ;Sch_16f.c: 8: static tWord Error_tick_count_G;
[v _Error_tick_count_G `ui ~T0 @X0 1 s ]
"9
[; ;Sch_16f.c: 9: static tByte Last_error_code_G;
[v _Last_error_code_G `uc ~T0 @X0 1 s ]
"11
[; ;Sch_16f.c: 11: tWord timer_value ;
[v _timer_value `ui ~T0 @X0 1 e ]
"14
[; ;Sch_16f.c: 14: sTask SCH_tasks_G[(7)];
[v _SCH_tasks_G `S95 ~T0 @X0 -> 7 `i e ]
"15
[; ;Sch_16f.c: 15: tByte Error_code_G = 0;
[v _Error_code_G `uc ~T0 @X0 1 e ]
[i _Error_code_G
-> -> 0 `i `uc
]
[v $root$_SCH_Update `(v ~T0 @X0 0 e ]
"35
[; ;Sch_16f.c: 35: void __attribute__((picinterrupt(("")))) SCH_Update (void){
[v _SCH_Update `(v ~T2 @X0 1 ef ]
{
[e :U _SCH_Update ]
[f ]
"36
[; ;Sch_16f.c: 36:     if (PIR1 & (1 << 0)){
[e $ ! != & -> _PIR1 `i << -> 1 `i -> 0 `i -> 0 `i 97  ]
{
"38
[; ;Sch_16f.c: 38:         TMR1L = timer_value ;
[e = _TMR1L -> _timer_value `uc ]
"39
[; ;Sch_16f.c: 39:         TMR1H = ( timer_value >> 8 ) ;
[e = _TMR1H -> >> _timer_value -> 8 `i `uc ]
"40
[; ;Sch_16f.c: 40:         PIR1 &= ~ (1 << 0) ;
[e =& _PIR1 -> ~ << -> 1 `i -> 0 `i `Vuc ]
"41
[; ;Sch_16f.c: 41:         tByte Index;
[v _Index `uc ~T0 @X0 1 a ]
"43
[; ;Sch_16f.c: 43:         for (Index = 0; Index < (7); Index++)
{
[e = _Index -> -> 0 `i `uc ]
[e $ < -> _Index `i -> 7 `i 98  ]
[e $U 99  ]
[e :U 98 ]
"44
[; ;Sch_16f.c: 44:         {
{
"46
[; ;Sch_16f.c: 46:             if (SCH_tasks_G[Index].pTask)
[e $ ! != . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 0 -> -> 0 `i `*F955 101  ]
"47
[; ;Sch_16f.c: 47:             {
{
"48
[; ;Sch_16f.c: 48:                 if (SCH_tasks_G[Index].Delay == 0)
[e $ ! == . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 1 -> -> 0 `i `ui 102  ]
"49
[; ;Sch_16f.c: 49:                 {
{
"51
[; ;Sch_16f.c: 51:                     SCH_tasks_G[Index].RunMe += 1;
[e =+ . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 3 -> -> 1 `i `uc ]
"52
[; ;Sch_16f.c: 52:                     if (SCH_tasks_G[Index].Period)
[e $ ! != . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 2 -> -> 0 `i `ui 103  ]
"53
[; ;Sch_16f.c: 53:                     {
{
"55
[; ;Sch_16f.c: 55:                         SCH_tasks_G[Index].Delay = SCH_tasks_G[Index].Period;
[e = . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 1 . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 2 ]
"56
[; ;Sch_16f.c: 56:                     }
}
[e :U 103 ]
"57
[; ;Sch_16f.c: 57:                 }
}
[e $U 104  ]
"58
[; ;Sch_16f.c: 58:                 else
[e :U 102 ]
"59
[; ;Sch_16f.c: 59:                 {
{
"61
[; ;Sch_16f.c: 61:                     SCH_tasks_G[Index].Delay -= (1);
[e =- . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 1 -> -> 1 `i `ui ]
"62
[; ;Sch_16f.c: 62:                 }
}
[e :U 104 ]
"63
[; ;Sch_16f.c: 63:             }
}
[e :U 101 ]
"64
[; ;Sch_16f.c: 64:         }
}
[e ++ _Index -> -> 1 `i `uc ]
[e $ < -> _Index `i -> 7 `i 98  ]
[e :U 99 ]
}
"65
[; ;Sch_16f.c: 65:     }
}
[e :U 97 ]
"67
[; ;Sch_16f.c: 67:     if (INTCON & (1 << 1)){
[e $ ! != & -> _INTCON `i << -> 1 `i -> 1 `i -> 0 `i 105  ]
{
"68
[; ;Sch_16f.c: 68:         (INTCON &= ~(1 << 1));
[e =& _INTCON -> ~ << -> 1 `i -> 1 `i `Vuc ]
"69
[; ;Sch_16f.c: 69:         switch (power_mode){
[e $U 107  ]
{
"71
[; ;Sch_16f.c: 71:             case ON_STATE :
[e :U 108 ]
"72
[; ;Sch_16f.c: 72:                 power_mode = OFF_STATE ;
[e = _power_mode . `E860 1 ]
"73
[; ;Sch_16f.c: 73:                 ssd_turn_off();
[e ( _ssd_turn_off ..  ]
"74
[; ;Sch_16f.c: 74:                 temp_control_off();
[e ( _temp_control_off ..  ]
"75
[; ;Sch_16f.c: 75:                 SCH_Stop();
[e ( _SCH_Stop ..  ]
"76
[; ;Sch_16f.c: 76:                 break;
[e $U 106  ]
"78
[; ;Sch_16f.c: 78:             case OFF_STATE :
[e :U 109 ]
"79
[; ;Sch_16f.c: 79:                 power_mode = ON_STATE ;
[e = _power_mode . `E860 0 ]
"80
[; ;Sch_16f.c: 80:                 SCH_Start();
[e ( _SCH_Start ..  ]
"81
[; ;Sch_16f.c: 81:                 break;
[e $U 106  ]
"82
[; ;Sch_16f.c: 82:         }
}
[e $U 106  ]
[e :U 107 ]
[e [\ -> _power_mode `ui , $ -> . `E860 0 `ui 108
 , $ -> . `E860 1 `ui 109
 106 ]
[e :U 106 ]
"83
[; ;Sch_16f.c: 83:     }
}
[e :U 105 ]
"84
[; ;Sch_16f.c: 84: }
[e :UE 96 ]
}
"93
[; ;Sch_16f.c: 93: void SCH_Init(void)
[v _SCH_Init `(v ~T0 @X0 1 ef ]
"94
[; ;Sch_16f.c: 94: {
{
[e :U _SCH_Init ]
[f ]
"95
[; ;Sch_16f.c: 95:     tByte i;
[v _i `uc ~T0 @X0 1 a ]
"96
[; ;Sch_16f.c: 96:     for (i = 0; i < (7); i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 7 `i 111  ]
[e $U 112  ]
[e :U 111 ]
"97
[; ;Sch_16f.c: 97:     {
{
"98
[; ;Sch_16f.c: 98:         SCH_Delete_Task(i);
[e ( _SCH_Delete_Task (1 _i ]
"99
[; ;Sch_16f.c: 99:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 111  ]
[e :U 112 ]
}
"103
[; ;Sch_16f.c: 103:     Error_code_G = 0;
[e = _Error_code_G -> -> 0 `i `uc ]
"106
[; ;Sch_16f.c: 106:     T1CON = 0X30;
[e = _T1CON -> -> 48 `i `uc ]
"107
[; ;Sch_16f.c: 107:     PIR1 &= ~ (1 << 0) ;
[e =& _PIR1 -> ~ << -> 1 `i -> 0 `i `Vuc ]
"108
[; ;Sch_16f.c: 108:     PIE1 |= (1 << 0);
[e =| _PIE1 -> << -> 1 `i -> 0 `i `Vuc ]
"109
[; ;Sch_16f.c: 109:     INTCON |= (1 << 7);
[e =| _INTCON -> << -> 1 `i -> 7 `i `Vuc ]
"110
[; ;Sch_16f.c: 110:     INTCON |= (1 << 6);
[e =| _INTCON -> << -> 1 `i -> 6 `i `Vuc ]
"112
[; ;Sch_16f.c: 112:     timer_value = 65536 - ( ((1) * (8000000) ) / (1000 * 4 * 8 ) );
[e = _timer_value -> - -> 65536 `l / * -> -> 1 `i `l -> 8000000 `l -> * * -> 1000 `i -> 4 `i -> 8 `i `l `ui ]
"113
[; ;Sch_16f.c: 113:     TMR1L = timer_value ;
[e = _TMR1L -> _timer_value `uc ]
"114
[; ;Sch_16f.c: 114:     TMR1H = ( timer_value >> 8 ) ;
[e = _TMR1H -> >> _timer_value -> 8 `i `uc ]
"115
[; ;Sch_16f.c: 115: }
[e :UE 110 ]
}
"122
[; ;Sch_16f.c: 122: void SCH_Start(void)
[v _SCH_Start `(v ~T0 @X0 1 ef ]
"123
[; ;Sch_16f.c: 123: {
{
[e :U _SCH_Start ]
[f ]
"124
[; ;Sch_16f.c: 124:     (T1CON |= (1 << 0));
[e =| _T1CON -> << -> 1 `i -> 0 `i `Vuc ]
"125
[; ;Sch_16f.c: 125: }
[e :UE 114 ]
}
"131
[; ;Sch_16f.c: 131: void SCH_Stop(void)
[v _SCH_Stop `(v ~T0 @X0 1 ef ]
"132
[; ;Sch_16f.c: 132: {
{
[e :U _SCH_Stop ]
[f ]
"133
[; ;Sch_16f.c: 133:     (T1CON &= ~(1 << 0));
[e =& _T1CON -> ~ << -> 1 `i -> 0 `i `Vuc ]
"134
[; ;Sch_16f.c: 134:     int i = 0 ;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
"135
[; ;Sch_16f.c: 135:     for (i = 0 ; i < (7) ; i++){
{
[e = _i -> 0 `i ]
[e $ < _i -> 7 `i 116  ]
[e $U 117  ]
[e :U 116 ]
{
"136
[; ;Sch_16f.c: 136:         SCH_tasks_G[i].Delay = SCH_tasks_G[i].Period;
[e = . *U + &U _SCH_tasks_G * -> -> _i `ui `ux -> -> # *U &U _SCH_tasks_G `ui `ux 1 . *U + &U _SCH_tasks_G * -> -> _i `ui `ux -> -> # *U &U _SCH_tasks_G `ui `ux 2 ]
"137
[; ;Sch_16f.c: 137:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 7 `i 116  ]
[e :U 117 ]
}
"138
[; ;Sch_16f.c: 138: }
[e :UE 115 ]
}
"146
[; ;Sch_16f.c: 146: tByte SCH_Add_Task(void (* pFunction)(),
[v _SCH_Add_Task `(uc ~T0 @X0 1 ef3`*F962`Cui`Cui ]
"149
[; ;Sch_16f.c: 149:     {
{
[e :U _SCH_Add_Task ]
"146
[; ;Sch_16f.c: 146: tByte SCH_Add_Task(void (* pFunction)(),
[v _pFunction `*F964 ~T0 @X0 1 r1 ]
"147
[; ;Sch_16f.c: 147:     const tWord DELAY,
[v _DELAY `Cui ~T0 @X0 1 r2 ]
"148
[; ;Sch_16f.c: 148:     const tWord PERIOD)
[v _PERIOD `Cui ~T0 @X0 1 r3 ]
"149
[; ;Sch_16f.c: 149:     {
[f ]
"150
[; ;Sch_16f.c: 150:     tByte Index = 0;
[v _Index `uc ~T0 @X0 1 a ]
[e = _Index -> -> 0 `i `uc ]
"152
[; ;Sch_16f.c: 152:     while ((SCH_tasks_G[Index].pTask != 0) && (Index < (7)))
[e $U 120  ]
[e :U 121 ]
"153
[; ;Sch_16f.c: 153:     {
{
"154
[; ;Sch_16f.c: 154:         Index++;
[e ++ _Index -> -> 1 `i `uc ]
"155
[; ;Sch_16f.c: 155:     }
}
[e :U 120 ]
"152
[; ;Sch_16f.c: 152:     while ((SCH_tasks_G[Index].pTask != 0) && (Index < (7)))
[e $ && != . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 0 -> -> 0 `i `*F969 < -> _Index `i -> 7 `i 121  ]
[e :U 122 ]
"157
[; ;Sch_16f.c: 157:     if (Index == (7))
[e $ ! == -> _Index `i -> 7 `i 123  ]
"158
[; ;Sch_16f.c: 158:     {
{
"164
[; ;Sch_16f.c: 164:         return (7);
[e ) -> -> 7 `i `uc ]
[e $UE 119  ]
"165
[; ;Sch_16f.c: 165:     }
}
[e :U 123 ]
"167
[; ;Sch_16f.c: 167:     SCH_tasks_G[Index].pTask = pFunction;
[e = . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 0 -> _pFunction `*F971 ]
"168
[; ;Sch_16f.c: 168:     SCH_tasks_G[Index].Delay = DELAY;
[e = . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 1 _DELAY ]
"169
[; ;Sch_16f.c: 169:     SCH_tasks_G[Index].Period = PERIOD;
[e = . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 2 _PERIOD ]
"170
[; ;Sch_16f.c: 170:     SCH_tasks_G[Index].RunMe = 0;
[e = . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 3 -> -> 0 `i `uc ]
"171
[; ;Sch_16f.c: 171:     return Index;
[e ) _Index ]
[e $UE 119  ]
"172
[; ;Sch_16f.c: 172: }
[e :UE 119 ]
}
"179
[; ;Sch_16f.c: 179: void SCH_Go_To_Sleep(void)
[v _SCH_Go_To_Sleep `(v ~T0 @X0 1 ef ]
"180
[; ;Sch_16f.c: 180: {
{
[e :U _SCH_Go_To_Sleep ]
[f ]
"181
[; ;Sch_16f.c: 181:    __asm(" SLEEP ");
[; <"  SLEEP  ;# ">
"182
[; ;Sch_16f.c: 182: }
[e :UE 124 ]
}
"191
[; ;Sch_16f.c: 191: void SCH_Dispatch_Tasks(void)
[v _SCH_Dispatch_Tasks `(v ~T0 @X0 1 ef ]
"192
[; ;Sch_16f.c: 192: {
{
[e :U _SCH_Dispatch_Tasks ]
[f ]
"193
[; ;Sch_16f.c: 193:     tByte Index;
[v _Index `uc ~T0 @X0 1 a ]
"195
[; ;Sch_16f.c: 195:     for (Index = 0; Index < (7); Index++)
{
[e = _Index -> -> 0 `i `uc ]
[e $ < -> _Index `i -> 7 `i 126  ]
[e $U 127  ]
[e :U 126 ]
"196
[; ;Sch_16f.c: 196:     {
{
"197
[; ;Sch_16f.c: 197:         if (SCH_tasks_G[Index].RunMe > 0)
[e $ ! > -> . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 3 `i -> 0 `i 129  ]
"198
[; ;Sch_16f.c: 198:         {
{
"199
[; ;Sch_16f.c: 199:             (*SCH_tasks_G[Index].pTask)();
[e ( *U . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 0 ..  ]
"200
[; ;Sch_16f.c: 200:             SCH_tasks_G[Index].RunMe -= 1;
[e =- . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 3 -> -> 1 `i `uc ]
"203
[; ;Sch_16f.c: 203:             if (SCH_tasks_G[Index].Period == 0)
[e $ ! == . *U + &U _SCH_tasks_G * -> _Index `ux -> -> # *U &U _SCH_tasks_G `ui `ux 2 -> -> 0 `i `ui 130  ]
"204
[; ;Sch_16f.c: 204:             {
{
"205
[; ;Sch_16f.c: 205:                 SCH_Delete_Task(Index);
[e ( _SCH_Delete_Task (1 _Index ]
"206
[; ;Sch_16f.c: 206:             }
}
[e :U 130 ]
"207
[; ;Sch_16f.c: 207:         }
}
[e :U 129 ]
"208
[; ;Sch_16f.c: 208:     }
}
[e ++ _Index -> -> 1 `i `uc ]
[e $ < -> _Index `i -> 7 `i 126  ]
[e :U 127 ]
}
"210
[; ;Sch_16f.c: 210:     SCH_Report_Status();
[e ( _SCH_Report_Status ..  ]
"212
[; ;Sch_16f.c: 212:     SCH_Go_To_Sleep();
[e ( _SCH_Go_To_Sleep ..  ]
"213
[; ;Sch_16f.c: 213: }
[e :UE 125 ]
}
"221
[; ;Sch_16f.c: 221: tByte SCH_Delete_Task(const tByte TASK_INDEX)
[v _SCH_Delete_Task `(uc ~T0 @X0 1 ef1`Cuc ]
"222
[; ;Sch_16f.c: 222: {
{
[e :U _SCH_Delete_Task ]
"221
[; ;Sch_16f.c: 221: tByte SCH_Delete_Task(const tByte TASK_INDEX)
[v _TASK_INDEX `Cuc ~T0 @X0 1 r1 ]
"222
[; ;Sch_16f.c: 222: {
[f ]
"223
[; ;Sch_16f.c: 223:     tByte Return_code;
[v _Return_code `uc ~T0 @X0 1 a ]
"224
[; ;Sch_16f.c: 224:     if (SCH_tasks_G[TASK_INDEX].pTask == 0)
[e $ ! == . *U + &U _SCH_tasks_G * -> _TASK_INDEX `ux -> -> # *U &U _SCH_tasks_G `ui `ux 0 -> -> 0 `i `*F981 132  ]
"225
[; ;Sch_16f.c: 225:     {
{
"229
[; ;Sch_16f.c: 229:         Error_code_G = (2);
[e = _Error_code_G -> -> 2 `i `uc ]
"230
[; ;Sch_16f.c: 230:         Return_code = 1;
[e = _Return_code -> -> 1 `i `uc ]
"231
[; ;Sch_16f.c: 231:     }
}
[e $U 133  ]
"232
[; ;Sch_16f.c: 232:     else
[e :U 132 ]
"233
[; ;Sch_16f.c: 233:     {
{
"234
[; ;Sch_16f.c: 234:         Return_code = 0;
[e = _Return_code -> -> 0 `i `uc ]
"235
[; ;Sch_16f.c: 235:     }
}
[e :U 133 ]
"236
[; ;Sch_16f.c: 236:     SCH_tasks_G[TASK_INDEX].pTask = 0x0000;
[e = . *U + &U _SCH_tasks_G * -> _TASK_INDEX `ux -> -> # *U &U _SCH_tasks_G `ui `ux 0 -> -> 0 `i `*F983 ]
"237
[; ;Sch_16f.c: 237:     SCH_tasks_G[TASK_INDEX].Delay = 0;
[e = . *U + &U _SCH_tasks_G * -> _TASK_INDEX `ux -> -> # *U &U _SCH_tasks_G `ui `ux 1 -> -> 0 `i `ui ]
"238
[; ;Sch_16f.c: 238:     SCH_tasks_G[TASK_INDEX].Period = 0;
[e = . *U + &U _SCH_tasks_G * -> _TASK_INDEX `ux -> -> # *U &U _SCH_tasks_G `ui `ux 2 -> -> 0 `i `ui ]
"239
[; ;Sch_16f.c: 239:     SCH_tasks_G[TASK_INDEX].RunMe = 0;
[e = . *U + &U _SCH_tasks_G * -> _TASK_INDEX `ux -> -> # *U &U _SCH_tasks_G `ui `ux 3 -> -> 0 `i `uc ]
"240
[; ;Sch_16f.c: 240:     return Return_code;
[e ) _Return_code ]
[e $UE 131  ]
"241
[; ;Sch_16f.c: 241: }
[e :UE 131 ]
}
"248
[; ;Sch_16f.c: 248: void SCH_Report_Status(void)
[v _SCH_Report_Status `(v ~T0 @X0 1 ef ]
"249
[; ;Sch_16f.c: 249: {
{
[e :U _SCH_Report_Status ]
[f ]
"278
[; ;Sch_16f.c: 278: }
[e :UE 134 ]
}
